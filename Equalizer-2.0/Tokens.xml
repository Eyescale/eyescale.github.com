<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>debugGLError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a98706a80b21f51de11b0e4ca090de470</Anchor>
    <Abstract>Output an error OpenGL in a human-readable form to LBWARN. </Abstract>
    <DeclaredIn>gl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a64645d331a1acfb324fc21a413f89392</Anchor>
    <DeclaredIn>gl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>ac2f6592cad0c678acfe91e77d259586e</Anchor>
    <Abstract>Initialize the Equalizer fabric namespace. </Abstract>
    <DeclaredIn>fabric/init.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a6e6b3df29b8d10ddbec3e62671eda759</Anchor>
    <Abstract>De-initialize the Equalizer fabric namespace. </Abstract>
    <DeclaredIn>fabric/init.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQFABRIC_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2fabric_2version_8h.html</Path>
    <Anchor>af06dd71e95dd4b579dae21d5ee454388</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>eq/fabric/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQFABRIC_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2fabric_2version_8h.html</Path>
    <Anchor>a8af9933af7ef8c2d3968023c51ffd51e</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>eq/fabric/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQFABRIC_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2fabric_2version_8h.html</Path>
    <Anchor>a6091b26a107da8a0d2cfdff0607b9462</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>eq/fabric/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQFABRIC_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2fabric_2version_8h.html</Path>
    <Anchor>a187ceef1d2f8c08fa4a33874632cce65</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>eq/fabric/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQFABRIC_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2fabric_2version_8h.html</Path>
    <Anchor>a2993dbcce0e39ab9500d2bf0690213a4</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>eq/fabric/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQFABRIC_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2fabric_2version_8h.html</Path>
    <Anchor>a7e538ec8f9f60e74c9d643246f730d71</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>eq/fabric/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQFABRIC_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2fabric_2version_8h.html</Path>
    <Anchor>a8b3922e0dba8c4ce3c8145b204b8e4bd</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>eq/fabric/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQFABRIC_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2fabric_2version_8h.html</Path>
    <Anchor>a6f82b7e5edefadff5d07ccdb6e0af099</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>eq/fabric/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQFABRIC_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2fabric_2version_8h.html</Path>
    <Anchor>af4a54a870739fec31435bfbdce79875d</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>eq/fabric/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQSERVER_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2server_2version_8h.html</Path>
    <Anchor>ad278e299331e1797b5c144d84e60999e</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>eq/server/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQSERVER_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2server_2version_8h.html</Path>
    <Anchor>a3f1e60c37498254a628bcc8615688efb</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>eq/server/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQSERVER_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2server_2version_8h.html</Path>
    <Anchor>a74ba2c536ebe7942a80c511e7ced293d</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>eq/server/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQSERVER_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2server_2version_8h.html</Path>
    <Anchor>a1c9aeb3b812b47f98731827a46cf347e</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>eq/server/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQSERVER_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2server_2version_8h.html</Path>
    <Anchor>acbfd02662130341bbe4a3cbcf7b5b37d</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>eq/server/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQSERVER_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2server_2version_8h.html</Path>
    <Anchor>ac4069e53045dd6fc982a1ecb0565446b</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>eq/server/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQSERVER_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2server_2version_8h.html</Path>
    <Anchor>ae235ec19d8decb36a6cf71fb00059d7b</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>eq/server/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQSERVER_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2server_2version_8h.html</Path>
    <Anchor>a881e0ec57b9a7dd5412449c215868703</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>eq/server/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQSERVER_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2server_2version_8h.html</Path>
    <Anchor>aa5f699872e60a6a14a7c3f7bca4c9c71</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>eq/server/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2version_8h.html</Path>
    <Anchor>a02ebe7be38b3938d9faf916c6fbeb102</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>eq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2version_8h.html</Path>
    <Anchor>ad7da547c710f09be58da45951450f8a6</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>eq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2version_8h.html</Path>
    <Anchor>a0df4f62c11f1f3b8ebdead49f3e2401a</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>eq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2version_8h.html</Path>
    <Anchor>a67502287cac379f94b8a59b3ec3d56eb</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>eq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2version_8h.html</Path>
    <Anchor>a7c3bbb998c65862c69b5848bfd341907</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>eq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2version_8h.html</Path>
    <Anchor>ad754c7a304e7941b9d6bb2627335a3c7</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>eq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2version_8h.html</Path>
    <Anchor>a963d6a7fc7c5e2f41b46bf06acf231d3</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>eq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2version_8h.html</Path>
    <Anchor>adaa62afda067922354ad19e95594938d</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>eq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>eq_2version_8h.html</Path>
    <Anchor>a6c387d861edb31f4cfadaca0e124023b</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>eq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SEQ_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>seq_2version_8h.html</Path>
    <Anchor>a2313755916fd32e39954800affdd9fe5</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>seq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SEQ_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>seq_2version_8h.html</Path>
    <Anchor>a68d05c689f70a5756e0eaff84f679ab6</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>seq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SEQ_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>seq_2version_8h.html</Path>
    <Anchor>a5b9aada676ec5d60e9e7badb8d209354</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>seq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SEQ_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>seq_2version_8h.html</Path>
    <Anchor>ac96b678c71eaf09d7a20ca34aa49a357</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>seq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SEQ_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>seq_2version_8h.html</Path>
    <Anchor>a10b470357f2d8e2a65fda5e249f5af89</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>seq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SEQ_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>seq_2version_8h.html</Path>
    <Anchor>a046e71b3b673899ec48784fe686b09c3</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>seq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SEQ_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>seq_2version_8h.html</Path>
    <Anchor>a9beacb1d68691e986bc6224473431146</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>seq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SEQ_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>seq_2version_8h.html</Path>
    <Anchor>a7c5705de4448d172df9b6d95510cc03e</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>seq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SEQ_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>seq_2version_8h.html</Path>
    <Anchor>abf58860ba3a61ffb29c1dde1e6f7469a</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>seq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Changelog</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>Changelog.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md__jenkins_02_workspace_oss.Equalizer.documentation_build_type_Debug_platform_cscsviz-vm_sources_doc_feature_event2</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>md__jenkins_02_workspace_oss.Equalizer.documentation_build_type_Debug_platform_cscsviz-vm_sources_doc_feature_event2.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deprecated</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>deprecated.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Abstract>The Equalizer client library. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SegmentVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a4c1471cfefaf635b9add19fec1376692</Anchor>
    <Abstract>A visitor to traverse segments. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ViewVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>aa59a81e32434a6d9c6c6c04e247e287d</Anchor>
    <Abstract>A visitor to traverse views. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObserverVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a0c8e50c1785eaa97f0647fc9e0c435f2</Anchor>
    <Abstract>A visitor to traverse channels. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChannelVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>ade237ed6059a20f00d621a0f73cac2bc</Anchor>
    <Abstract>A visitor to traverse channels. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CanvasVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>aab74463e4e7c58ef24bf15933023e69d</Anchor>
    <Abstract>A visitor to traverse canvases and children. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WindowVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>abf5e93a64568fae39ebd2ff5082b7ed6</Anchor>
    <Abstract>A visitor to traverse windows and children. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PipeVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a390186eff8531767e0d413222da19309</Anchor>
    <Abstract>A visitor to traverse pipes and children. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodeVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a7a4c10f78848f55130a5528cbabea7f1</Anchor>
    <Abstract>A visitor to traverse nodes and children. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LayoutVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a69e15b27d2d210c33d0fa066d6483b6c</Anchor>
    <Abstract>A visitor to traverse layouts and children. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a6bf052e7a5016cc2d2f976aff3a61c0e</Anchor>
    <Abstract>A visitor to traverse configs and children. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServerVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a26774eac4f363052d826863b82b59107</Anchor>
    <Abstract>A visitor to traverse servers and children. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>abd775c1fb76aa72e6598700811fc8551</Anchor>
    <Abstract>A vector of pointers to eq::Config. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Servers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a1edf358d5b75f1474e4a2a36e909b010</Anchor>
    <Abstract>A vector of pointers to eq::Server. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a06bbe7fb4b6bfb37ea50417a50f3ab63</Anchor>
    <Abstract>A vector of pointers to eq::Node. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pipes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a45e9afa7b2bb759ff7d05f465b2a7bdf</Anchor>
    <Abstract>A vector of pointers to eq::Pipe. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Windows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>aafa8731f9bdf91df1842f2c70cf997eb</Anchor>
    <Abstract>A vector of pointers to eq::Window. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Channels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>ae62ee75536c515d5d875e17765b5da6b</Anchor>
    <Abstract>A vector of pointers to eq::Channel. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Frames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a9577b0b3a00e66076dcb3fcf41592e52</Anchor>
    <Abstract>A vector of pointers to eq::Frame. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Images</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a52947f23e9a24ae716443100e64219fd</Anchor>
    <Abstract>A vector of pointers to eq::Image. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Observers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a1118fb06d27a384a790c8394e3313e4e</Anchor>
    <Abstract>A vector of pointers to eq::Observer. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Canvases</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>ad6fb67248e56a637f161d71a0624337c</Anchor>
    <Abstract>A vector of pointers to eq::Canvas. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Layouts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>acfaed675008780246a4248475075bd75</Anchor>
    <Abstract>A vector of pointers to eq::Layout. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Segments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a3cf4fbb377a515d635472c0a9737f748</Anchor>
    <Abstract>A vector of pointers to eq::Segment. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Views</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>afbc86a14457111c66f1a9bad7662ea90</Anchor>
    <Abstract>A vector of pointers to eq::View. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelViewports</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a1fa1f9acc95b132bb9cc814488ef78ce</Anchor>
    <Abstract>A vector of eq::PixelViewport. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageOps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a509c4bce48b1488ad8ab0b14b38231d2</Anchor>
    <Abstract>A vector of image compositing operations. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>ab2d8e16d799bb5549d6736ffe72e0539</Anchor>
    <Abstract>A const_iterator over a eq::Config vector. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServersCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>ab491eaf5afb2d0fc4bf4b9a633ba3559</Anchor>
    <Abstract>A const_iterator over a eq::Server vector. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodesCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>aa518af18d86bfe57db343ae2f24c92ee</Anchor>
    <Abstract>A const_iterator over a eq::Node vector. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PipesCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a61cc7ba15f0bc82ceb2ed95df7a2c812</Anchor>
    <Abstract>A const_iterator over a eq::Pipe vector. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WindowsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>afb4b7d3bc5820f38b6185cdb155ce2fe</Anchor>
    <Abstract>A const_iterator over a eq::Window vector. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChannelsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a8a01115c61d80844b7f015db233c15c4</Anchor>
    <Abstract>A const_iterator over a eq::Channel vector. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FramesIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a6d4eb6c471be40e49780098a55dcf482</Anchor>
    <Abstract>An iterator over a eq::Frame vector. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FramesCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a3868e5fd8849b9f6efdd2b268276e165</Anchor>
    <Abstract>A const_iterator over a eq::Frame vector. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImagesCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a19473def5400269df9d7453a364393f9</Anchor>
    <Abstract>A const_iterator over a eq::Image vector. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObserversCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a8b4d2ddfcaed41632b78bc56e7339d65</Anchor>
    <Abstract>A const_iterator over a eq::Observer vector. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CanvasesCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>abea00811accc9c76289f81620adac4bc</Anchor>
    <Abstract>A const_iterator over a eq::Canvas vector. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LayoutsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a79d6bddbd09539aeb0ab6acb52dd6950</Anchor>
    <Abstract>A const_iterator over a eq::Layout vector. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SegmentsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a20872d7e3dc6a204976c3dea40a06c30</Anchor>
    <Abstract>A const_iterator over a eq::Segment vector. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ViewsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a7c7ed6eb726046f718b4f6f3bb7ff26d</Anchor>
    <Abstract>A const_iterator over a eq::View vector. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelViewportsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a54568cb2a70272fb054b6c117958c060</Anchor>
    <Abstract>A const_iterator over a eq::PixelViewport vector. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClientPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a5ee6f3abb96fbc2830e28a0cea662134</Anchor>
    <Abstract>A reference-counted pointer to an eq::Client. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstClientPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>ae34be59733f89d13ea90510bcf490c8b</Anchor>
    <Abstract>A reference-counted pointer to a const eq::Client. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServerPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>ad75e9ddaac491699ac5ff3424ede468a</Anchor>
    <Abstract>A reference-counted pointer to an eq::Server. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FrameDataPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a356556e9655ddc60acbdc5b082591d6a</Anchor>
    <Abstract>A reference-counted pointer to an eq::FrameData. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstFrameDataPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a2bf2449c21e4db081f73d3b99e516cfd</Anchor>
    <Abstract>A reference-counted pointer to a const eq::FrameData. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vectorub</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>aafbe9db048300ee4ec1108a77e4905f3</Anchor>
    <Abstract>A vector of bytes. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vectorus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>ad7c5e23879a07869da425424ca76cc66</Anchor>
    <Abstract>A vector of unsigned shorts. </Abstract>
    <DeclaredIn>eq/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a30f5a6d41b3138c54c751dff2a063c90</Anchor>
    <Abstract>Print the event command to the given output stream. </Abstract>
    <DeclaredIn>eventICommand.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a33139e3938e7a4241ae87e370f847296</Anchor>
    <Abstract>Print the frame data to the given output stream. </Abstract>
    <DeclaredIn>frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>debugGLError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a98706a80b21f51de11b0e4ca090de470</Anchor>
    <Abstract>Output an error OpenGL in a human-readable form to LBWARN. </Abstract>
    <DeclaredIn>gl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a64645d331a1acfb324fc21a413f89392</Anchor>
    <DeclaredIn>gl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>af224bdaf1e8bf8f1030a3dd4c801a731</Anchor>
    <Abstract>Initialize the Equalizer client library. </Abstract>
    <DeclaredIn>init.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a85338fb46ed226a7da7c8eff6a25685b</Anchor>
    <Abstract>De-initialize the Equalizer client library. </Abstract>
    <DeclaredIn>init.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a41d82225a4f4b0a66dcd8584d4ac2ea6</Anchor>
    <Abstract>Convenience function to retrieve a configuration. </Abstract>
    <DeclaredIn>init.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a17e4687a32ff1435254fa099b3ba4fc5</Anchor>
    <Abstract>Convenience function to release a configuration. </Abstract>
    <DeclaredIn>init.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>ade35d8c1d2176678b69fae6736583acb</Anchor>
    <Abstract>Print the window system name to the given output stream. </Abstract>
    <DeclaredIn>windowSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a1d1eaf90f4b99ef4cabb2e3e6ccc64dc</Anchor>
    <Abstract>co::Object serializer. </Abstract>
    <DeclaredIn>windowSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a6349520d740fad7d8c5b911911baa965</Anchor>
    <Abstract>WindowSystem deserializer. </Abstract>
    <DeclaredIn>windowSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_BUG</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a25e3df6ef4e8540f31b63c8189b38062ac93a51ac88a4544554f29b49b53b0700</Anchor>
    <Abstract>Potential bugs (4) </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_PLUGIN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a25e3df6ef4e8540f31b63c8189b38062a0f3bf12ad7ad1aa9536242d2d6ca37ed</Anchor>
    <Abstract>Plugin usage (16) </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_INIT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a25e3df6ef4e8540f31b63c8189b38062ae138bd093257a7b17cc71ad265972660</Anchor>
    <Abstract>Initialization (512) </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_ASSEMBLY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a25e3df6ef4e8540f31b63c8189b38062a923e93199e0c12a44c90bd26311987d1</Anchor>
    <Abstract>Compositing tasks (1024) </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_TASKS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a25e3df6ef4e8540f31b63c8189b38062a3a6bc02f0ee6bd2605f40cb098656dbb</Anchor>
    <Abstract>Rendering tasks (2048) </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_STATS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a25e3df6ef4e8540f31b63c8189b38062a6d02ac65656b779ad6f59e4cda5e5b7c</Anchor>
    <Abstract>Statistic events (32768) </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_CUSTOM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a25e3df6ef4e8540f31b63c8189b38062aacdc559c1a8930256f4e0729d8ca224a</Anchor>
    <Abstract>User-defined log topics (65536) </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FILTER_NEAREST</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a76581da0e992270c375201a7d4c08a98a3e4a02edd832562f768bfcf1c94d2212</Anchor>
    <Abstract>GL_NEAREST. </Abstract>
    <DeclaredIn>zoomFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FILTER_LINEAR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a76581da0e992270c375201a7d4c08a98aa631b8ed500fac707e6efcb9e778c0d7</Anchor>
    <Abstract>GL_LINEAR. </Abstract>
    <DeclaredIn>zoomFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Canvas</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_canvas.html</Path>
    <Abstract>A canvas represents a logical 2D projection surface. </Abstract>
    <DeclaredIn>canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Canvas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_canvas.html</Path>
    <Anchor>a4c217a902ae69a4e9f88be50fd9ed9d7</Anchor>
    <Abstract>Construct a new canvas. </Abstract>
    <DeclaredIn>canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Canvas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_canvas.html</Path>
    <Anchor>a4149abf29894d16f45b55fd0520144fc</Anchor>
    <Abstract>Destruct this canvas. </Abstract>
    <DeclaredIn>canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_canvas.html</Path>
    <Anchor>a5f9f94e7cc21660fa1bac525f3d7b49d</Anchor>
    <DeclaredIn>canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas&lt; Config, Canvas, Segment, Layout &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a217d5ee92bba00ece42388b8629f0729</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas&lt; Config, Canvas, Segment, Layout &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>afba34d60aae57b7eaac4cdba2616ec4c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActiveLayoutIndex</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas&lt; Config, Canvas, Segment, Layout &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a8e24e509abfe033a4d76edf3ef6ef6ba</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActiveLayout</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas&lt; Config, Canvas, Segment, Layout &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>ac7a7a7dd37398e844ae3e78cebc8cd5b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSegments</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas&lt; Config, Canvas, Segment, Layout &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a4690d08d2fbbf3926187fd130ab23e79</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLayouts</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas&lt; Config, Canvas, Segment, Layout &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>ac597f5b646ef8a194e9f8402a723f266</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWall</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas&lt; Config, Canvas, Segment, Layout &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a91af3b5eee7db059974b12a0e84adfac</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProjection</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas&lt; Config, Canvas, Segment, Layout &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a098b5e998171a19ffbaa1b7f58ac60d4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsetFrustum</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas&lt; Config, Canvas, Segment, Layout &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a1683f218771ec081436cc3868da3a1fc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useLayout</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas&lt; Config, Canvas, Segment, Layout &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a139a4ab8462bec50fb84052a69579f50</Anchor>
    <Abstract>Activate the given layout on this canvas. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas&lt; Config, Canvas, Segment, Layout &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>affe95b4bbe1909168fca3eaa2bfef1d8</Anchor>
    <Abstract>Traverse this canvas and all children using a canvas visitor. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas&lt; Config, Canvas, Segment, Layout &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a446782b9968af972bdbd57390961631d</Anchor>
    <Abstract>Const-version of accept(). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a0bdbe97f54e13fcbaf24d5c20aaa23e1</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ac82bf838d019796b4a3d898bf9a6279e</Anchor>
    <Abstract>Set the name of the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a8b8235ef3a933f40cedcac9488b5d11e</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a074a96afc7fb9e31a1d5b4368ebde972</Anchor>
    <Abstract>Set user-specific data. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ad8344492a6a8222a8f87b622709e6768</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ae8a8ec5d8f869f441f44a31d345866bb</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTasks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3aec2e67eb4948d424c673faef62c63e</Anchor>
    <Abstract>Return the set of tasks this channel might execute in the worst case. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Frustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a90be6ccf2bc8c914386f1e4c05a261c4</Anchor>
    <Abstract>Construct a new frustum. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Frustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>aa8ce28807339f6d11553d7f2f4d1fbe0</Anchor>
    <Abstract>Destruct the frustum. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a4b0e4ab0f81f698f3353947ca6b5864b</Anchor>
    <Abstract>Set the frustum using a wall description. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>ac66cfc54f75f250a0f7fa7f98463c7a5</Anchor>
    <Abstract>Set the frustum using a projection description. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a91f256d93807510db28db6e50c880477</Anchor>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>acced38d338d315945ad93794e3ffda46</Anchor>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>afebc9278e21a6641ba1baa5b117d18fe</Anchor>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsetFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a4364e9b0755bd4f933cd6a9af8addea5</Anchor>
    <Abstract>Set the last specified frustum to TYPE_NONE. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Canvases</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Canvas&lt; Config, Canvas, Segment, Layout &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a6a67e9740720e6d423a7c046c6792523</Anchor>
    <Abstract>A vector of canvases. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Segments</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Canvas&lt; Config, Canvas, Segment, Layout &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>af8784510d513b46d6a17981dbda687ca</Anchor>
    <Abstract>A vector of segments. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Layouts</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Canvas&lt; Config, Canvas, Segment, Layout &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>aa2ba02e09640fe2107984f5368f14928</Anchor>
    <Abstract>A vector of layouts. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Visitor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Canvas&lt; Config, Canvas, Segment, Layout &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a95b6899fe275cbe3214d8d41f95fd515</Anchor>
    <Abstract>A Canvas visitor. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Canvas</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas&lt; Config, Canvas, Segment, Layout &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>ab76c5c0835a408c41abce1608aa28735</Anchor>
    <Abstract>Construct a new Canvas. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas&lt; Config, Canvas, Segment, Layout &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a572f480b70277ed366df880293cb9cc4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas&lt; Config, Canvas, Segment, Layout &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>ae9c45e98c992587e367997fb22e7521f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas&lt; Config, Canvas, Segment, Layout &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a7965e8f32b362d86f366fd5da976f03e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aeaed0d358b6f67d6f3b4372d4e254484</Anchor>
    <Abstract>Construct a new Object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a4b753d5cb7ee3bd182075fa090f4ddbb</Anchor>
    <Abstract>Construct an unmapped, unregistered copy of an object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a2c301f8fda1bbd4bfb184f050a82ff91</Anchor>
    <Abstract>Destruct the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3140ce8ffc4d6dfa5cb053bc5102e84d</Anchor>
    <Abstract>NOP assignment operator. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aea00c39dfb613d9fb7843dbb68459892</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a321f24113c02e0f16830a403e03f62e9</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Channel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Abstract>A channel represents a two-dimensional viewport within a Window. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a4b5efb631f8cde0fc811b25b310170fe</Anchor>
    <Abstract>Construct a new channel. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>ac8dd112745f9978f13d563684ad4a2cf</Anchor>
    <Abstract>Destruct the channel. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a89ccd4c6b531ca20dad68583b10ad83d</Anchor>
    <Abstract>Draw a statistics overlay. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outlineViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a816b599604e8a0785875af32b48a897e</Anchor>
    <Abstract>Outline the current pixel viewport. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addResultImageListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a79b2407d0e7ed4c6ba871e68ed2b0848</Anchor>
    <Abstract>Add a listener that gets notified everytime a new frame was rendered for a destination channel...</Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeResultImageListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a7f1184d971d77f4ba6077f27e007dcc3</Anchor>
    <Abstract>Remove a result image listener to stop receival of notifications on new images. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDumpImageFileName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>ae59db72a9c744e5fc91b0236e824d271</Anchor>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStopped</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a694061ecbd8d66140b8cff13ff1ccd14</Anchor>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a86475b9a4b1d01824308c4b399d8fd60</Anchor>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a790aa4822e6b03500267e2d272769f83</Anchor>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a933571f861c9bb372d04b2873ba3be07</Anchor>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a718cc28ee2c9ab3b4c25adc4fbf9ae22</Anchor>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a6fb26856fa9092694059968ea8ba4f99</Anchor>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a4a8973a4b14b477a52dcdd413ae279c3</Anchor>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a4df50eb4872643c4ea554ffb23028a0c</Anchor>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a6a339353ec6225ab00d6e92dc96a992a</Anchor>
    <Abstract>Get the GLEW context for this channel. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getObjectManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>af67f38e7d41e2886efb9933f338333ba</Anchor>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDrawableConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a942aaa9bf5eeda57da172c97c8bea4d5</Anchor>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNativeView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a097819de35e6279ac972ec4de8f696eb</Anchor>
    <Abstract>Get the channel&amp;#39;s native view. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNativeView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a44ec3cb256b87afa7ea1eb3f2f43043c</Anchor>
    <Abstract>const-version of getNativeView() </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUniqueColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>ad0aa302c415412f1751f889433fe37e6</Anchor>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getJitter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>aed80e67570b84bbed4fa2e8f86eabaad</Anchor>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>abefa6b7079bdefe1709feb7637764947</Anchor>
    <Abstract>Get the channel&amp;#39;s current View. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a902fd1595e9ea0904bf62aba797e8802</Anchor>
    <Abstract>Const version of getView(). </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>ad53abebd56ec044962e3db5ad823125c</Anchor>
    <Abstract>Returns an orthographic frustum for 2D operations on the view. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a3fecaba7c8e3bb3c17d78edfbde8c29b</Anchor>
    <Abstract>Apply the current rendering buffer, including the color mask. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyColorMask</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>ae0481f9f290143c31ba84fc1dfc54921</Anchor>
    <Abstract>Apply the current color mask. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>add45d0fc21a9fc272d20be8cec7911cd</Anchor>
    <Abstract>Apply the OpenGL viewport for the current rendering task. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>ac9015f48ca02e7ea2c85a39190fc02d3</Anchor>
    <Abstract>Apply the frustum matrix for the current rendering task. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyPerspective</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a792f9d1b6cca4f8134e1e73e843f25e1</Anchor>
    <Abstract>Apply the perspective frustum matrix for the current rendering task. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyOrtho</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a87b4f3e89bb7a39274522d0d340f46b9</Anchor>
    <Abstract>Apply the orthographic frustum matrix for the current rendering task. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyScreenFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a1a7a1da7dcadf8604ecbeb614fe683b1</Anchor>
    <Abstract>Apply an orthographic frustum for pixel-based 2D operations. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHeadTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>ad2db425c1eba03336bd34010e6d484bd</Anchor>
    <Abstract>Apply the transformation to position the view frustum. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyPerspectiveTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a163dd22dd86146e9173b4d7e735d6f4e</Anchor>
    <Abstract>Apply the transformation to position the perspective view frustum. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyOrthoTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a8aa51ed309553db0ea5c199c965b17d9</Anchor>
    <Abstract>Apply the transformation to position the orthographic view frustum. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyOverlayState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a0cd39e6484cca13b6087326e48ffbffa</Anchor>
    <Abstract>Apply the state for pixel-based 2D overlay rendering operations. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetOverlayState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a9128c4a1882457172463355ca1cc56e4</Anchor>
    <Abstract>Reset the overlay state setup by applyOverlayState() </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a28e24e5609af8f50375d3d9adb06fa6f</Anchor>
    <Abstract>Rebind the window frame buffer. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindDrawFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>ac6e61bdf95579cea1f449b46c53e6fac</Anchor>
    <Abstract>Rebind the window draw buffer. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetRegions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>ab91f1e484ab2dcaf9d64068f2813a22f</Anchor>
    <Abstract>Reset the declared regions of interest. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>declareRegion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a85baddb513e43f2bdf84b9a6eace5c7b</Anchor>
    <Abstract>Declare a region covered by the current draw or assemble operation. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>declareRegion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a6696841c0ca30f73d5729e216df6a009</Anchor>
    <Abstract>Convenience method to declare a region in relative coordinates. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRegion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a0dc579f1c47e45171583e4577943452d</Anchor>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRegions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a96cef106c4f817614948aeefed472bc3</Anchor>
    <Abstract>Get the current regions of interest. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a8f0b0b5d2294ce17086d384e9c05a4f2</Anchor>
    <Abstract>Send a channel error event to the application node. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a39b0b2f8535f7378a6b4eb2eaa5b48f9</Anchor>
    <Abstract>Process a received event. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindow</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>ab2aaed90da9030248d5255f1cfe2070f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindow</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a6356f651199bba9b9925bc3c54b859ab</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNativePixelViewport</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a7c9bd91890416d860cde709b3139aaa0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedViewport</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a0f1854b0407fd8bf1b67019addcd20b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNearFar</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a68de09f0af71688cd6021f4dee283f4d</Anchor>
    <Abstract>Set the near and far planes for this channel. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a2b9db6dc0a855ee41beb681b5615515a</Anchor>
    <Abstract>Perform a depth-first traversal of this channel. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a97b12497d9cef79372df69f0f61ed14a</Anchor>
    <Abstract>Const-version of accept(). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCapabilities</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>ad1b9b116389b4907f2d1804bd81a2193</Anchor>
    <Abstract>Set the capabilities supported by the channel. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCapabilities</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a0a786b8cf66393ebe4633405df1469f2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxSize</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>af667b4074f02e830aa7cddfc1451926f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDrawBuffer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a861f4c291a77b09cce9e788bfd380127</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReadBuffer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a343254c0881fbcdbbe39270e930cd2a5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDrawBufferMask</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a1885ef51b70bee3b8e1d099ca7487ff7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a3943b82e9a4980f41155e2e95aa14d83</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useOrtho</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a9b3d02de45551ad52be390928bb54554</Anchor>
    <Abstract>Select perspective or orthographic rendering. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrustum</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a8e9c77f2ee356d6aa3c2b4d97dc709c2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPerspective</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a0c986a8eca7a82df6f7b05324fc92554</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOrtho</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>adfd47320b686909e4c78df306cd1498b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeadTransform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a9b48c6ea3bec6054f6503d06834e56f4</Anchor>
    <Abstract>Return the view matrix. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPerspectiveTransform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a312f67c94ba255d2196bb01f514897cf</Anchor>
    <Abstract>Return the perspective view matrix. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOrthoTransform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a9a8a69b8f063d81a1decd6320df56273</Anchor>
    <Abstract>Return the orthographic view matrix. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViewport</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>aa5df108f0004ee002e568d3181419c07</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRange</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>ad91975289a44e9f9578de0c9aa5b842c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixel</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a12d825673baf323b931e560a28114290</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSubPixel</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>ab611fbd3666f5d4651905873695d207d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoom</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>ad86daca55af983a02ddc6156b22847b2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPeriod</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a29b7a2aea745e70b62705da8e23a771c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPhase</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>aa31a1cd7f63257809d99ed0386d2a17c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelOffset</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a12c18e0d277dc35920e4ca8941f5f63b</Anchor>
    <Abstract>Get the channel&amp;#39;s current position wrt the destination channel. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEye</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>ae765a57b67dcd806fb5906ec246dfaa1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOverdraw</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a33e206b85fb85058fa829f8d3cb425af</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTaskID</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a3a42f9b72a9a918659c83b06b9075134</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContext</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a6c8bf1ea71680c7310e8da842f0e114c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>ab95924efea8b5108e4310807c19dfe7a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSAttribute</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a347c8bdf0dfe51459692ba75feb9d2b0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a0bdbe97f54e13fcbaf24d5c20aaa23e1</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ac82bf838d019796b4a3d898bf9a6279e</Anchor>
    <Abstract>Set the name of the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a8b8235ef3a933f40cedcac9488b5d11e</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a074a96afc7fb9e31a1d5b4368ebde972</Anchor>
    <Abstract>Set user-specific data. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ad8344492a6a8222a8f87b622709e6768</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ae8a8ec5d8f869f441f44a31d345866bb</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTasks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3aec2e67eb4948d424c673faef62c63e</Anchor>
    <Abstract>Return the set of tasks this channel might execute in the worst case. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameTilesStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a85621d74c282086aef9df3f15b6eb6ed</Anchor>
    <Abstract>Start a batch of tile rendering operations. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameTilesFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>abe1a26283528657359e69b3623b9059f</Anchor>
    <Abstract>Finish a batch of tile rendering operations. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyViewportChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a1e084c76e73f195daaff20afd2e26325</Anchor>
    <Abstract>Notification that parameters influencing the vp/pvp have changed. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyStopFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a00704e350faa8c49fbfa1ffe39f26185</Anchor>
    <Abstract>Notify interruption of the rendering. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>ace53101eaf8402782ca6265716c44b3b</Anchor>
    <Abstract>Start a frame by unlocking all child resources. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a69cf5c30215e5c0616df52d1e1757e7c</Anchor>
    <Abstract>Signal the completion of a frame to the parent. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseFrameLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a4e2809be4042b8ff84d4665c62c83b9a</Anchor>
    <Abstract>Release the local synchronization of the parent for a frame. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupAssemblyState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a9f31eb3cb9222c2090ec4936dbf39551</Anchor>
    <Abstract>Setup the OpenGL state for a readback or assemble operation. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetAssemblyState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a8766d34a4e85d12479f12b02cf4e0f52</Anchor>
    <Abstract>Reset the OpenGL state after an assembly operation. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>ac0742ec909a2946c11f868661b30a85b</Anchor>
    <Abstract>Initialize this channel. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a314d2b13a13b1e0fffc9afb5813a79c6</Anchor>
    <Abstract>Exit this channel. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a3620d9ac6d1e69bdbd93ec75edb346aa</Anchor>
    <Abstract>Start rendering a frame. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a8a7ee4dfa938bde9ae0aa800d56af8ba</Anchor>
    <Abstract>Finish rendering a frame. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameDrawFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a653611847320b3cc6d618bb35e8f4a59</Anchor>
    <Abstract>Finish drawing. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameClear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>ae4d0485535bef510d0131135669f819d</Anchor>
    <Abstract>Clear the frame buffer. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameDraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a4b87973a577de5cd56fa6ead587d2d47</Anchor>
    <Abstract>Draw the scene. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameAssemble</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a1cacbf86f689e38824ea6447b8422731</Anchor>
    <Abstract>Assemble all input frames. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameReadback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>afb89b0254344594b1bf81361edb827b0</Anchor>
    <Abstract>Read back the rendered frame buffer into the output frames. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameViewStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a6bb2d20cc605e559db622da897f8a3ba</Anchor>
    <Abstract>Start updating a destination channel. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameViewFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a5fbcbf3881247e60e9d42f7630ce3a57</Anchor>
    <Abstract>Finish updating a destination channel. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameDrawOverlay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel.html</Path>
    <Anchor>a2be5f6bdd6c7e4bf79332f2dc774ee58</Anchor>
    <Abstract>Draw 2D overlay content on a destination channel. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Channel</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>ab6993ec8fd0d503af791656d19390201</Anchor>
    <Abstract>Construct a new channel. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Channel</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a7ccc7384abdd3235d9682063249d14d6</Anchor>
    <Abstract>Construct a copy of a channel (view/segment dest). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aeaed0d358b6f67d6f3b4372d4e254484</Anchor>
    <Abstract>Construct a new Object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a4b753d5cb7ee3bd182075fa090f4ddbb</Anchor>
    <Abstract>Construct an unmapped, unregistered copy of an object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a2c301f8fda1bbd4bfb184f050a82ff91</Anchor>
    <Abstract>Destruct the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3140ce8ffc4d6dfa5cb053bc5102e84d</Anchor>
    <Abstract>NOP assignment operator. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aea00c39dfb613d9fb7843dbb68459892</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a321f24113c02e0f16830a403e03f62e9</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Visitor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>ae05bc99a89d01a880b5fefe8fb00c4fb</Anchor>
    <Abstract>The channel visitor type. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Parent</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a8e9fd882027bb6f2d5597c2a470ab686</Anchor>
    <Abstract>The parent window type. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttributeString</Name>
      <APILanguage>unknown</APILanguage>
      <Type>clm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a476015e957cef7f0e52d0b91a3197f43</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSAttributeString</Name>
      <APILanguage>unknown</APILanguage>
      <Type>clm</Type>
      <Scope>eq::fabric::Channel&lt; Window, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a796eadb73b83c74dd37c9350563661b9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::ChannelStatistics</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::ChannelStatistics</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel_statistics.html</Path>
    <Abstract>Samples one channel statistics event. </Abstract>
    <DeclaredIn>channelStatistics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChannelStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ChannelStatistics</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel_statistics.html</Path>
    <Anchor>aefa82b3e32c7df1effe45a8cdc482127</Anchor>
    <Abstract>Construct a statistics sampler and sample the start time. </Abstract>
    <DeclaredIn>channelStatistics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ChannelStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ChannelStatistics</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_channel_statistics.html</Path>
    <Anchor>a66bc006f6743cb8c9c5a72397daf1655</Anchor>
    <Abstract>Destruct the sampler, sample the end time and send the event. </Abstract>
    <DeclaredIn>channelStatistics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StatisticSampler</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::StatisticSampler&lt; Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_statistic_sampler.html</Path>
    <Anchor>a23061fad41a6239a00df8a6ba0f45611</Anchor>
    <Abstract>Construct a new statistics sampler. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~StatisticSampler</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::StatisticSampler&lt; Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_statistic_sampler.html</Path>
    <Anchor>a56d51f434be5150397265cd274f9b2b0</Anchor>
    <Abstract>Destruct and finish statistics sampling. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statistic</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>eq::StatisticSampler&lt; Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_statistic_sampler.html</Path>
    <Anchor>ae2565c1c86fbeb4b119f77c0d67132bf</Anchor>
    <Abstract>The statistics event. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Client</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Abstract>The client represents a network node of the application in the cluster. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Client</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>a7468c5b117ccb496cc70f4f7211ef383</Anchor>
    <Abstract>Construct a new client. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>connectServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>a9234061232438c2429e1af9497b10fe6</Anchor>
    <Abstract>Open and connect an Equalizer server to the local client. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disconnectServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>a34ce1903c384050e0612e31b273fc9d4</Anchor>
    <Abstract>Disconnect and close the connection to an Equalizer server. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>ab9bc95e0088775873ab92dafe6b4f17c</Anchor>
    <Abstract>Initialize a local, listening node. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>aa0dde520d14f5ff0691b1063c5cd9d97</Anchor>
    <Abstract>De-initialize a local, listening node. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasCommands</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>afd626fef71059a004eaf14098d963d0e</Anchor>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>ab7bab87ac3a32af25ad93600b8eab73c</Anchor>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMainThreadQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>ac590187edae4f1e11c5009fac8d7e397</Anchor>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interruptMainThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>a58190dc71ad723e38dcd925dc857ef60</Anchor>
    <Abstract>Experimental: interrupt main thread queue. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>a2ad720e9fd9040d18e9b6f35dac8d004</Anchor>
    <Abstract>Set the name of the configuration. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>a382b68304cb9aa4cb032c6dce137d3a0</Anchor>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addActiveLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>acd55cbbe34673ad4fc65f0d55b8d38f2</Anchor>
    <Abstract>Add an active layout programmatically, like –eq-layout does. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>connectServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_client.html</Path>
    <Anchor>ac30bf80085992ca2f13b0999f6a2fe38</Anchor>
    <Abstract>Open and connect an Equalizer server to the local client. </Abstract>
    <DeclaredIn>fabric/client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disconnectServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_client.html</Path>
    <Anchor>a980e2993575a605df5d80b1c9e0eee5d</Anchor>
    <Abstract>Disconnect and close the connection to an Equalizer server. </Abstract>
    <DeclaredIn>fabric/client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processCommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_client.html</Path>
    <Anchor>a0d4f70786d5d43eef636d56ee3680fef</Anchor>
    <Abstract>Get and process one pending command from the node command queue. </Abstract>
    <DeclaredIn>fabric/client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Client</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>ac4fa3ba5faa5170e5929dc48787f36a1</Anchor>
    <Abstract>Destruct the client. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clientLoop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>acc985156e76c880bfe65c86c6a913290</Anchor>
    <Abstract>Implements the processing loop for render clients. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitClient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>ac4044ff611e919dfabb9a72b17501f5e</Anchor>
    <Abstract>Exit the process cleanly on render clients. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Client</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_client.html</Path>
    <Anchor>a09455052d367d050474cc28a07837b18</Anchor>
    <Abstract>Construct a new client. </Abstract>
    <DeclaredIn>fabric/client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::CommandQueue</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_command_queue.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_command_queue.html</Path>
    <Anchor>a315df58c0e587eb9419c959344e614f8</Anchor>
    <DeclaredIn>commandQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pushFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_command_queue.html</Path>
    <Anchor>abff5754cc5829c8431f0bd744effad63</Anchor>
    <DeclaredIn>commandQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_command_queue.html</Path>
    <Anchor>ad110b5d53e874acaa945e3ce08d4112c</Anchor>
    <DeclaredIn>commandQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>popAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_command_queue.html</Path>
    <Anchor>a2d92055277504dfc8c889c486dff3491</Anchor>
    <DeclaredIn>commandQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tryPop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_command_queue.html</Path>
    <Anchor>a1384277bbc9ef827ab5952c3829c1434</Anchor>
    <DeclaredIn>commandQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetWaitTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_command_queue.html</Path>
    <Anchor>a800b9a2e0c7d68f8108b56b41fcde2d4</Anchor>
    <DeclaredIn>commandQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_command_queue.html</Path>
    <Anchor>a9324f490402ed563b24416f4b4bdddc3</Anchor>
    <DeclaredIn>commandQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Compositor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_compositor.html</Path>
    <Abstract>A set of functions performing compositing for a set of input frames. </Abstract>
    <DeclaredIn>compositor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assembleFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_compositor.html</Path>
    <Anchor>a8a0b77067d7d37dfd108de28c5ac58c2</Anchor>
    <Abstract>Assemble all frames in an arbitrary order using the fastest implemented algorithm on the given channe...</Abstract>
    <DeclaredIn>compositor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blendFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_compositor.html</Path>
    <Anchor>af4eaccc9204ab4185808ba895f58c20c</Anchor>
    <Abstract>Assemble all frames in the given order using the fastest implemented algorithm on the given channel...</Abstract>
    <DeclaredIn>compositor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assembleFramesUnsorted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_compositor.html</Path>
    <Anchor>a58197472aea059c279ab715b754360ae</Anchor>
    <Abstract>Assemble all frames in the order they become available directly on the given channel. </Abstract>
    <DeclaredIn>compositor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assembleFramesCPU</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_compositor.html</Path>
    <Anchor>a2be4dd668049edf9c97078d89051497b</Anchor>
    <Abstract>Assemble all frames in the given order in a memory buffer using the CPU before assembling the result ...</Abstract>
    <DeclaredIn>compositor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mergeFramesCPU</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_compositor.html</Path>
    <Anchor>a8de00a26bba126e79798db363fd7622b</Anchor>
    <Abstract>Merge the provided frames in the given order into one image in main memory. </Abstract>
    <DeclaredIn>compositor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assembleFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_compositor.html</Path>
    <Anchor>ae94eb1d782b17d82191e06a8f46fd6c3</Anchor>
    <Abstract>Assemble a frame into the frame buffer using the default algorithm. </Abstract>
    <DeclaredIn>compositor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assembleImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_compositor.html</Path>
    <Anchor>afe900876b706fd397c6798ab51baeae9</Anchor>
    <Abstract>Assemble an image into the frame buffer. </Abstract>
    <DeclaredIn>compositor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupStencilBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_compositor.html</Path>
    <Anchor>a97300bd62ea1eb760a83d7acad936b54</Anchor>
    <Abstract>Setup the stencil buffer for a pixel compound recomposition. </Abstract>
    <DeclaredIn>compositor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearStencilBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_compositor.html</Path>
    <Anchor>aad0541a100a8ad26a9ab021d4708c72a</Anchor>
    <Abstract>Clear the stencil buffer after a pixel compound recomposition. </Abstract>
    <DeclaredIn>compositor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupAssemblyState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_compositor.html</Path>
    <Anchor>a4868cd046149e1903193f51f55f99249</Anchor>
    <Abstract>Setup the OpenGL state. </Abstract>
    <DeclaredIn>compositor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetAssemblyState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_compositor.html</Path>
    <Anchor>ab188dfdd905dcdf208b2d24dd64378f1</Anchor>
    <Abstract>Reset the OpenGL state. </Abstract>
    <DeclaredIn>compositor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assembleImage2D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_compositor.html</Path>
    <Anchor>ae2e07e8706e6c20a633ae014701200b1</Anchor>
    <Abstract>Start a tile-based assembly of the image color attachment. </Abstract>
    <DeclaredIn>compositor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assembleImageDB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_compositor.html</Path>
    <Anchor>a2f76048bed9177cf6b49de19c7524404</Anchor>
    <Abstract>Start a Z-based assembly of the image color and depth attachment. </Abstract>
    <DeclaredIn>compositor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assembleImageDB_FF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_compositor.html</Path>
    <Anchor>a6023baf5bc17314a394b255a5d8e994b</Anchor>
    <Abstract>Start a Z-based assembly of the image color and depth attachment, based on OpenGL 1...</Abstract>
    <DeclaredIn>compositor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assembleImageDB_GLSL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_compositor.html</Path>
    <Anchor>aa6739af0b1882109f1f610436ab752db</Anchor>
    <Abstract>Start a Z-based assembly of the image color and depth attachment, using GLSL. </Abstract>
    <DeclaredIn>compositor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>declareRegion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_compositor.html</Path>
    <Anchor>a1339e1e5556a4d497b2b5fdced8ccb45</Anchor>
    <Abstract>Declare the region covered by the image on the operation&amp;#39;s channel. </Abstract>
    <DeclaredIn>compositor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startWaitFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_compositor.html</Path>
    <Anchor>a467a923b521eefa659b8bfc411200ed0</Anchor>
    <Abstract>Start waiting on a set of input frames. </Abstract>
    <DeclaredIn>compositor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_compositor.html</Path>
    <Anchor>a64a6a780a7d573d55afc143956265dea</Anchor>
    <Abstract>Wait for one input frame from a set of pending frames. </Abstract>
    <DeclaredIn>compositor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Config</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Abstract>A configuration is a visualization session driven by an application. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Super</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a39e01fa25f0165925890593031920850</Anchor>
    <Abstract>base class </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Observers</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Config&lt; Server, Config, Observer, Layout, Canvas, Node, ConfigVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a850edb71abce1711d6216424b7a1c02d</Anchor>
    <Abstract>A vector of observers. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Layouts</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Config&lt; Server, Config, Observer, Layout, Canvas, Node, ConfigVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a0f16d3e676d5c5292ea75b912e067f57</Anchor>
    <Abstract>A vector of layouts. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Canvases</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Config&lt; Server, Config, Observer, Layout, Canvas, Node, ConfigVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a7d274a34b4ea7b874af6c16b2a4054af</Anchor>
    <Abstract>A vector of canvases. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Nodes</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Config&lt; Server, Config, Observer, Layout, Canvas, Node, ConfigVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>ae3262044735bd0177588b1d2d224a4d8</Anchor>
    <Abstract>A vector of nodes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Config</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a6e16d09d3123ec7d879f338f238eb9da</Anchor>
    <Abstract>Construct a new config. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Config</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a694907535af68cc00cd1933b234d53f6</Anchor>
    <Abstract>Destruct a config. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a446be196bc55f0e192fe787566f080da</Anchor>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a9ef11d1099a6e5cdceeed32c51ed5201</Anchor>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getApplicationNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>ad1993acf057106f8d7c2269a0536cc34</Anchor>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a4c4077ff7c43b80fc95b45ac556ef7bb</Anchor>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFinishedFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a7368d87a3b6c6b7b38ead8e41fc28fd1</Anchor>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a119ed88b644541fa04b002529019e844</Anchor>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a65003f2492e1cfa0c6fa82f2083b33c8</Anchor>
    <Abstract>Stop the config. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>aa69c4896e802b06de4b11338df206bbe</Anchor>
    <Abstract>Get the current time in milliseconds. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a7d2aa276ab3a62d024fd1cc868bf8c1e</Anchor>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a76f9ba8a2d688239b305f7d3c2aa9995</Anchor>
    <Abstract>Initialize this configuration. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a979a9b28d512500d198c900cafa25207</Anchor>
    <Abstract>Exit this configuration. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a8a331cc9d8b372f06c2a865f6d5c9301</Anchor>
    <Abstract>Update the configuration. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>af33fd1f046bdf139ae98f7d020053dc6</Anchor>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>ad9125e059052fcd6e503017bfe34a9d5</Anchor>
    <Abstract>Register a distributed object. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deregisterObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a13108dd32ed655e2ceb630f3719714bb</Anchor>
    <Abstract>Deregister a distributed object. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a26d436104e9539d7c706422fd553a6a8</Anchor>
    <Abstract>Map a distributed object. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObjectNB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>aa4f47eadd4ce3127b6f1c99949713e18</Anchor>
    <Abstract>Start mapping a distributed object. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObjectNB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>aee66dbde1d942e3b56d4b6166075fb50</Anchor>
    <Abstract>Start mapping a distributed object from a known master. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObjectSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a3f867528ba12bf1ebdfb7a15fe31fd8f</Anchor>
    <Abstract>Finalize the mapping of a distributed object. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmapObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>af03719006e9c97a2370d44b7c4186c12</Anchor>
    <Abstract>Unmap a mapped object. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>syncObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a66ea7f80be850cf24718d4bc480f1944</Anchor>
    <Abstract>Synchronize the local object with a remote object. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>afeaf5ab737f8f54845c6f3e96e13e2fe</Anchor>
    <Abstract>Request a new frame of rendering. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a46f69fb7841f0947475bdd79b7f935c4</Anchor>
    <Abstract>Finish the rendering of a frame. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishAllFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>ad120818462e944f025aa63d23086ead8</Anchor>
    <Abstract>Finish rendering all pending frames. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseFrameLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>aea0bf8b8550ea92d686d26890c419b16</Anchor>
    <Abstract>Release the local synchronization of the config for a frame. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a1e1efc1d5342cfa27566f622340c6ca5</Anchor>
    <Abstract>Asynchronously signal all channels to interrupt their rendering. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a0808489c359f6889e23d6aa758589852</Anchor>
    <Abstract>Send an event to the application node. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a098218642e60163316858611304ca47e</Anchor>
    <Abstract>Send an error event to the application node. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getErrors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>abbc863e212eaf7f45462e5912f5439cb</Anchor>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNextEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a2b6bbaa0f874dc742510f996a1211d70</Anchor>
    <Abstract>Get the next event. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a8c3beb13c7e9874568c75149f5beb9ba</Anchor>
    <Abstract>Handle the given event. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>aad119b8321df9b1199ae465c464fdc34</Anchor>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>a6097b7d6b31380ae7e87ced228ba5e99</Anchor>
    <Abstract>Handle all config events. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addStatistic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config.html</Path>
    <Anchor>ab098337c93b99572071c3adcd4d95fff</Anchor>
    <Abstract>Add an statistic event to the statistics overlay. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config&lt; Server, Config, Observer, Layout, Canvas, Node, ConfigVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>ae352b2c77d4308ad04eddcab7c83393d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config&lt; Server, Config, Observer, Layout, Canvas, Node, ConfigVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a72673030ff85c9023a64895670efb897</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getObservers</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config&lt; Server, Config, Observer, Layout, Canvas, Node, ConfigVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a269be2ca62737368d6cca3187b88ccb4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLayouts</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config&lt; Server, Config, Observer, Layout, Canvas, Node, ConfigVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>aa46e4fa5672c9fe4c60056ce5fa5eae5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCanvases</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config&lt; Server, Config, Observer, Layout, Canvas, Node, ConfigVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a74d793421e8c852feb3be32073a05efc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNodes</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config&lt; Server, Config, Observer, Layout, Canvas, Node, ConfigVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>aa2bd8ef50b23c12d31971d1e6fd249d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config&lt; Server, Config, Observer, Layout, Canvas, Node, ConfigVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a3c11a50231106962f3e6ad8ea67695d6</Anchor>
    <Abstract>Perform a depth-first traversal of this config. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config&lt; Server, Config, Observer, Layout, Canvas, Node, ConfigVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a59ec77e861d9acbf81e5c23ef643f68a</Anchor>
    <Abstract>Const-version of accept(). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config&lt; Server, Config, Observer, Layout, Canvas, Node, ConfigVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a800bad8102922f984cdcdc7ee920e7b9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config&lt; Server, Config, Observer, Layout, Canvas, Node, ConfigVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a639e012504a7ad8a89d3a3964702d468</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config&lt; Server, Config, Observer, Layout, Canvas, Node, ConfigVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>acdca4d4ba2ce8836c34eb648f1d0abec</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config&lt; Server, Config, Observer, Layout, Canvas, Node, ConfigVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>aeaf4e3ff967956b237fee6dd03fe85f0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLatency</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config&lt; Server, Config, Observer, Layout, Canvas, Node, ConfigVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a67b61dbe9d02da6ba06f19a605bfd7d8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFAttribute</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config&lt; Server, Config, Observer, Layout, Canvas, Node, ConfigVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a950cc441120145cc27cefd7d344de4ff</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config&lt; Server, Config, Observer, Layout, Canvas, Node, ConfigVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>af8ee449a7b2ef9d0f5d0daf9fb7b61de</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a0bdbe97f54e13fcbaf24d5c20aaa23e1</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ac82bf838d019796b4a3d898bf9a6279e</Anchor>
    <Abstract>Set the name of the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a8b8235ef3a933f40cedcac9488b5d11e</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a074a96afc7fb9e31a1d5b4368ebde972</Anchor>
    <Abstract>Set user-specific data. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ad8344492a6a8222a8f87b622709e6768</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ae8a8ec5d8f869f441f44a31d345866bb</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTasks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3aec2e67eb4948d424c673faef62c63e</Anchor>
    <Abstract>Return the set of tasks this channel might execute in the worst case. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aeaed0d358b6f67d6f3b4372d4e254484</Anchor>
    <Abstract>Construct a new Object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a4b753d5cb7ee3bd182075fa090f4ddbb</Anchor>
    <Abstract>Construct an unmapped, unregistered copy of an object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a2c301f8fda1bbd4bfb184f050a82ff91</Anchor>
    <Abstract>Destruct the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3140ce8ffc4d6dfa5cb053bc5102e84d</Anchor>
    <Abstract>NOP assignment operator. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aea00c39dfb613d9fb7843dbb68459892</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a321f24113c02e0f16830a403e03f62e9</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::ConfigStatistics</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::ConfigStatistics</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config_statistics.html</Path>
    <Abstract>Samples one Config statistics event. </Abstract>
    <DeclaredIn>configStatistics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ConfigStatistics</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config_statistics.html</Path>
    <Anchor>addc3fe54ddeb43fcb444a6c93328ee0e</Anchor>
    <Abstract>Construct a statistics sampler and sample the start time. </Abstract>
    <DeclaredIn>configStatistics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ConfigStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ConfigStatistics</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_config_statistics.html</Path>
    <Anchor>a373dbbd1fcdbd01003e5cd9e64e30234</Anchor>
    <Abstract>Destruct the sampler, sample the end time and send the event. </Abstract>
    <DeclaredIn>configStatistics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StatisticSampler</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::StatisticSampler&lt; Config &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_statistic_sampler.html</Path>
    <Anchor>a23061fad41a6239a00df8a6ba0f45611</Anchor>
    <Abstract>Construct a new statistics sampler. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~StatisticSampler</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::StatisticSampler&lt; Config &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_statistic_sampler.html</Path>
    <Anchor>a56d51f434be5150397265cd274f9b2b0</Anchor>
    <Abstract>Destruct and finish statistics sampling. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statistic</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>eq::StatisticSampler&lt; Config &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_statistic_sampler.html</Path>
    <Anchor>ae2565c1c86fbeb4b119f77c0d67132bf</Anchor>
    <Abstract>The statistics event. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::EventHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_event_handler.html</Path>
    <Abstract>Base class for window system-specific event handlers. </Abstract>
    <DeclaredIn>eventHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_event_handler.html</Path>
    <Anchor>a0100480171a68e5bd914f81caa2abe6c</Anchor>
    <Abstract>Construct a new event handler. </Abstract>
    <DeclaredIn>eventHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~EventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_event_handler.html</Path>
    <Anchor>ae2509d24c8148b94b02756560970c4e9</Anchor>
    <Abstract>Destruct the event handler. </Abstract>
    <DeclaredIn>eventHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::EventICommand</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::EventICommand</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_event_i_command.html</Path>
    <Abstract>A command specialization for config events. </Abstract>
    <DeclaredIn>eventICommand.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EventICommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::EventICommand</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_event_i_command.html</Path>
    <Anchor>a26f411ec55e4aff9d9dcf4d727a58823</Anchor>
    <Abstract>Copy-construct an event command. </Abstract>
    <DeclaredIn>eventICommand.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~EventICommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::EventICommand</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_event_i_command.html</Path>
    <Anchor>a03badac7929f7c0333de483af760aa9c</Anchor>
    <Abstract>Destruct an event command. </Abstract>
    <DeclaredIn>eventICommand.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEventType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::EventICommand</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_event_i_command.html</Path>
    <Anchor>a445a8b38a43e538b5d1a8e9faa305b31</Anchor>
    <Abstract>Returns the event type. </Abstract>
    <DeclaredIn>eventICommand.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Exception</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Exception</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_exception.html</Path>
    <Abstract>Exception class for Equalizer operations. </Abstract>
    <DeclaredIn>exception.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Exception</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Exception</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_exception.html</Path>
    <Anchor>a8a9b055074699e47363ea1059d0d79b5</Anchor>
    <Abstract>Construct a new Exception. </Abstract>
    <DeclaredIn>exception.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Exception</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Exception</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_exception.html</Path>
    <Anchor>ab66c682f41883a718babfc1dc48cbc3c</Anchor>
    <Abstract>Destruct this exception. </Abstract>
    <DeclaredIn>exception.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Frame</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame.html</Path>
    <Abstract>A holder for a frame data and related parameters. </Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Frame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame.html</Path>
    <Anchor>a07636837fb142545f772a75207b646ed</Anchor>
    <Abstract>Construct a new frame. </Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Frame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame.html</Path>
    <Anchor>a2937426444c1e75b26fcb1d3d5e53736</Anchor>
    <Abstract>Destruct the frame. </Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame.html</Path>
    <Anchor>a777afd35f435a42e24b348ecaefa01b5</Anchor>
    <Abstract>Set the filter applied to zoomed assemble operations. </Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame.html</Path>
    <Anchor>a3ef32d2505c5c8f5a837409ba91f2dd8</Anchor>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImages</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame.html</Path>
    <Anchor>a1c516a1af5a71362fe78937238b95c3c</Anchor>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame.html</Path>
    <Anchor>a12c49ce5bc03a220c4d0bcb686d92c9c</Anchor>
    <Abstract>Set the data for this frame. </Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame.html</Path>
    <Anchor>a032a4de05e725739ef6a81e44417083b</Anchor>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame.html</Path>
    <Anchor>ab95234830b0660392112a9e26f37dd8c</Anchor>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame.html</Path>
    <Anchor>a943e47059750293e1736fd1fd803281c</Anchor>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame.html</Path>
    <Anchor>ac33170fe48a0dcd54a13a24b60fff656</Anchor>
    <Abstract>Disable the usage of a frame buffer attachment for all images. </Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlphaUsage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame.html</Path>
    <Anchor>a99a52418d2aa576ef6dcc09136ea66ce</Anchor>
    <Abstract>Set alpha usage for newly allocated images. </Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame.html</Path>
    <Anchor>a5f599c1aad79da41b2f3c8b7971e2e73</Anchor>
    <Abstract>Set the minimum quality after compression. </Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useCompressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame.html</Path>
    <Anchor>ac947e4ea82bf98d03106ca0bf3a21209</Anchor>
    <Abstract>Sets a compressor for compression for following transmissions. </Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame.html</Path>
    <Anchor>a5fd535ed4bef13b171c1c961fb78d473</Anchor>
    <Abstract>Read back a set of images. </Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startReadback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame.html</Path>
    <Anchor>a6820b7d36a7d2186a3661890eb31a762</Anchor>
    <Abstract>Start reading back a set of images for this frame. </Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame.html</Path>
    <Anchor>a9d63734156987fa799962c37d336a71b</Anchor>
    <Abstract>Set the frame ready. </Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame.html</Path>
    <Anchor>a56d91e5fe6cd1c62b95944b7f127e1b7</Anchor>
    <Abstract>Test the readiness of the frame. </Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame.html</Path>
    <Anchor>ac301c5a3efbd655b680c6f898b55603e</Anchor>
    <Abstract>Wait for the frame to become available. </Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame.html</Path>
    <Anchor>a9b6df51ad4d7f069dae1c408b0222340</Anchor>
    <Abstract>Add a listener which will be incremented when the frame is ready. </Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame.html</Path>
    <Anchor>a01b81c7b9b385ecfb8f131ddcb3d5cad</Anchor>
    <Abstract>Remove a frame listener. </Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Frame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame.html</Path>
    <Anchor>a474f3cc2bfc87dfc3e0a098e6ace38ea</Anchor>
    <Abstract>Construct a new frame. </Abstract>
    <DeclaredIn>fabric/frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame.html</Path>
    <Anchor>ad7e22d30497de38fc27c84621b14e692</Anchor>
    <Abstract>Set the name of the frame. </Abstract>
    <DeclaredIn>fabric/frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame.html</Path>
    <Anchor>afbb7bca8359fa68db077483ac17376fb</Anchor>
    <DeclaredIn>fabric/frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame.html</Path>
    <Anchor>a4fbf210c42f4de8ae10bd37e4fc1d8f5</Anchor>
    <DeclaredIn>fabric/frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame.html</Path>
    <Anchor>a7b1a0bf112a1081024fa1a78a42f97b6</Anchor>
    <Abstract>Set the position of the frame wrt the channel. </Abstract>
    <DeclaredIn>fabric/frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame.html</Path>
    <Anchor>a821e42fcb28f9eb8ca9b2a46f0ec8eda</Anchor>
    <Abstract>Set the zoom for this frame holder. </Abstract>
    <DeclaredIn>fabric/frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame.html</Path>
    <Anchor>a22c8cbcc857ca3dfad31ad235f57edb0</Anchor>
    <DeclaredIn>fabric/frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::FrameData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame_data.html</Path>
    <Abstract>A holder for multiple images. </Abstract>
    <DeclaredIn>frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FrameData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame_data.html</Path>
    <Anchor>ac1e48c545eb2f550d7374008a8b48c05</Anchor>
    <Abstract>Construct a new frame data holder. </Abstract>
    <DeclaredIn>frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FrameData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame_data.html</Path>
    <Anchor>a0a0a476c62a1c529fd83a9a77c31ff9a</Anchor>
    <Abstract>Destruct this frame data. </Abstract>
    <DeclaredIn>frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImages</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame_data.html</Path>
    <Anchor>ad34e3158a5e297be3ec8250e052111eb</Anchor>
    <Abstract>The images of this frame data holder. </Abstract>
    <DeclaredIn>frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlphaUsage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame_data.html</Path>
    <Anchor>a93e135715ebbdea9f2450cd7b50f59d0</Anchor>
    <Abstract>Set alpha usage for newly allocated images. </Abstract>
    <DeclaredIn>frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame_data.html</Path>
    <Anchor>af821a676d33493d14efacbfc3ea7ffc7</Anchor>
    <Abstract>Set the minimum quality after download and compression. </Abstract>
    <DeclaredIn>frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useCompressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame_data.html</Path>
    <Anchor>a88e2418a5cb7665e70edf7a06de12234</Anchor>
    <Abstract>Sets a compressor which will be allocated and used during transmit of the image buffer. </Abstract>
    <DeclaredIn>frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
    <Anchor>a16e2a717f08ebf3ae3467172b230193c</Anchor>
    <Abstract>Set the covered area for readbacks. </Abstract>
    <DeclaredIn>fabric/frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
    <Anchor>a51d662e5f30ca790bfd5ff94d28fee24</Anchor>
    <DeclaredIn>fabric/frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
    <Anchor>af92cfaf40bb29e7f4b49bef21a4df838</Anchor>
    <Abstract>Set the (color, depth) buffers of the source frame. </Abstract>
    <DeclaredIn>fabric/frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
    <Anchor>ac8bec7ee83b160e4452bfbbd940b3975</Anchor>
    <Abstract>Disable the usage of a frame buffer attachment for all images. </Abstract>
    <DeclaredIn>fabric/frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
    <Anchor>a2a9a3826530aa64e6c6726098d512b48</Anchor>
    <DeclaredIn>fabric/frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
    <Anchor>a9814f9d86ffba160d85d4a175227287e</Anchor>
    <Abstract>Set the source context decomposition wrt dest channel. </Abstract>
    <DeclaredIn>fabric/frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
    <Anchor>ad08ad8b888e09b691a5febd4960a9974</Anchor>
    <DeclaredIn>fabric/frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
    <Anchor>a51757c4f603734536288105d83dab24a</Anchor>
    <Abstract>Set additional zoom for input frames. </Abstract>
    <DeclaredIn>fabric/frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
    <Anchor>ae11afb9d9f6e556d9d8b1dea79811ec6</Anchor>
    <DeclaredIn>fabric/frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
    <Anchor>ade716cc2fbf98e0f306ea001e05000af</Anchor>
    <Abstract>Set the frame storage type. </Abstract>
    <DeclaredIn>fabric/frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
    <Anchor>a6773216e14924598aaa98035fa9a739e</Anchor>
    <DeclaredIn>fabric/frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Listener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame_data.html</Path>
    <Anchor>a5cfb97ef32365ae884508af41be2d373</Anchor>
    <Abstract>Ready listener. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame_data.html</Path>
    <Anchor>ad6a0f03a731443f8ef0952bf29e5c60d</Anchor>
    <Abstract>Allocate and add a new image. </Abstract>
    <DeclaredIn>frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame_data.html</Path>
    <Anchor>a669cf295ca699e0c97de1444bea45648</Anchor>
    <Abstract>Clear the frame by recycling the attached images. </Abstract>
    <DeclaredIn>frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame_data.html</Path>
    <Anchor>ab458f464164e9ca782c884e42e26e43d</Anchor>
    <Abstract>Flush the frame by deleting all images. </Abstract>
    <DeclaredIn>frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteGLObjects</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame_data.html</Path>
    <Anchor>a62471597cfcb0310e6cd4c566a333d07</Anchor>
    <Abstract>Delete data allocated by the given object manager on all images. </Abstract>
    <DeclaredIn>frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPlugins</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame_data.html</Path>
    <Anchor>a6cce93db807cab620d814c7ab63ef508</Anchor>
    <Abstract>Deallocate all transfer and compression plugins on all images. </Abstract>
    <DeclaredIn>frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startReadback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame_data.html</Path>
    <Anchor>ae0773d5af8d6ab1e5fbab7a084680161</Anchor>
    <Abstract>Start reading back a set of images for this frame data. </Abstract>
    <DeclaredIn>frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame_data.html</Path>
    <Anchor>ab7b3425b03c6594612a8665951ee214d</Anchor>
    <Abstract>Set the frame data ready. </Abstract>
    <DeclaredIn>frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame_data.html</Path>
    <Anchor>a7675fd04dd830fdfc46757aee8343391</Anchor>
    <DeclaredIn>frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame_data.html</Path>
    <Anchor>af73f8591cf9caf0125856064367d7dee</Anchor>
    <Abstract>Wait for the frame data to become available. </Abstract>
    <DeclaredIn>frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame_data.html</Path>
    <Anchor>ab4aa76724ae68d7942b1f2d635419bf8</Anchor>
    <Abstract>Add a ready listener. </Abstract>
    <DeclaredIn>frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_frame_data.html</Path>
    <Anchor>a0a4593ca0a94e86d1f44fb49493587a6</Anchor>
    <Abstract>Remove a frame listener. </Abstract>
    <DeclaredIn>frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::FrameData::ImageHeader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::FrameData::ImageHeader</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1_frame_data_1_1_image_header.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::GLException</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::GLException</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_exception.html</Path>
    <Abstract>OpenGL Exception. </Abstract>
    <DeclaredIn>glException.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLException</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLException</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_exception.html</Path>
    <Anchor>a36258ab49a7a52c87f9e67e081abe74f</Anchor>
    <Abstract>Construct a new OpenGL Exception. </Abstract>
    <DeclaredIn>glException.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~GLException</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLException</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_exception.html</Path>
    <Anchor>a7169ce4ed1a013e0ca375ffd387be484</Anchor>
    <Abstract>Destruct this exception. </Abstract>
    <DeclaredIn>glException.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Exception</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Exception</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_exception.html</Path>
    <Anchor>a8a9b055074699e47363ea1059d0d79b5</Anchor>
    <Abstract>Construct a new Exception. </Abstract>
    <DeclaredIn>exception.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Exception</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Exception</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_exception.html</Path>
    <Anchor>ab66c682f41883a718babfc1dc48cbc3c</Anchor>
    <Abstract>Destruct this exception. </Abstract>
    <DeclaredIn>exception.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Global</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_global.html</Path>
    <Abstract>Global parameter handling for the Equalizer client library. </Abstract>
    <DeclaredIn>global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProgramName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_global.html</Path>
    <Anchor>ae8005974d946fc3f5caa79b1a74b85a3</Anchor>
    <Abstract>Set the name of the program. </Abstract>
    <DeclaredIn>global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProgramName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_global.html</Path>
    <Anchor>a1f7ae22ff7ddf5839773337baccfb382</Anchor>
    <DeclaredIn>global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWorkDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_global.html</Path>
    <Anchor>aa2966ecce8e1502eed5bb268113fa163</Anchor>
    <Abstract>Set the working directory of the program. </Abstract>
    <DeclaredIn>global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWorkDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_global.html</Path>
    <Anchor>a97a95f31c7c9dc4733e23a0830855a7a</Anchor>
    <DeclaredIn>global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNodeFactory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_global.html</Path>
    <Anchor>ab668913509e2adf0c2d7674b85c8bdc9</Anchor>
    <DeclaredIn>global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_global.html</Path>
    <Anchor>ac791a64e40d2c2db3be0844922eb1b24</Anchor>
    <Abstract>Set the config file or hwsd session for the app-local server. </Abstract>
    <DeclaredIn>global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_global.html</Path>
    <Anchor>af3b9f2d037cceca1e4ab1424b6df6bcd</Anchor>
    <DeclaredIn>global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enterCarbon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_global.html</Path>
    <Anchor>a6981afb7c4a6e78bc0ca099d4d5a4d50</Anchor>
    <Abstract>Global lock for all non-thread-safe Carbon API calls. </Abstract>
    <DeclaredIn>global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>leaveCarbon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_global.html</Path>
    <Anchor>aa77f38bbb2294e643447db6465bea1b4</Anchor>
    <Abstract>Global unlock for non-thread-safe Carbon API calls. </Abstract>
    <DeclaredIn>global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::fabric::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_global.html</Path>
    <Anchor>a4d756a70eb85ebd869d53cd02635c4c4</Anchor>
    <Abstract>Set the default Equalizer server. </Abstract>
    <DeclaredIn>fabric/global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::fabric::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_global.html</Path>
    <Anchor>a0f44db77b14382ccf4352e002d463300</Anchor>
    <DeclaredIn>fabric/global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getErrorRegistry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::fabric::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_global.html</Path>
    <Anchor>ad88e4554cfe31c5e30bef884f05b06c4</Anchor>
    <DeclaredIn>fabric/global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>eq::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_global.html</Path>
    <Anchor>a51d294663f280aaa3e050039ee62d113</Anchor>
    <Abstract>De-initialize the Equalizer fabric namespace. </Abstract>
    <DeclaredIn>global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::GLWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Abstract>A system window for OpenGL rendering. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a6da73c4a415f65d6cad80f3508cc8656</Anchor>
    <Abstract>Construct a new OpenGL window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~GLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a2f9f6dc22c4cb0fea9175984aa72287a</Anchor>
    <Abstract>Destruct a new OpenGL window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a37838c9aca2297d47603b18d1e953c0a</Anchor>
    <Abstract>Bind the FBO and update the current cache. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doneCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a7c1ddf60163144d6ec9fddfb845dada7</Anchor>
    <Abstract>Unbind the FBO and remove context from current cache. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a87a95ddbe5a9993b4f8a36aaf17c22d4</Anchor>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initGLEW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>aac0da2da1f2e83bb9a7a487faec4ff6b</Anchor>
    <Abstract>Initialize the GLEW context for this window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitGLEW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>abda0f097fa517fd9a50ba9faa66c7389</Anchor>
    <Abstract>De-initialize the GLEW context. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a3e5c80aadda75dbb9499f670cca9909f</Anchor>
    <Abstract>Get the GLEW context for this window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queryDrawableConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>adde4544eb0954e33f3fdc7f5d1952fd4</Anchor>
    <Abstract>Set up the drawable config by querying the current context. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>aedeb6d0951040f6c04b84589e2f05a62</Anchor>
    <Abstract>Bind the window&amp;#39;s FBO, if it uses an FBO drawable. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindDrawFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a06dac44630e2182f9ad2370f66311e61</Anchor>
    <Abstract>Bind the window&amp;#39;s draw FBO, used for multisampling. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a232cea38218d73df847b22dc0cd8a788</Anchor>
    <Abstract>Update the window&amp;#39;s FBO from the multisampled FBO. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>af963818ae1cbf8068b271827a0f82b84</Anchor>
    <Abstract>Flush all command buffers. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a3a908be05acd4848f019d03bfb03de5a</Anchor>
    <Abstract>Finish execution of all commands. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a5ce659a130d10112591e800161f5b0ec</Anchor>
    <Abstract>Build and initialize the FBO. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExitFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a4cd57e391d3d71a692c47a6846ac1b6f</Anchor>
    <Abstract>Destroy the FBO. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>acbc764b3d553a4018734b81f5b25ebef</Anchor>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>ac060fbb5960861a5c00b9291cd7e07e6</Anchor>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a25c36c74f33badb21ca893833290b8d0</Anchor>
    <Abstract>Create a new SystemWindow for the given eq::Window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a3b6bb633ed4be1c8561ede26f2a6db35</Anchor>
    <Abstract>Destroy the SystemWindow. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>aa5e2cefc215d894e9ec370bdd18b5f5b</Anchor>
    <Abstract>Send a window error event to the application node. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a51f6af7c8cb42cff68f142751e1b45f3</Anchor>
    <Abstract>Process a stateless event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a6590cd0d52a15d877db81330156d8d41</Anchor>
    <Abstract>Process a (re)size event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a2ec0a58160afd109ae3e25d7d880e797</Anchor>
    <Abstract>Process a mouse event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ad1c42304a0c7890e216a4388a1d2373b</Anchor>
    <Abstract>Process a keyboard event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a16066f67716e151954e94756a4f37263</Anchor>
    <Abstract>Process an axis event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>aa8496fdc41099eacfb97b05bf8d1571d</Anchor>
    <Abstract>Process a button event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ab45ed6161cfacd3ae1b4a5bc7e24ca1c</Anchor>
    <Abstract>Set the window&amp;#39;s pixel viewport wrt its parent pipe. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a5542a45ce1eea5dafe7ec0d6a3589618</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a279a88dc1758222716c552305d5e9e90</Anchor>
    <Abstract>Set the window&amp;#39;s name. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a76359168d7109a57feb35d6d1d0877aa</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a0d782332f49d0ca59471f4ee106db118</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSharedContextWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a274123d370d12ba6acd5576640ea4f9f</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ac4931aa0dcd232b19680622a2e0d5dea</Anchor>
    <Abstract>Initialize this system window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ab0dac0408016b13d3e680706d19f3a14</Anchor>
    <Abstract>De-initialize this system window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a29e00bd15296b876bc63c267c07950a2</Anchor>
    <Abstract>Swap the front and back buffer. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinNVSwapBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a055ea5d409568f2177581a9283c8966e</Anchor>
    <Abstract>Join a NV_swap_group. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Image</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Abstract>A holder for pixel data. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Image</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a5693561f02c68271bad3b34d720ae1e8</Anchor>
    <Abstract>Construct a new Image. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Image</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a1ceb5bb8814a9055eea97223d8c009ce</Anchor>
    <Abstract>Destruct the Image. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInternalFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a0cf9e9ab8d6c6a59a29c14132329a00a</Anchor>
    <Abstract>Set the internal format for the given buffer. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInternalFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>aa1af4520b85626c49a28c42a41257b52</Anchor>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getExternalFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a601b6316188a786c543c675b3cabf7b7</Anchor>
    <Abstract>Get the external format of the given buffer. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a9fd8f9fa2755af62d1966416c4499f44</Anchor>
    <Abstract>Get the size, in bytes, of one pixel in the external pixel data. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasAlpha</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a1b2b42e532478c55269a2e7c7b53729c</Anchor>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStorageType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a35c1dc9e8d16b150b9bbfa547cc3bbbf</Anchor>
    <Abstract>Set the frame pixel storage type. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStorageType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a1a28a826f4de40f1b738e4f26d80efb8</Anchor>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a85123bf0254ae2ac13b5aa9b8fa55c52</Anchor>
    <Abstract>Set the internal pixel viewport of the image. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a4b34c230f9263e3120204166523ebf0f</Anchor>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>ac2c7c15c5ea34ecc2fa9bf4113b9edc8</Anchor>
    <Abstract>Sets the zoom factor to be used for compositing. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a1dbd163461a276adb5366b75e22d49e2</Anchor>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>aa3124a3710ac82a55e3a07e755ca63cb</Anchor>
    <Abstract>Set the render context producing this image. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>add125f377760403027174013d721fd42</Anchor>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useCompressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a984ebafc216cfcc3c7bb3749952a0680</Anchor>
    <Abstract>Set a compressor to be used during transmission of the image. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a1ef8a2df60c3aedb72011d8521c6ae70</Anchor>
    <Abstract>Reset the image to its default state. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>ab4db22a69a520a478f26fd0dbbc42510</Anchor>
    <Abstract>Free all cached data of this image. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteGLObjects</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a4bfe6f2aa45a87a4fb9869c3a435e6be</Anchor>
    <Abstract>Delete all OpenGL objects allocated from the given object manager. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPlugins</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a86196e5e6b5e8f74abadb613cf36c11b</Anchor>
    <Abstract>Deallocate all transfer and compression plugins. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a152f898deabb5a9656c1e41aa9e1023f</Anchor>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a45559c56c134f14bb301a54590d951ab</Anchor>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelDataSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a7b2af1429bea9c360173442dcecd0569</Anchor>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a53e03f3e51214cc8847188d360b140e9</Anchor>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressPixelData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a64d316fb3615d629179dd2376bff7929</Anchor>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasPixelData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>ab8215322e211459465ee1819a900f0c8</Anchor>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasAsyncReadback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>afb40b01f7669aa937bb74aef1619883d</Anchor>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasAsyncReadback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a37406b768d99b1723eb01c3a70f6618d</Anchor>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearPixelData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>ae935eddd06c1e492003d0c582bfb9d47</Anchor>
    <Abstract>Clear and validate an image buffer. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>validatePixelData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>abeb89165471e0f8c01c5f406bf61ccbd</Anchor>
    <Abstract>Allocate an image buffer without initialization. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a5251c0e8c563f58aa87dc3b5633ec425</Anchor>
    <Abstract>Set the pixel data of the given image buffer. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlphaUsage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>aacd7a1e9298d6045837bc3c90858883f</Anchor>
    <Abstract>Set alpha data preservation during download and compression. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAlphaUsage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>ad0f7b28c41b237b904b0740bc0bfcbdd</Anchor>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>aa1ae517a0b10924ce01aa2359a1669de</Anchor>
    <Abstract>Set the minimum quality after a full download-compression path. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a0af0cff64bd6430d21912d693b1e67c3</Anchor>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a31e58ebfec3bfea3c2f4fe9f0c90a7a5</Anchor>
    <Abstract>Get the texture of this image. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasTextureData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a38b386187aaa012df227813023736e36</Anchor>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startReadback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a4c704ff01fd84e4df90fb971f037bbba</Anchor>
    <Abstract>Start reading back an image from the frame buffer. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishReadback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a882cf1ad8a58fc11440a376b90664734</Anchor>
    <Abstract>Finish an asynchronous readback. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upload</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>ac5b2f1f4908a4f539bfcb8f1808439c8</Anchor>
    <Abstract>Upload this image to the frame buffer or a texture. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>afc97b319fb08470037caf35d006eeb21</Anchor>
    <Abstract>Write the pixel data as rgb image file. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeImages</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a7245d3ed3744488b4081aa243cbeff3d</Anchor>
    <Abstract>Write all valid pixel data as separate images. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_image.html</Path>
    <Anchor>a5d421b50f8851041ef9ea44ca6bbebfe</Anchor>
    <Abstract>Read pixel data from an uncompressed rgb image file. </Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::ImageOp</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::ImageOp</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1_image_op.html</Path>
    <Abstract>A structure describing an image assembly task, used by the Compositor. </Abstract>
    <DeclaredIn>imageOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>image</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::ImageOp</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1_image_op.html</Path>
    <Anchor>ac06ede38d93ad7d057272f68730d106c</Anchor>
    <Abstract>The image to assemble. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::ImageOp</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1_image_op.html</Path>
    <Anchor>a05d14b74ac7025f9aa503c25813801f3</Anchor>
    <Abstract>The Frame buffer attachments to use. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>offset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::ImageOp</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1_image_op.html</Path>
    <Anchor>abeca185bb2521057d6f9f96a9732d871</Anchor>
    <Abstract>The offset wrt destination window. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::ImageOp</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1_image_op.html</Path>
    <Anchor>abd05560749793267b6b1d0440b4c9803</Anchor>
    <Abstract>The zoom Filter from Frame. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::ImageOp</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1_image_op.html</Path>
    <Anchor>a81083d6db60234cf20ed0e206e4c9c96</Anchor>
    <Abstract>The zoom factor. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Layout</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_layout.html</Path>
    <Abstract>A layout groups one or more View, logically belonging together. </Abstract>
    <DeclaredIn>layout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Layout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_layout.html</Path>
    <Anchor>a5142c4d850f32ffaa666e881124f3dbb</Anchor>
    <Abstract>Construct a new layout. </Abstract>
    <DeclaredIn>layout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Layout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_layout.html</Path>
    <Anchor>a7ec2e47b0be2399af714abf1fd4e4422</Anchor>
    <Abstract>Destruct a layout. </Abstract>
    <DeclaredIn>layout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_layout.html</Path>
    <Anchor>ac3e63f39143157e9212938254674d575</Anchor>
    <DeclaredIn>layout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Layout&lt; Config, Layout, View &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_layout.html</Path>
    <Anchor>a6c75849597cb4b7dc4998df9cde113c9</Anchor>
    <Abstract>Traverse this layout and all children using a layout visitor. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Layout&lt; Config, Layout, View &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_layout.html</Path>
    <Anchor>add6273084a00d8b990ceafdc151afc46</Anchor>
    <Abstract>Const-version of accept(). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Layout&lt; Config, Layout, View &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_layout.html</Path>
    <Anchor>a69074a029036f9393d80d8f3475d1f71</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Layout&lt; Config, Layout, View &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_layout.html</Path>
    <Anchor>a8bf14eadfc7aae253a66855abe386ca4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViews</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Layout&lt; Config, Layout, View &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_layout.html</Path>
    <Anchor>a538e40ff4b469ba4f139ae755c4f1274</Anchor>
    <Abstract>Get the list of views. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Layout&lt; Config, Layout, View &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_layout.html</Path>
    <Anchor>a8aa0f24fa6e9bc1f54bc03eb5b093671</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a0bdbe97f54e13fcbaf24d5c20aaa23e1</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ac82bf838d019796b4a3d898bf9a6279e</Anchor>
    <Abstract>Set the name of the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a8b8235ef3a933f40cedcac9488b5d11e</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a074a96afc7fb9e31a1d5b4368ebde972</Anchor>
    <Abstract>Set user-specific data. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ad8344492a6a8222a8f87b622709e6768</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ae8a8ec5d8f869f441f44a31d345866bb</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTasks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3aec2e67eb4948d424c673faef62c63e</Anchor>
    <Abstract>Return the set of tasks this channel might execute in the worst case. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Views</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Layout&lt; Config, Layout, View &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_layout.html</Path>
    <Anchor>a1260fce285ef8fa8a8acaaf1a7f8935c</Anchor>
    <Abstract>A vector of pointers to views. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Visitor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Layout&lt; Config, Layout, View &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_layout.html</Path>
    <Anchor>a55054acb56e90a5040eaa3be04ed0f89</Anchor>
    <Abstract>The layout visitor type. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aeaed0d358b6f67d6f3b4372d4e254484</Anchor>
    <Abstract>Construct a new Object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a4b753d5cb7ee3bd182075fa090f4ddbb</Anchor>
    <Abstract>Construct an unmapped, unregistered copy of an object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a2c301f8fda1bbd4bfb184f050a82ff91</Anchor>
    <Abstract>Destruct the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3140ce8ffc4d6dfa5cb053bc5102e84d</Anchor>
    <Abstract>NOP assignment operator. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aea00c39dfb613d9fb7843dbb68459892</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a321f24113c02e0f16830a403e03f62e9</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::MessagePump</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_message_pump.html</Path>
    <Abstract>An interface to process system messages or events. </Abstract>
    <DeclaredIn>messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_message_pump.html</Path>
    <Anchor>a398cf554cf2a9d1a133348e403882dce</Anchor>
    <Abstract>Construct a new message pump. </Abstract>
    <DeclaredIn>messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_message_pump.html</Path>
    <Anchor>a9f377b87a1f154d599bc5c490adb7c3a</Anchor>
    <Abstract>Destruct this message pump. </Abstract>
    <DeclaredIn>messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postWakeup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_message_pump.html</Path>
    <Anchor>a15283af09b43ce06f94854085a630a36</Anchor>
    <Abstract>Unblock dispatchOne(). </Abstract>
    <DeclaredIn>messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatchAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_message_pump.html</Path>
    <Anchor>a942eb56a858ac1414c9b1a98d49b0f7a</Anchor>
    <Abstract>Dispatch all pending system events, does not block. </Abstract>
    <DeclaredIn>messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatchOne</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_message_pump.html</Path>
    <Anchor>ae4d3a842766b389d72cb02c222d4b917</Anchor>
    <Abstract>Dispatch at least one pending system event, blocks potentially. </Abstract>
    <DeclaredIn>messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>register_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_message_pump.html</Path>
    <Anchor>a457409c0585fd7123d253d9b395c63cc</Anchor>
    <Abstract>Register a new Deflect connection for event dispatch. </Abstract>
    <DeclaredIn>messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deregister</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_message_pump.html</Path>
    <Anchor>a38d1d96c00cb76b48f26a92389d50f85</Anchor>
    <Abstract>Deregister a Deflect connection from event dispatch. </Abstract>
    <DeclaredIn>messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Node</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node.html</Path>
    <Abstract>A Node represents a single computer in the cluster. </Abstract>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node.html</Path>
    <Anchor>abd1f7b065e82357e39363f6d689befd5</Anchor>
    <Abstract>Construct a new node. </Abstract>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node.html</Path>
    <Anchor>a8580b9c3df50fabfd6089c1b16d6a295</Anchor>
    <Abstract>Destruct the node. </Abstract>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node.html</Path>
    <Anchor>acaada6d587eceec86ac5472da87e4288</Anchor>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node.html</Path>
    <Anchor>a654637505e2863668c5e191fc1b0c5a0</Anchor>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node.html</Path>
    <Anchor>a9ed7c9a9e66a7f4116f2bb85eacd590b</Anchor>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStopped</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node.html</Path>
    <Anchor>a506859717353d6e93ce26cbd04d27063</Anchor>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitFrameStarted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node.html</Path>
    <Anchor>a82ae3e24179bd9fa89f40108a1b01891</Anchor>
    <Abstract>Wait for a frame to be started. </Abstract>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node.html</Path>
    <Anchor>aa5b98b372c066b8bad815c8fcbdca3b7</Anchor>
    <Abstract>Send an error event to the application node. </Abstract>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node.html</Path>
    <Anchor>a2072c05d712b5b60b6a6e1c8a8d31dfc</Anchor>
    <Abstract>Process a received spacemouse event. </Abstract>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node.html</Path>
    <Anchor>acf1cc79da1bb38ee61aea4df3abb77a0</Anchor>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node&lt; Config, Node, Pipe, NodeVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_node.html</Path>
    <Anchor>a9823a3d23f3cb37807051c12fe39f0ca</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node&lt; Config, Node, Pipe, NodeVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_node.html</Path>
    <Anchor>a784cf2609858a9424d5f8a2b9ffd84f6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipes</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node&lt; Config, Node, Pipe, NodeVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_node.html</Path>
    <Anchor>aebe39b02687d1a8a199b0189e739b506</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node&lt; Config, Node, Pipe, NodeVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_node.html</Path>
    <Anchor>a73cccf14a0651083eb79affb03ea1acc</Anchor>
    <Abstract>Perform a depth-first traversal of this node. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node&lt; Config, Node, Pipe, NodeVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_node.html</Path>
    <Anchor>a3588a0018d327a126c5535b39985d1f7</Anchor>
    <Abstract>Const-version of accept(). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node&lt; Config, Node, Pipe, NodeVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_node.html</Path>
    <Anchor>af7ef63417275729265fba566723f7a11</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a0bdbe97f54e13fcbaf24d5c20aaa23e1</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ac82bf838d019796b4a3d898bf9a6279e</Anchor>
    <Abstract>Set the name of the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a8b8235ef3a933f40cedcac9488b5d11e</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a074a96afc7fb9e31a1d5b4368ebde972</Anchor>
    <Abstract>Set user-specific data. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ad8344492a6a8222a8f87b622709e6768</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ae8a8ec5d8f869f441f44a31d345866bb</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTasks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3aec2e67eb4948d424c673faef62c63e</Anchor>
    <Abstract>Return the set of tasks this channel might execute in the worst case. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node.html</Path>
    <Anchor>ae15f81efb3eec6dfa54e697772885a47</Anchor>
    <Abstract>Start a frame by unlocking all child resources. </Abstract>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node.html</Path>
    <Anchor>ae3d452f87497f612ff2ee19e9a0771e5</Anchor>
    <Abstract>Signal the completion of a frame to the parent. </Abstract>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseFrameLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node.html</Path>
    <Anchor>a896d16300dcc4f31177c57933b59f7a1</Anchor>
    <Abstract>Release the local synchronization of the parent for a frame. </Abstract>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node.html</Path>
    <Anchor>a9665e9a86b667f17146c5542ed277b8f</Anchor>
    <Abstract>Initialize this node. </Abstract>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node.html</Path>
    <Anchor>a270dfdd5754550017aceab624aa7f2c3</Anchor>
    <Abstract>Exit this node. </Abstract>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node.html</Path>
    <Anchor>a24f895939f61c5aaa57207d32a8bd1c7</Anchor>
    <Abstract>Start rendering a frame. </Abstract>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node.html</Path>
    <Anchor>aeedcf7535230aa5bbd58f4057f3d9414</Anchor>
    <Abstract>Finish rendering a frame. </Abstract>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameDrawFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node.html</Path>
    <Anchor>ae9790fe2e38faf7e12a6b04d9f975e7b</Anchor>
    <Abstract>Finish drawing. </Abstract>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameTasksFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node.html</Path>
    <Anchor>a7d7d8297964f09e094cf12f45e766403</Anchor>
    <Abstract>Finish all rendering tasks. </Abstract>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aeaed0d358b6f67d6f3b4372d4e254484</Anchor>
    <Abstract>Construct a new Object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a4b753d5cb7ee3bd182075fa090f4ddbb</Anchor>
    <Abstract>Construct an unmapped, unregistered copy of an object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a2c301f8fda1bbd4bfb184f050a82ff91</Anchor>
    <Abstract>Destruct the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3140ce8ffc4d6dfa5cb053bc5102e84d</Anchor>
    <Abstract>NOP assignment operator. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aea00c39dfb613d9fb7843dbb68459892</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a321f24113c02e0f16830a403e03f62e9</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pipes</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Node&lt; Config, Node, Pipe, NodeVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_node.html</Path>
    <Anchor>a5b83ef6384309ef4cda8405f8229c43e</Anchor>
    <Abstract>A vector of pointers to pipes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::NodeFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node_factory.html</Path>
    <Abstract>The node factory is a per-node singleton used to create and release Equalizer resource instances...</Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node_factory.html</Path>
    <Anchor>a680dd708fdaa6fb00f97285f19a54899</Anchor>
    <Abstract>Create a new config. </Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node_factory.html</Path>
    <Anchor>a385269617d503883b1870ff21628fff1</Anchor>
    <Abstract>Release a config. </Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node_factory.html</Path>
    <Anchor>af3d0c25e652724effaea733b26e57e65</Anchor>
    <Abstract>Create a new node. </Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node_factory.html</Path>
    <Anchor>a86cd7b65ada59eff0e74b9c2959af081</Anchor>
    <Abstract>Release a node. </Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node_factory.html</Path>
    <Anchor>ab978ed64cc2cfe3867fb6d40d33f65a0</Anchor>
    <Abstract>Create a new pipe. </Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releasePipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node_factory.html</Path>
    <Anchor>a256aed8c7f572e2c359c961300a7643b</Anchor>
    <Abstract>Release a pipe. </Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node_factory.html</Path>
    <Anchor>abe09fdb6dca684078a66508f2c4d0412</Anchor>
    <Abstract>Create a new window. </Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node_factory.html</Path>
    <Anchor>acce243f83d5b04dffb3b5e531b12bb87</Anchor>
    <Abstract>Release a window. </Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node_factory.html</Path>
    <Anchor>a131b722dfc11e2fcbbaa1c9ab5dcf38d</Anchor>
    <Abstract>Create a new channel. </Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node_factory.html</Path>
    <Anchor>af30e7bef5d36eb7669d282a563656fb1</Anchor>
    <Abstract>Release a channel. </Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node_factory.html</Path>
    <Anchor>aaf3a48aa102320233ecc31666caae244</Anchor>
    <Abstract>Create a new observer. </Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node_factory.html</Path>
    <Anchor>ab7ab01bb36d8d06f3c1fdc377161a5ba</Anchor>
    <Abstract>Release a observer. </Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node_factory.html</Path>
    <Anchor>aef7d63b7cf0c4c877516db0b832491e7</Anchor>
    <Abstract>Create a new layout. </Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node_factory.html</Path>
    <Anchor>adf3e9147b28b9db29aafbab438c9316d</Anchor>
    <Abstract>Release a layout. </Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node_factory.html</Path>
    <Anchor>a1b59458c785d1660348d7d2be4189e7f</Anchor>
    <Abstract>Create a new view. </Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node_factory.html</Path>
    <Anchor>a17f69f9710c55ccd8eeb3988624e5965</Anchor>
    <Abstract>Release a view. </Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCanvas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node_factory.html</Path>
    <Anchor>a26ee17436081333ab22793e06efb209b</Anchor>
    <Abstract>Create a new canvas. </Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseCanvas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node_factory.html</Path>
    <Anchor>a2557146ac36ca9923f46e0680780311e</Anchor>
    <Abstract>Release a canvas. </Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSegment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node_factory.html</Path>
    <Anchor>afe08f8356b3780e9f1ff28725dc43d86</Anchor>
    <Abstract>Create a new segment. </Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseSegment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node_factory.html</Path>
    <Anchor>a335b229fcea2831b96abaf8fd75e36c8</Anchor>
    <Abstract>Release a segment. </Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~NodeFactory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_node_factory.html</Path>
    <Anchor>abf00597691e5cacbd4adf3104392ba50</Anchor>
    <Abstract>Destruct this node factory. </Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::NotifierInterface</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::NotifierInterface</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_notifier_interface.html</Path>
    <Abstract>A base class for notifying errors and events. </Abstract>
    <DeclaredIn>notifierInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NotifierInterface</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_notifier_interface.html</Path>
    <Anchor>a6291fc36db623c06f7d6442aea3a7e91</Anchor>
    <Abstract>Send an error event to the application node. </Abstract>
    <DeclaredIn>notifierInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NotifierInterface</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_notifier_interface.html</Path>
    <Anchor>a518ad655cccd004c3960623076a23c50</Anchor>
    <Abstract>Process a received event. </Abstract>
    <DeclaredIn>notifierInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NotifierInterface</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_notifier_interface.html</Path>
    <Anchor>ab48340d27d28ecaa39621948b2e4d41b</Anchor>
    <Abstract>stateless event </Abstract>
    <DeclaredIn>notifierInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Observer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_observer.html</Path>
    <Abstract>An Observer looks at one or more views from a certain position (head matrix) with a given eye separat...</Abstract>
    <DeclaredIn>observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Observer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_observer.html</Path>
    <Anchor>a7510aa12f2317ac8d699b51f4cf2c15c</Anchor>
    <Abstract>Construct a new observer. </Abstract>
    <DeclaredIn>observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Observer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_observer.html</Path>
    <Anchor>a50cb8eaa53269dabaa9499c83e78b522</Anchor>
    <Abstract>Destruct this observer. </Abstract>
    <DeclaredIn>observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_observer.html</Path>
    <Anchor>a4afed339ca0e01a4c10ff22ac951e7e1</Anchor>
    <Abstract>Handle an event. </Abstract>
    <DeclaredIn>observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_observer.html</Path>
    <Anchor>a47a1d1c76cb7341c67652161a6b98be4</Anchor>
    <DeclaredIn>observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHeadMatrix</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer&lt; Config, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>a2322016b3cfb97abeace52cb9c9a1061</Anchor>
    <Abstract>Set the head matrix. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeadMatrix</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer&lt; Config, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>a15c5d5bfe2ee08adfdbd8cbb44ee3576</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEyePosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer&lt; Config, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>af7a7744734700aff1a56737e2034201c</Anchor>
    <Abstract>Set the position of the given eye relative to the observer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEyePosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer&lt; Config, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>a75ef818b4be3691940da38eedfc3c72c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFocusDistance</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer&lt; Config, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>a58017865198c39c918db694b5c1c1ca2</Anchor>
    <Abstract>Set the focal distance. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocusDistance</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer&lt; Config, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>aa19bea24cec84f3569b9ddc074302d5e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFocusMode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer&lt; Config, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>ae4f1b9a55c3ca63a50b4160f07e990dc</Anchor>
    <Abstract>Set the focal mode. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocusMode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer&lt; Config, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>a5eed082fbfd956dffef29c68c2e6464b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOpenCVCamera</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer&lt; Config, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>a2db4fc9ea993c3b3f97f3c24471a0a54</Anchor>
    <Abstract>Set the index of the OpenCV camera for tracking. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOpenCVCamera</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer&lt; Config, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>a3311c5086605798cb4823f21323da04d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVRPNTracker</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer&lt; Config, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>af5211910d0326a47e37edfd05d738865</Anchor>
    <Abstract>Set the VRPN tracker device. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVRPNTracker</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer&lt; Config, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>af8445572979987bfca12058ef336d4b1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer&lt; Config, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>a9b44678ad71c5fe58c6649d0a38c2933</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer&lt; Config, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>a5f238596a9e6685d586be4d82b68c978</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer&lt; Config, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>add8360bb809d0ca15b61c8b3194a7f8b</Anchor>
    <Abstract>Traverse this observer using a observer visitor. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer&lt; Config, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>a1a546c35d85ecb5019a1fd7e09643687</Anchor>
    <Abstract>Const-version of accept(). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a0bdbe97f54e13fcbaf24d5c20aaa23e1</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ac82bf838d019796b4a3d898bf9a6279e</Anchor>
    <Abstract>Set the name of the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a8b8235ef3a933f40cedcac9488b5d11e</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a074a96afc7fb9e31a1d5b4368ebde972</Anchor>
    <Abstract>Set user-specific data. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ad8344492a6a8222a8f87b622709e6768</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ae8a8ec5d8f869f441f44a31d345866bb</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTasks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3aec2e67eb4948d424c673faef62c63e</Anchor>
    <Abstract>Return the set of tasks this channel might execute in the worst case. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_observer.html</Path>
    <Anchor>a1762b9a2c797a8ed8b4be38d0096d005</Anchor>
    <Abstract>Initialize this observer. </Abstract>
    <DeclaredIn>observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_observer.html</Path>
    <Anchor>a509c66e740b906489ef8ce9fbb58b51c</Anchor>
    <Abstract>Exit this observer. </Abstract>
    <DeclaredIn>observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_observer.html</Path>
    <Anchor>ade7a304c3a6d2dd6d193f4af85ef6d65</Anchor>
    <Abstract>Start rendering a frame. </Abstract>
    <DeclaredIn>observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Visitor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Observer&lt; Config, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>a8fa034fb5ccbcd18f5ab80d2f3ab1215</Anchor>
    <Abstract>The observer visitor type. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aeaed0d358b6f67d6f3b4372d4e254484</Anchor>
    <Abstract>Construct a new Object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a4b753d5cb7ee3bd182075fa090f4ddbb</Anchor>
    <Abstract>Construct an unmapped, unregistered copy of an object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a2c301f8fda1bbd4bfb184f050a82ff91</Anchor>
    <Abstract>Destruct the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3140ce8ffc4d6dfa5cb053bc5102e84d</Anchor>
    <Abstract>NOP assignment operator. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aea00c39dfb613d9fb7843dbb68459892</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a321f24113c02e0f16830a403e03f62e9</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Pipe</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Abstract>A Pipe represents a graphics card (GPU) on a Node. </Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>a41eb2d59575d41ec3a61d89b6056cf0d</Anchor>
    <Abstract>Construct a new pipe. </Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>a739879e954421e344912fedcd0516570</Anchor>
    <Abstract>Destruct the pipe. </Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>a0a7312a6f5977276e4b3cad446d2f358</Anchor>
    <Abstract>Send a pipe error event to the application node. </Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>a413783af3df94e9a5c0baa0865b0031b</Anchor>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>a86a1d40dca134c5842b1cb0abb97c547</Anchor>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>a40e33ed12940bb0d67af629c4297929c</Anchor>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>a522c0e3fd9840a6b6d09c2cb27a5aab4</Anchor>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>ae8dbb93cbe74ce3b338c719b4e746af8</Anchor>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStopped</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>abcc16c1f99675f84ea2a8bc0c0be3b23</Anchor>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>a7a3c1f976de9e06fba42ed1f83f65a73</Anchor>
    <Abstract>Return the current frame number. </Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindowSystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>a1c1dfc719dcc36b35de6cdc62437405e</Anchor>
    <Abstract>Return the window system used by this pipe. </Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSystemPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>a9f6657bc61c143f6bce45013c361274a</Anchor>
    <Abstract>Set the system-specific pipe implementation. </Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSystemPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>a0c8b1fe9d3a42933a5e63ac99fe13a96</Anchor>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSystemPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>aaf5d729b340194b6f22f185beac7b635</Anchor>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>ab4962d92de7eaee6453f4a83bcbca2d5</Anchor>
    <Abstract>Create a new MessagePump for this pipe. </Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>a3c8ebd56d86798fd412b39e2c31b0ae0</Anchor>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe&lt; Node, Pipe, eq::Window, PipeVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>ab79eb8a45dcf5ec67ff74bda899c5845</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe&lt; Node, Pipe, eq::Window, PipeVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>ada0110e55156cadcaddd9cbf7fd9f803</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindows</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe&lt; Node, Pipe, eq::Window, PipeVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>a666c69d89845842455637caeee5c1b2f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe&lt; Node, Pipe, eq::Window, PipeVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>a6bbffa12120a01dc16bf89ab6877d8bb</Anchor>
    <Abstract>Returns the port number of this pipe. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDevice</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe&lt; Node, Pipe, eq::Window, PipeVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>a7cb96628940d615d34dd6d62a636e9ac</Anchor>
    <Abstract>Returns the device number of this pipe. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe&lt; Node, Pipe, eq::Window, PipeVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>af1d1dce4facd4be360288dfece07912e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe&lt; Node, Pipe, eq::Window, PipeVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>a21e02cbfa6032fdac6af1c8d5bc19c19</Anchor>
    <Abstract>Set the pipe&amp;#39;s pixel viewport. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe&lt; Node, Pipe, eq::Window, PipeVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>a236bd348b796920f1cb00dfd38544032</Anchor>
    <Abstract>Perform a depth-first traversal of this pipe. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe&lt; Node, Pipe, eq::Window, PipeVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>af0427c33a15d5d9abeb1dc20ab8a828a</Anchor>
    <Abstract>Const-version of accept(). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe&lt; Node, Pipe, eq::Window, PipeVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>a0912a16df647045d9f4dd0538abb3f02</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a0bdbe97f54e13fcbaf24d5c20aaa23e1</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ac82bf838d019796b4a3d898bf9a6279e</Anchor>
    <Abstract>Set the name of the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a8b8235ef3a933f40cedcac9488b5d11e</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a074a96afc7fb9e31a1d5b4368ebde972</Anchor>
    <Abstract>Set user-specific data. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ad8344492a6a8222a8f87b622709e6768</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ae8a8ec5d8f869f441f44a31d345866bb</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTasks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3aec2e67eb4948d424c673faef62c63e</Anchor>
    <Abstract>Return the set of tasks this channel might execute in the worst case. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isWindowSystemAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>af6942929919f04f406a87b470a4095f2</Anchor>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aeaed0d358b6f67d6f3b4372d4e254484</Anchor>
    <Abstract>Construct a new Object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a4b753d5cb7ee3bd182075fa090f4ddbb</Anchor>
    <Abstract>Construct an unmapped, unregistered copy of an object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a2c301f8fda1bbd4bfb184f050a82ff91</Anchor>
    <Abstract>Destruct the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3140ce8ffc4d6dfa5cb053bc5102e84d</Anchor>
    <Abstract>NOP assignment operator. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aea00c39dfb613d9fb7843dbb68459892</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a321f24113c02e0f16830a403e03f62e9</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>a88a4c0f637d90b58cef7de0f03417c12</Anchor>
    <Abstract>Start a frame by unlocking all child resources. </Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>ae204e68305f241918ebcfedd1f4e53a1</Anchor>
    <Abstract>Signal the completion of a frame to the parent. </Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseFrameLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>a1567b9c4d0b4d55924891d46b9e2259b</Anchor>
    <Abstract>Release the local synchronization of the parent for a frame. </Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>selectWindowSystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>aa54ebf8872d4ad0f2628983c31220225</Anchor>
    <Abstract>Choose the window system to be used by this pipe. </Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>a1dbefa11b7091a55e04c8cf564926d7f</Anchor>
    <Abstract>Initialize this pipe. </Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitSystemPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>addd8c1d8e0856fb17f13aecae34f31d9</Anchor>
    <Abstract>Initialize the OS-specific pipe. </Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>a9d8f08353e42fd398e7711784f0be3a5</Anchor>
    <Abstract>De-initialize this pipe. </Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>a7d679d5c864223b0068cf592f64af1da</Anchor>
    <Abstract>Start rendering a frame. </Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>aed491bfacd2d61bf0c9fffe4cd11f0a4</Anchor>
    <Abstract>Finish rendering a frame. </Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameDrawFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_pipe.html</Path>
    <Anchor>a9650548e42198012e27fc2108d20a255</Anchor>
    <Abstract>Finish drawing. </Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Windows</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Pipe&lt; Node, Pipe, eq::Window, PipeVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>adcc29e245a4fe2cd6bf3949154c40e27</Anchor>
    <Abstract>A vector of pointers to windows. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::PixelData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1_pixel_data.html</Path>
    <Abstract>The pixel data structure manages the pixel information for images. </Abstract>
    <DeclaredIn>pixelData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1_pixel_data.html</Path>
    <Anchor>aeba3bdb3e1d5121588c8f4b0736a4cec</Anchor>
    <Abstract>Construct new pixel data. </Abstract>
    <DeclaredIn>pixelData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PixelData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1_pixel_data.html</Path>
    <Anchor>ab61c5943e88bb043631e1b6a68a522e5</Anchor>
    <Abstract>Destruct the pixel data. </Abstract>
    <DeclaredIn>pixelData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1_pixel_data.html</Path>
    <Anchor>a434c3c94359c1b6d1d0f21eb8875e03d</Anchor>
    <Abstract>Reset the data. </Abstract>
    <DeclaredIn>pixelData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>internalFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1_pixel_data.html</Path>
    <Anchor>a2d80968165be581d4606647ef6af42dd</Anchor>
    <Abstract>The type of data stored in FrameBuffer or texture on the GPU. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>externalFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1_pixel_data.html</Path>
    <Anchor>a0d07801753568105ddf01a430711f52d</Anchor>
    <Abstract>The type of data stored in pixels in main memory. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pixelSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1_pixel_data.html</Path>
    <Anchor>af3a0f7f86b974c7188d371c7b9e61b18</Anchor>
    <Abstract>The size of one pixel, in bytes, stored in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pvp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1_pixel_data.html</Path>
    <Anchor>a1b4280d8a997621116f68c1ffc710625</Anchor>
    <Abstract>The dimensions of the pixel data in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pixels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1_pixel_data.html</Path>
    <Anchor>adde6dc45b96146f5bd1a95b5312ffbe2</Anchor>
    <Abstract>uncompressed pixel data, pvp * pixelSize bytes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressedData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1_pixel_data.html</Path>
    <Anchor>a9149afb1c7523ee2c76ba190900f8ffa</Anchor>
    <Abstract>The compressed pixel data blocks. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressorName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1_pixel_data.html</Path>
    <Anchor>a1cce1dff4768db74c2b93ad17f2df58f</Anchor>
    <Abstract>The compressor used to produce compressedData. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressorFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1_pixel_data.html</Path>
    <Anchor>a07aa4936fed4380cd2849b25d9e69712</Anchor>
    <Abstract>Flags used for compression. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::ResultImageListener</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::ResultImageListener</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_result_image_listener.html</Path>
    <Abstract>The result image listener gets notified on new images produced by destination channels. </Abstract>
    <DeclaredIn>resultImageListener.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResultImageListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ResultImageListener</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_result_image_listener.html</Path>
    <Anchor>ae4430b86c93976b86b96cef9e4b6ba53</Anchor>
    <Abstract>Construct a new result image listener. </Abstract>
    <DeclaredIn>resultImageListener.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ResultImageListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ResultImageListener</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_result_image_listener.html</Path>
    <Anchor>a5e8abb05f32f97b09a10ac14ccd41845</Anchor>
    <Abstract>Destruct the result image listener. </Abstract>
    <DeclaredIn>resultImageListener.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyNewImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ResultImageListener</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_result_image_listener.html</Path>
    <Anchor>a73c37bf098110fdc142ac2c74efc005a</Anchor>
    <Abstract>Notify on new image, called from rendering thread in Channel::frameViewFinish(). </Abstract>
    <DeclaredIn>resultImageListener.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Segment</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_segment.html</Path>
    <Abstract>A segment covers a sub-area of a Canvas. </Abstract>
    <DeclaredIn>segment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Segment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_segment.html</Path>
    <Anchor>a491e182010ff4bd38a86003fe45d301a</Anchor>
    <Abstract>Construct a new segment. </Abstract>
    <DeclaredIn>segment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Segment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_segment.html</Path>
    <Anchor>a3ecdaca19ae5dbd09e60125fd67e5801</Anchor>
    <Abstract>Destruct a segment. </Abstract>
    <DeclaredIn>segment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_segment.html</Path>
    <Anchor>a33df0f7eb6f587e4c5dc91c128bc82a0</Anchor>
    <DeclaredIn>segment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_segment.html</Path>
    <Anchor>ab2495f7dfd8e643381ebe05c6ee46e40</Anchor>
    <DeclaredIn>segment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_segment.html</Path>
    <Anchor>a47a61e696548141dcbdd46a0a94644f7</Anchor>
    <DeclaredIn>segment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCanvas</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment&lt; Canvas, Segment, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_segment.html</Path>
    <Anchor>a48dfc96c74302aae9322ec97e81ad484</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCanvas</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment&lt; Canvas, Segment, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_segment.html</Path>
    <Anchor>aeac3d5f87db72b3cb409dbdfb56c5684</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViewport</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment&lt; Canvas, Segment, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_segment.html</Path>
    <Anchor>a9bc279dfd239e98f68196417c75ba138</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChannel</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment&lt; Canvas, Segment, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_segment.html</Path>
    <Anchor>a5ce8f76d4493cab0c6fb3eacba390fa9</Anchor>
    <Abstract>Return the output channel of this segment. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChannel</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment&lt; Canvas, Segment, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_segment.html</Path>
    <Anchor>a0bc4f8a5ce070a2dea0495c54fcaf1a0</Anchor>
    <Abstract>Return the output channel of this segment. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEyes</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment&lt; Canvas, Segment, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_segment.html</Path>
    <Anchor>ac670f33a166f333a5fc1ccff034b0b64</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment&lt; Canvas, Segment, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_segment.html</Path>
    <Anchor>a8bf368cac82f6255f973557e2e248112</Anchor>
    <Abstract>Traverse this segment using a segment visitor. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment&lt; Canvas, Segment, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_segment.html</Path>
    <Anchor>ae933fbed4740e91fcff523e4a5e830e2</Anchor>
    <Abstract>Const-version of accept(). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a0bdbe97f54e13fcbaf24d5c20aaa23e1</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ac82bf838d019796b4a3d898bf9a6279e</Anchor>
    <Abstract>Set the name of the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a8b8235ef3a933f40cedcac9488b5d11e</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a074a96afc7fb9e31a1d5b4368ebde972</Anchor>
    <Abstract>Set user-specific data. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ad8344492a6a8222a8f87b622709e6768</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ae8a8ec5d8f869f441f44a31d345866bb</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTasks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3aec2e67eb4948d424c673faef62c63e</Anchor>
    <Abstract>Return the set of tasks this channel might execute in the worst case. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Frustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a90be6ccf2bc8c914386f1e4c05a261c4</Anchor>
    <Abstract>Construct a new frustum. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Frustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>aa8ce28807339f6d11553d7f2f4d1fbe0</Anchor>
    <Abstract>Destruct the frustum. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a4b0e4ab0f81f698f3353947ca6b5864b</Anchor>
    <Abstract>Set the frustum using a wall description. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>ac66cfc54f75f250a0f7fa7f98463c7a5</Anchor>
    <Abstract>Set the frustum using a projection description. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a91f256d93807510db28db6e50c880477</Anchor>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>acced38d338d315945ad93794e3ffda46</Anchor>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>afebc9278e21a6641ba1baa5b117d18fe</Anchor>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsetFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a4364e9b0755bd4f933cd6a9af8addea5</Anchor>
    <Abstract>Set the last specified frustum to TYPE_NONE. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Visitor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Segment&lt; Canvas, Segment, Channel &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_segment.html</Path>
    <Anchor>a938ad63b58e8f5186de455f9a8be3ab0</Anchor>
    <Abstract>The segment visitor type. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aeaed0d358b6f67d6f3b4372d4e254484</Anchor>
    <Abstract>Construct a new Object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a4b753d5cb7ee3bd182075fa090f4ddbb</Anchor>
    <Abstract>Construct an unmapped, unregistered copy of an object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a2c301f8fda1bbd4bfb184f050a82ff91</Anchor>
    <Abstract>Destruct the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3140ce8ffc4d6dfa5cb053bc5102e84d</Anchor>
    <Abstract>NOP assignment operator. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aea00c39dfb613d9fb7843dbb68459892</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a321f24113c02e0f16830a403e03f62e9</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Server</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_server.html</Path>
    <Abstract>Proxy object for the connection to an Equalizer server. </Abstract>
    <DeclaredIn>server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Server</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_server.html</Path>
    <Anchor>af56f032fecfb1f8314f566bcd0463fcc</Anchor>
    <Abstract>Construct a new server. </Abstract>
    <DeclaredIn>server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chooseConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_server.html</Path>
    <Anchor>a0b41a1a16202b60ada9b47bca73226b1</Anchor>
    <Abstract>Choose a configuration on the server. </Abstract>
    <DeclaredIn>server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_server.html</Path>
    <Anchor>a8de77bc522f5e0c31cd1b79e4165ea74</Anchor>
    <Abstract>Release a configuration. </Abstract>
    <DeclaredIn>server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shutdown</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_server.html</Path>
    <Anchor>a2ed47f8ccbc2cbf3ee0c8e5a5c474448</Anchor>
    <DeclaredIn>server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClient</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Server&lt; Client, Server, Config, NodeFactory, co::Node, ServerVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_server.html</Path>
    <Anchor>a3d6b1ee8ee9db219db83db1ea970c468</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClient</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Server&lt; Client, Server, Config, NodeFactory, co::Node, ServerVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_server.html</Path>
    <Anchor>af86db39aaf78e5d3a3410399159442d9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfigs</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Server&lt; Client, Server, Config, NodeFactory, co::Node, ServerVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_server.html</Path>
    <Anchor>a0587ee43f9ec7142e845bea7d6da588e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Server&lt; Client, Server, Config, NodeFactory, co::Node, ServerVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_server.html</Path>
    <Anchor>aecf8d6f7541cc1ac29cc8da6b57d3214</Anchor>
    <Abstract>Traverse this server and all children using a server visitor. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Server&lt; Client, Server, Config, NodeFactory, co::Node, ServerVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_server.html</Path>
    <Anchor>a9a57267a138828c3c5b5f508ab6d2f72</Anchor>
    <Abstract>Const-version of accept(). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClientPtr</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Server&lt; Client, Server, Config, NodeFactory, co::Node, ServerVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_server.html</Path>
    <Anchor>ab0fe0cca18f9b098179bae1a86b55c11</Anchor>
    <Abstract>A reference-counted pointer to the client. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstClientPtr</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Server&lt; Client, Server, Config, NodeFactory, co::Node, ServerVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_server.html</Path>
    <Anchor>a1ea97ddcf05243b97083ec4f3fd8dd34</Anchor>
    <Abstract>A reference-counted const pointer to the client. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configs</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Server&lt; Client, Server, Config, NodeFactory, co::Node, ServerVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_server.html</Path>
    <Anchor>a9bd69f16487d4f5d906340606d33579f</Anchor>
    <Abstract>A vector of config pointers. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodeFactory</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Server&lt; Client, Server, Config, NodeFactory, co::Node, ServerVisitor &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_server.html</Path>
    <Anchor>a59102e213535e866e19e8e5266e2d789</Anchor>
    <Abstract>The node factory. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::StatisticSampler</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::StatisticSampler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_statistic_sampler.html</Path>
    <Abstract>Utility to sample an statistics event. </Abstract>
    <DeclaredIn>statisticSampler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StatisticSampler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::StatisticSampler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_statistic_sampler.html</Path>
    <Anchor>a23061fad41a6239a00df8a6ba0f45611</Anchor>
    <Abstract>Construct a new statistics sampler. </Abstract>
    <DeclaredIn>statisticSampler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~StatisticSampler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::StatisticSampler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_statistic_sampler.html</Path>
    <Anchor>a56d51f434be5150397265cd274f9b2b0</Anchor>
    <Abstract>Destruct and finish statistics sampling. </Abstract>
    <DeclaredIn>statisticSampler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statistic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::StatisticSampler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_statistic_sampler.html</Path>
    <Anchor>ae2565c1c86fbeb4b119f77c0d67132bf</Anchor>
    <Abstract>The statistics event. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::SystemPipe</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_pipe.html</Path>
    <Abstract>The interface definition for system-specific GPU handling. </Abstract>
    <DeclaredIn>systemPipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_pipe.html</Path>
    <Anchor>a30a85124f55b53b097a4473fa8dce23a</Anchor>
    <Abstract>Create a new SstemPipe for the given eq::Pipe. </Abstract>
    <DeclaredIn>systemPipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SystemPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_pipe.html</Path>
    <Anchor>a6cf63eb5a1250df9a174061471c3751e</Anchor>
    <Abstract>Destroy the SystemPipe. </Abstract>
    <DeclaredIn>systemPipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_pipe.html</Path>
    <Anchor>ac924f3e52d2ce6af3b843cb92a964720</Anchor>
    <DeclaredIn>systemPipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_pipe.html</Path>
    <Anchor>a7728a9d81f1794808c49d4fd360c38c8</Anchor>
    <DeclaredIn>systemPipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxOpenGLVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_pipe.html</Path>
    <Anchor>a66d8591964929773b8f10d20c1e35447</Anchor>
    <DeclaredIn>systemPipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_pipe.html</Path>
    <Anchor>a342b3c079b5b6683dde758476d839906</Anchor>
    <Abstract>Initialize the GPU. </Abstract>
    <DeclaredIn>systemPipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_pipe.html</Path>
    <Anchor>a2c72cb959e3c6223b5ce0268b8a42971</Anchor>
    <Abstract>De-initialize the GPU. </Abstract>
    <DeclaredIn>systemPipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_pipe.html</Path>
    <Anchor>ae71bcebd6ad62bece6a3d9f6d8ec6bfb</Anchor>
    <Abstract>Send a pipe error event to the application node. </Abstract>
    <DeclaredIn>systemPipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::SystemWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Abstract>The interface definition for system-specific windowing code. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a25c36c74f33badb21ca893833290b8d0</Anchor>
    <Abstract>Create a new SystemWindow for the given eq::Window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a3b6bb633ed4be1c8561ede26f2a6db35</Anchor>
    <Abstract>Destroy the SystemWindow. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queryDrawableConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a995dc1b1044673fea0a12adcddeb319c</Anchor>
    <Abstract>Set up the given drawable based on the current context. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a959906fe6a57bcdbe67656f70bace67f</Anchor>
    <Abstract>Get the GLEW context for this window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>aa5e2cefc215d894e9ec370bdd18b5f5b</Anchor>
    <Abstract>Send a window error event to the application node. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a51f6af7c8cb42cff68f142751e1b45f3</Anchor>
    <Abstract>Process a stateless event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a6590cd0d52a15d877db81330156d8d41</Anchor>
    <Abstract>Process a (re)size event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a2ec0a58160afd109ae3e25d7d880e797</Anchor>
    <Abstract>Process a mouse event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ad1c42304a0c7890e216a4388a1d2373b</Anchor>
    <Abstract>Process a keyboard event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a16066f67716e151954e94756a4f37263</Anchor>
    <Abstract>Process an axis event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>aa8496fdc41099eacfb97b05bf8d1571d</Anchor>
    <Abstract>Process a button event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ab45ed6161cfacd3ae1b4a5bc7e24ca1c</Anchor>
    <Abstract>Set the window&amp;#39;s pixel viewport wrt its parent pipe. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a5542a45ce1eea5dafe7ec0d6a3589618</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a279a88dc1758222716c552305d5e9e90</Anchor>
    <Abstract>Set the window&amp;#39;s name. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a76359168d7109a57feb35d6d1d0877aa</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a0d782332f49d0ca59471f4ee106db118</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSharedContextWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a274123d370d12ba6acd5576640ea4f9f</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ac4931aa0dcd232b19680622a2e0d5dea</Anchor>
    <Abstract>Initialize this system window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ab0dac0408016b13d3e680706d19f3a14</Anchor>
    <Abstract>De-initialize this system window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a4f4214cab1221fe76590e0d831a29b05</Anchor>
    <Abstract>Make the system window rendering context and drawable current. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doneCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>aaa4b70f78481b877ca135ffff3aafeda</Anchor>
    <Abstract>This results in no context being current in the current thread. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a48cc9c18284f624614f14fded60deadf</Anchor>
    <Abstract>Bind the window&amp;#39;s FBO, if it uses an FBO drawable. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindDrawFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a9e594902c8bcd0c70eca54c9825d4118</Anchor>
    <Abstract>Bind the window&amp;#39;s draw FBO, used for multisampling. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a56a3074fd9a4380548f9924cab707357</Anchor>
    <Abstract>Update the window&amp;#39;s FBO from the multisampled FBO. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a29e00bd15296b876bc63c267c07950a2</Anchor>
    <Abstract>Swap the front and back buffer. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ac274fc5f05332661b0303e400869664b</Anchor>
    <Abstract>Flush all command buffers. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a1cbcc919db60a809a9be3c26f23e5f87</Anchor>
    <Abstract>Finish execution of all commands. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinNVSwapBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a055ea5d409568f2177581a9283c8966e</Anchor>
    <Abstract>Join a NV_swap_group. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ae8d031bd946e14d7bbc9445d4e3b06d9</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a3c9cea8825e239899ccd453b8f1299ea</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_version.html</Path>
    <Abstract>Information about the current Equalizer version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_version.html</Path>
    <Anchor>afbe4e1735273451342a27dbac923acba</Anchor>
    <DeclaredIn>eq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_version.html</Path>
    <Anchor>a7cfed2a685dedbf227b54255888c968a</Anchor>
    <DeclaredIn>eq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_version.html</Path>
    <Anchor>aaf6efd0926fe0b5775b24b2170781911</Anchor>
    <DeclaredIn>eq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_version.html</Path>
    <Anchor>a4cf29eaacd5dad1886d2d78176225122</Anchor>
    <DeclaredIn>eq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_version.html</Path>
    <Anchor>a64760bf29561a5be6d8f1cfab150fac6</Anchor>
    <DeclaredIn>eq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_version.html</Path>
    <Anchor>a8677bcaa3633ca359a750eff18a7e6ae</Anchor>
    <DeclaredIn>eq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_version.html</Path>
    <Anchor>a1e1e2966714ae5deab1a618127c22009</Anchor>
    <DeclaredIn>eq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_version.html</Path>
    <Anchor>a8da1f0cfc35025a617ef66eb2d055507</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>eq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_version.html</Path>
    <Anchor>a17ab5ec81edb18c7116cc6b637c773c7</Anchor>
    <DeclaredIn>eq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_version.html</Path>
    <Anchor>a98b25fc70e500775d56a9726894ed654</Anchor>
    <DeclaredIn>eq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::View</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_view.html</Path>
    <Abstract>A View is a 2D area of a Layout. </Abstract>
    <DeclaredIn>view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>View</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_view.html</Path>
    <Anchor>aed32174588eaf622d38e9ee005dbe875</Anchor>
    <Abstract>Construct a new view. </Abstract>
    <DeclaredIn>view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~View</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_view.html</Path>
    <Anchor>a4eef7b1aa6dbbe246b7af4f7a2e59e0b</Anchor>
    <Abstract>Destruct this view. </Abstract>
    <DeclaredIn>view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_view.html</Path>
    <Anchor>ac8b1c6862880c882985275c8e77ab7d2</Anchor>
    <DeclaredIn>view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_view.html</Path>
    <Anchor>a9059335f5d90b7444e52aaf5ee9a6f57</Anchor>
    <DeclaredIn>view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_view.html</Path>
    <Anchor>a78904c7d852b94777c228a7e31234506</Anchor>
    <DeclaredIn>view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_view.html</Path>
    <Anchor>a8808293ab4c4c0205f0ca17fd3c1eaaf</Anchor>
    <DeclaredIn>view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_view.html</Path>
    <Anchor>abda89256663b6af3e9601fbd18eb5a08</Anchor>
    <DeclaredIn>view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_view.html</Path>
    <Anchor>ac6cb6ce217fb18cec7753c2784cb65c7</Anchor>
    <Abstract>Handle a received (view) event. </Abstract>
    <DeclaredIn>view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSAttribute</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>aed8b18af7733da81a3a280582b79bbcb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViewport</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a3fe4fad549e3feea155256c53f865782</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLayout</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a436ae424b13d2a2a92e93f97905c7a0e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLayout</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>af21573263dcf627ed7aea569163dcfc5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setObserver</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a340f9fb5bf6739048ae2f7551719204e</Anchor>
    <Abstract>Set the entity tracking this view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getObserver</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>ad5d365d828a95a533574790b0c96f256</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getObserver</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a84f6a1a2db79bb5e5a8df8799ba51037</Anchor>
    <Abstract>const version of getObserver(). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOverdraw</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a74c7e3977f2a6b5cac1d3c8ab724c3bf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOverdraw</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a438db0f5f2cd87f6a04f7d79b6361cd1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useEqualizer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a4feaaa528c9118e31cfb97dc478eb4bb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEqualizers</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a79c6a601e2df8c37fcc8df9bc079e962</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEqualizer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a0b6794d64f1083897d702802ccf0338d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEqualizer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a6020d34e71bed66f0c382c46515cba2b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a1f47469d27d3e47cf05b6a727dae75d9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changeMode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a5538a14b335d3f272d2ebb6f11b5a135</Anchor>
    <Abstract>Set the mode of this view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>aa1e3f2d08ac77f877028b84b90dc93d1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setModelUnit</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a0c29370bbe767fb1a5824d3220093bde</Anchor>
    <Abstract>Set the model unit of this view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getModelUnit</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>acfb9c52a2850a49b7838891c9e0e2c65</Anchor>
    <Abstract>Get the model unit of this view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a96ebb4c8221ba402591de658b0d07434</Anchor>
    <Abstract>Traverse this view using a view visitor. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a85d7c327102e41ee7f87590d88c77017</Anchor>
    <Abstract>Const-version of accept(). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMinimumCapabilities</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a04b1fee2e4364ec5d94c7da847d847de</Anchor>
    <Abstract>Set the minimum required capabilities for this view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinimumCapabilities</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a2235b8a8a84e7a38ea12be04da3cac3b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaximumCapabilities</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a97bd6f198a5ffae87b344dd3c38df6f6</Anchor>
    <Abstract>Set the maximum desired capabilities for this view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaximumCapabilities</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a561e47befd2a5a9a54e165ee6bfdd05a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCapabilities</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a75e97c8a1500f7504ffb58c354f179ce</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a0bdbe97f54e13fcbaf24d5c20aaa23e1</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ac82bf838d019796b4a3d898bf9a6279e</Anchor>
    <Abstract>Set the name of the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a8b8235ef3a933f40cedcac9488b5d11e</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a074a96afc7fb9e31a1d5b4368ebde972</Anchor>
    <Abstract>Set user-specific data. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ad8344492a6a8222a8f87b622709e6768</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ae8a8ec5d8f869f441f44a31d345866bb</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTasks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3aec2e67eb4948d424c673faef62c63e</Anchor>
    <Abstract>Return the set of tasks this channel might execute in the worst case. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Frustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a90be6ccf2bc8c914386f1e4c05a261c4</Anchor>
    <Abstract>Construct a new frustum. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Frustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>aa8ce28807339f6d11553d7f2f4d1fbe0</Anchor>
    <Abstract>Destruct the frustum. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a4b0e4ab0f81f698f3353947ca6b5864b</Anchor>
    <Abstract>Set the frustum using a wall description. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>ac66cfc54f75f250a0f7fa7f98463c7a5</Anchor>
    <Abstract>Set the frustum using a projection description. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a91f256d93807510db28db6e50c880477</Anchor>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>acced38d338d315945ad93794e3ffda46</Anchor>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>afebc9278e21a6641ba1baa5b117d18fe</Anchor>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsetFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a4364e9b0755bd4f933cd6a9af8addea5</Anchor>
    <Abstract>Set the last specified frustum to TYPE_NONE. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBaseFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_view.html</Path>
    <Anchor>a12396c472ec246e331aabecce2ecb4b3</Anchor>
    <DeclaredIn>view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a47f610e5566c663c581fd1e6988995df</Anchor>
    <Abstract>The application view instance holds the user data master by default. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a6b8bfadb73fceb818ca32f33f46b2dd0</Anchor>
    <Abstract>The view user data instance uses the config latency by default. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aeaed0d358b6f67d6f3b4372d4e254484</Anchor>
    <Abstract>Construct a new Object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a4b753d5cb7ee3bd182075fa090f4ddbb</Anchor>
    <Abstract>Construct an unmapped, unregistered copy of an object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a2c301f8fda1bbd4bfb184f050a82ff91</Anchor>
    <Abstract>Destruct the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3140ce8ffc4d6dfa5cb053bc5102e84d</Anchor>
    <Abstract>NOP assignment operator. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_view.html</Path>
    <Anchor>a993a7f18e32b2ecebe1cd4a68a00c4f0</Anchor>
    <Abstract>Initialize this view. </Abstract>
    <DeclaredIn>view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_view.html</Path>
    <Anchor>a64ad240d545d842c8c15c76df6042b0b</Anchor>
    <Abstract>Exit this view. </Abstract>
    <DeclaredIn>view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSAttributeString</Name>
      <APILanguage>unknown</APILanguage>
      <Type>clm</Type>
      <Scope>eq::fabric::View&lt; Layout, View, Observer &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>acdbfa3b4757c573b3349cbc4c4b35849</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Window</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Abstract>A Window represents an on-screen or off-screen drawable. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a1cabe43eb3746e3bea41583f37578170</Anchor>
    <Abstract>Construct a new window. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a6a5502630f3f18534227690374e11f35</Anchor>
    <Abstract>Destruct the window. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>add648f452a6bacb3a08e6ce43715b34a</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a3049730d05be0541f1e1b6e8cde2f962</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>acf7a1cdf117ab5cd5eb12004cefb775f</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>aac2bbaff33e15cc4042e372ce894955b</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a8553ae42cae27010e8dc1cf4baa7a21a</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>af42356e7158e1429ffdfb9059a80b364</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a11cea64cf4da90ffb2845fba0b691bce</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStopped</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a95fe12ec0817578b03c19955e632d176</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>aeae92aef685f970b30277fae999972c4</Anchor>
    <Abstract>Get the last rendering context at the x, y position. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSharedContextWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a86e7b3d909352fc42a6b19ecb1bd253b</Anchor>
    <Abstract>Set the window with which this window shares the OpenGL context. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSharedContextWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a149f792ff17d384d7bb066b1b77b1a20</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getObjectManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>af48176e0621c8c8fc24480d6db5e29d7</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getObjectManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a2a898528fc6e359a969771233542da42</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSmallFont</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a9604a0494b3d1e31c4369e72345e89d0</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMediumFont</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a06a63375c0deddfa2b0769f73f414fcf</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a09363ad1a23edefbdf0838384d0b29e6</Anchor>
    <Abstract>Get the GLEW context for this window. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a005bd74fcbb9e7118fac6be2e60c08c6</Anchor>
    <Abstract>Set the OS-specific window. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>ab062df83cbfdafe7e912a7b615a5249a</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a6323c079b1ef203fc847eb8fe175ba25</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSystemPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>ab3e1c523537b2cd3a304f09648271e4c</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSystemPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>ae8c3b82d3731616755aba77c3f77ecf7</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a0b82ee781effd7c2d3721d770aa53c50</Anchor>
    <Abstract>Send a window error event to the application node. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>ad9b0263c62b73e3c3ac29a544fb1a41f</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>afe2d9d31a1e019c762f82988ed4ee161</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>ab9eacc6d478029edec49717d329d0dcc</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a2a026a83560460a6841d12e05d6ba4cd</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a94ac823dfcb7abda179b847a0ff30347</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a9f857bfc32679166524bfb02630b8abf</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window&lt; Pipe, Window, Channel, WindowSettings &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>ae20cb71c07cddbd45a7e67eb8dacd95e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window&lt; Pipe, Window, Channel, WindowSettings &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>a57234ed530a1941970642c4cc525fbe0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChannels</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window&lt; Pipe, Window, Channel, WindowSettings &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>aecf7049d25fa9ccb644bf630add94831</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDrawableConfig</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window&lt; Pipe, Window, Channel, WindowSettings &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>ae0bd5bde52211bf62d59afef25a205ba</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window&lt; Pipe, Window, Channel, WindowSettings &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>ab9b5de7fd1773f601a6812cccef373f9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViewport</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window&lt; Pipe, Window, Channel, WindowSettings &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>a02fd697cbda3a6b1b278cbd930fd6002</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window&lt; Pipe, Window, Channel, WindowSettings &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>ac1f95772888c8ab9ff9d66cd1f99ec89</Anchor>
    <Abstract>Set the window&amp;#39;s name/caption. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window&lt; Pipe, Window, Channel, WindowSettings &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>aa6cd344718a9bab2756097041ae9f684</Anchor>
    <Abstract>Set the window&amp;#39;s pixel viewport wrt its parent pipe. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setViewport</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window&lt; Pipe, Window, Channel, WindowSettings &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>ae8a10fbed695807c7d5ba029d7d08706</Anchor>
    <Abstract>Set the window&amp;#39;s viewport wrt its parent pipe. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedViewport</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window&lt; Pipe, Window, Channel, WindowSettings &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>a6204846074a724f7b3b477232c06a2c5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window&lt; Pipe, Window, Channel, WindowSettings &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>a005931beee0a18db7395785d6106c05f</Anchor>
    <Abstract>Perform a depth-first traversal of this window. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window&lt; Pipe, Window, Channel, WindowSettings &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>a27e5541d09da3fe7457493726982c797</Anchor>
    <Abstract>Const-version of accept(). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSettings</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window&lt; Pipe, Window, Channel, WindowSettings &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>a5f7939f4b2cb8be732ff30fb954a5c08</Anchor>
    <Abstract>Set the settings of this window. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSettings</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window&lt; Pipe, Window, Channel, WindowSettings &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>aedf9f15423e2cb9804dcba704f18f0d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIAttribute</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window&lt; Pipe, Window, Channel, WindowSettings &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>a41df0221b9cdc5c01abc9ebb7cfa710e</Anchor>
    <Abstract>Set a window attribute. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window&lt; Pipe, Window, Channel, WindowSettings &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>a5f9d103a9fa3a1c89178346f4693d994</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a0bdbe97f54e13fcbaf24d5c20aaa23e1</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a8b8235ef3a933f40cedcac9488b5d11e</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a074a96afc7fb9e31a1d5b4368ebde972</Anchor>
    <Abstract>Set user-specific data. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ad8344492a6a8222a8f87b622709e6768</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ae8a8ec5d8f869f441f44a31d345866bb</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTasks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3aec2e67eb4948d424c673faef62c63e</Anchor>
    <Abstract>Return the set of tasks this channel might execute in the worst case. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a4ee502a98e6cf40f6d8b34858f4e3084</Anchor>
    <Abstract>Initialize this window. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitSystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a6d278c7a3c57065ea1dc19c9ff297e1b</Anchor>
    <Abstract>Initialize the OS-specific window. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a7569878bca5c0630b0a32b63e62b459e</Anchor>
    <Abstract>Initialize the OpenGL state for this window. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a42246994cd273ce98b70c30f5fdef373</Anchor>
    <Abstract>Exit this window. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExitSystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>ace29b8f5397d446ec53519e927b2d9a7</Anchor>
    <Abstract>De-initialize the OS-specific window. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExitGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>add25ada4656b7b6fb97b81fafc985e07</Anchor>
    <Abstract>De-initialize the OpenGL state for this window. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a9f1c3acc2a8e9f7497681c9503b71ede</Anchor>
    <Abstract>Start rendering a frame. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a20dee2914dafd034d9a7f88b06a803ee</Anchor>
    <Abstract>Finish rendering a frame. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameDrawFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a419652dab2aa12074f3a3da79062bbf5</Anchor>
    <Abstract>Finish drawing. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window&lt; Pipe, Window, Channel, WindowSettings &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>ad4d19918e0b173d3f6527fe48a36ab5c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aeaed0d358b6f67d6f3b4372d4e254484</Anchor>
    <Abstract>Construct a new Object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a4b753d5cb7ee3bd182075fa090f4ddbb</Anchor>
    <Abstract>Construct an unmapped, unregistered copy of an object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a2c301f8fda1bbd4bfb184f050a82ff91</Anchor>
    <Abstract>Destruct the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3140ce8ffc4d6dfa5cb053bc5102e84d</Anchor>
    <Abstract>NOP assignment operator. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aea00c39dfb613d9fb7843dbb68459892</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a321f24113c02e0f16830a403e03f62e9</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>adaec00c6b8327a1f69acf7fee56df676</Anchor>
    <Abstract>Flush outstanding rendering requests. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a2c89027710a137df4f4cc35cb2e28158</Anchor>
    <Abstract>Finish outstanding rendering requests. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>af6ae3fdab64a86662d67044cdf9f583e</Anchor>
    <Abstract>Swap the front and back buffer of the window. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawFPS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>affb3f7909d1cc1406449964485cf8b76</Anchor>
    <Abstract>Render the current framerate as on overlay. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFPS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a74280fc4026fac06170ec7b57fb69ce8</Anchor>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a5e15bf16f8e90d98cf8bcbaa9e62704e</Anchor>
    <Abstract>Make the window&amp;#39;s drawable and context current. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doneCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a98558abf7f403219f2999c75587116d6</Anchor>
    <Abstract>This results in no context being current in the current thread. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>aef0c73e72fba4f624f1074267f57f2f5</Anchor>
    <Abstract>Start a frame by unlocking all child resources. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>aded7c1ca1dae8a37bf38414c115a0ef1</Anchor>
    <Abstract>Signal the completion of a frame to the parent. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseFrameLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window.html</Path>
    <Anchor>a46e6efee9f495bc201fa24997b033af0</Anchor>
    <Abstract>Signal the release of the local synchronization to the parent. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Channels</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Window&lt; Pipe, Window, Channel, WindowSettings &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>a1ea47ec88c8a3f1d3236f464ce2eb530</Anchor>
    <Abstract>A vector of pointers to channels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Visitor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Window&lt; Pipe, Window, Channel, WindowSettings &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>a7a62d967c5413fe38ff50b0290527a6f</Anchor>
    <Abstract>The Window visitor type. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::WindowSettings</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window_settings.html</Path>
    <Abstract>A set of settings to setup an eq::SystemWindow. </Abstract>
    <DeclaredIn>windowSettings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WindowSettings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window_settings.html</Path>
    <Anchor>acbb21a8838eddf3d8a6a58019aa27a64</Anchor>
    <Abstract>Create a new WindowSettings. </Abstract>
    <DeclaredIn>windowSettings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WindowSettings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window_settings.html</Path>
    <Anchor>a95fbbe13bbe4fa90dcdc6e93c22ff863</Anchor>
    <Abstract>Destroy the WindowSettings. </Abstract>
    <DeclaredIn>windowSettings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSharedContextWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window_settings.html</Path>
    <Anchor>a532f28cc9daa9e155fe9ba8200b7bbb3</Anchor>
    <DeclaredIn>windowSettings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSharedContextWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window_settings.html</Path>
    <Anchor>abab86c989b79c0c5307fd11af78049da</Anchor>
    <DeclaredIn>windowSettings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getColorFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window_settings.html</Path>
    <Anchor>a7548a1f1ecd55659292a7c2ced1bd468</Anchor>
    <DeclaredIn>windowSettings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WindowSettings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ab113b1cec643d8ffe438cfd0f2a77db6</Anchor>
    <Abstract>Create a new WindowSettings. </Abstract>
    <DeclaredIn>fabric/windowSettings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>a26e182d01f766e48768d7059fccea575</Anchor>
    <Abstract>Set a window attribute. </Abstract>
    <DeclaredIn>fabric/windowSettings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>a0318a7ae0f34eed3848939f09f95b9e2</Anchor>
    <DeclaredIn>fabric/windowSettings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>a2aa0119bf596609877a2611c933e00c4</Anchor>
    <DeclaredIn>fabric/windowSettings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad39aef74305bf3bde3be67d34485699f</Anchor>
    <Abstract>Set the window&amp;#39;s pixel viewport wrt its parent pipe. </Abstract>
    <DeclaredIn>fabric/windowSettings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>a6819b69f944d3ec6fc2f40c13d737282</Anchor>
    <DeclaredIn>fabric/windowSettings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>a95af8e4e01837687bfebf97554498af7</Anchor>
    <Abstract>Set the window&amp;#39;s name. </Abstract>
    <DeclaredIn>fabric/windowSettings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::WindowStatistics</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::WindowStatistics</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window_statistics.html</Path>
    <Abstract>A statistics sampler for window-related events. </Abstract>
    <DeclaredIn>windowStatistics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WindowStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::WindowStatistics</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window_statistics.html</Path>
    <Anchor>ac9af791af4e7ac1a3f6e601e3890bea0</Anchor>
    <Abstract>Construct a statistics sampler and sample the start time. </Abstract>
    <DeclaredIn>windowStatistics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WindowStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::WindowStatistics</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window_statistics.html</Path>
    <Anchor>a8b5d2de5f1f3e7913de1e2f01a487bf7</Anchor>
    <Abstract>Destruct the sampler, sample the end time and send the event. </Abstract>
    <DeclaredIn>windowStatistics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StatisticSampler</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::StatisticSampler&lt; Window &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_statistic_sampler.html</Path>
    <Anchor>a23061fad41a6239a00df8a6ba0f45611</Anchor>
    <Abstract>Construct a new statistics sampler. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~StatisticSampler</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>eq::StatisticSampler&lt; Window &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_statistic_sampler.html</Path>
    <Anchor>a56d51f434be5150397265cd274f9b2b0</Anchor>
    <Abstract>Destruct and finish statistics sampling. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statistic</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>eq::StatisticSampler&lt; Window &gt;</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_statistic_sampler.html</Path>
    <Anchor>ae2565c1c86fbeb4b119f77c0d67132bf</Anchor>
    <Abstract>The statistics event. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::WindowSystem</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::WindowSystem</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window_system.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::WindowSystemIF</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::WindowSystemIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window_system_i_f.html</Path>
    <Abstract>The interface for windowing toolkits. </Abstract>
    <DeclaredIn>windowSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WindowSystemIF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::WindowSystemIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window_system_i_f.html</Path>
    <Anchor>a3b7f437cdcbc692aad887ce4da1791bb</Anchor>
    <Abstract>Destroy the window system instance. </Abstract>
    <DeclaredIn>windowSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WindowSystemIF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::WindowSystemIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window_system_i_f.html</Path>
    <Anchor>a343e6eba0f7c26ea03590b7b5ed34bc0</Anchor>
    <Abstract>Create a new window system instance. </Abstract>
    <DeclaredIn>windowSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::WindowSystemIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window_system_i_f.html</Path>
    <Anchor>ad7ffe6a93763209e799f096f602c5dc6</Anchor>
    <DeclaredIn>windowSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::WindowSystemIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window_system_i_f.html</Path>
    <Anchor>a54ec5f2096471bdcbdc88918cf01074d</Anchor>
    <DeclaredIn>windowSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::WindowSystemIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window_system_i_f.html</Path>
    <Anchor>a804ac4cacba94c68d2c83e941d49b524</Anchor>
    <DeclaredIn>windowSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::WindowSystemIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window_system_i_f.html</Path>
    <Anchor>a7eebd977c8e420dd15eae0cbeee58b11</Anchor>
    <DeclaredIn>windowSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupFont</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::WindowSystemIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window_system_i_f.html</Path>
    <Anchor>a16b5555eb3c9e0379297d4ea1574d801</Anchor>
    <Abstract>Create a set of display lists for the given font. </Abstract>
    <DeclaredIn>windowSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::WindowSystemIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window_system_i_f.html</Path>
    <Anchor>a8fc5a751fd0f2fd6f2794fdc38a0a7e0</Anchor>
    <Abstract>Perform per-process initialization for a Config. </Abstract>
    <DeclaredIn>windowSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::WindowSystemIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window_system_i_f.html</Path>
    <Anchor>a3377595d03c779401de1be36023cb137</Anchor>
    <Abstract>Perform per-process de-initialization for a Config. </Abstract>
    <DeclaredIn>windowSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMainThreadEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::WindowSystemIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_window_system_i_f.html</Path>
    <Anchor>a58a0f7e0b9e2bfd58a2015527005fd8e</Anchor>
    <DeclaredIn>windowSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::agl</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>eq::agl</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1agl.html</Path>
    <Abstract>The system abstraction layer for Apple OpenGL and Carbon. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Abstract>The Equalizer data synchronization fabric. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Errors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a9cbbd34f2543fc857ef058cee0e3c0f1</Anchor>
    <Abstract>A vector of eq::fabric::Error. </Abstract>
    <DeclaredIn>eq/fabric/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Statistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>aade8daf8106b656d1f94dfb0bd7811fa</Anchor>
    <Abstract>A vector of eq::Statistic events. </Abstract>
    <DeclaredIn>eq/fabric/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Viewports</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a91bd2355388cf8bb46f7b7e9be0f1bb6</Anchor>
    <Abstract>A vector of eq::Viewport. </Abstract>
    <DeclaredIn>eq/fabric/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a5dc2b4cda790260524b78112857e884f</Anchor>
    <Abstract>Print the axis event to the given output stream. </Abstract>
    <DeclaredIn>axisEvent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>aa2b107b554f48ff39112985525c0fac5</Anchor>
    <Abstract>Print the button event to the given output stream. </Abstract>
    <DeclaredIn>buttonEvent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a125d40ba5b1d49f860369a8a63c1ae6d</Anchor>
    <Abstract>Print the error in a human-readable format. </Abstract>
    <DeclaredIn>eq/fabric/error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a1da4cd1605457b0b03b82f706644b3c1</Anchor>
    <Abstract>Print the event to the given output stream. </Abstract>
    <DeclaredIn>event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>ab3fcd2d5e4130e43051d51226b45788b</Anchor>
    <Abstract>Print the frame to the given output stream. </Abstract>
    <DeclaredIn>fabric/frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a16900cf1fe5f3064f48719e140fbb3e1</Anchor>
    <Abstract>Print the frame type to the given output stream. </Abstract>
    <DeclaredIn>fabric/frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a0644a9130327b677935686035a7a4365</Anchor>
    <Abstract>Print the frame buffer value to the given output stream. </Abstract>
    <DeclaredIn>fabric/frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>ac2f6592cad0c678acfe91e77d259586e</Anchor>
    <Abstract>Initialize the Equalizer fabric namespace. </Abstract>
    <DeclaredIn>fabric/init.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a6e6b3df29b8d10ddbec3e62671eda759</Anchor>
    <Abstract>De-initialize the Equalizer fabric namespace. </Abstract>
    <DeclaredIn>fabric/init.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a0c06d0c8dd6c34d77eec3a012c5cd099</Anchor>
    <Abstract>Print the key event to the given output stream. </Abstract>
    <DeclaredIn>keyEvent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a8af5efc978573db08aed31c5c6a63727</Anchor>
    <Abstract>Print the pointer event to the given output stream. </Abstract>
    <DeclaredIn>pointerEvent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a60dc132ac0b42f7f8b90ddcb8f32ac11</Anchor>
    <Abstract>Print the resize event to the given output stream. </Abstract>
    <DeclaredIn>sizeEvent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a2dc9ab65bced694c6f22cf9965294c4a</Anchor>
    <Abstract>Output the statistic type to an std::ostream. </Abstract>
    <DeclaredIn>statistic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a609e990669014a5c3dfb99e7c66dd5b0</Anchor>
    <Abstract>Output the statistic to an std::ostream. </Abstract>
    <DeclaredIn>statistic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EYE_CYCLOP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>acd9290e9a8f5396b08915ded7f1d9315a151f1ba05df37e987912416f7b30aa5e</Anchor>
    <Abstract>monoscopic &amp;#39;middle&amp;#39; eye </Abstract>
    <DeclaredIn>fabric/eye.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EYE_LEFT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>acd9290e9a8f5396b08915ded7f1d9315a1d5f15815cfb0f532debceab9fbb3234</Anchor>
    <Abstract>left eye </Abstract>
    <DeclaredIn>fabric/eye.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EYE_RIGHT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>acd9290e9a8f5396b08915ded7f1d9315ad83baed15e504192c6285a79d50b3780</Anchor>
    <Abstract>right eye </Abstract>
    <DeclaredIn>fabric/eye.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EYE_LAST</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>acd9290e9a8f5396b08915ded7f1d9315a74cc970853c560104950405257b2de2d</Anchor>
    <Abstract>the last eye </Abstract>
    <DeclaredIn>fabric/eye.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EYES_STEREO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>acd9290e9a8f5396b08915ded7f1d9315a4945b2163c8f3986432e2bf0da35bed0</Anchor>
    <Abstract>left and right eye </Abstract>
    <DeclaredIn>fabric/eye.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EYES_ALL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>acd9290e9a8f5396b08915ded7f1d9315aede128b65b4b1bf61c3304f7be57f324</Anchor>
    <Abstract>all eyes </Abstract>
    <DeclaredIn>fabric/eye.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FOCUSMODE_FIXED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a9a82c5790fc00e5a499352e8598c01aaa058f51d46514a235243a23bd9ec0b6fa</Anchor>
    <Abstract>Focus on physical projection. </Abstract>
    <DeclaredIn>focusMode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FOCUSMODE_RELATIVE_TO_ORIGIN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a9a82c5790fc00e5a499352e8598c01aaafbcfb5304cd720f44cb0de3b677ebe57</Anchor>
    <Abstract>Focus distance relative and in -Z axis of origin. </Abstract>
    <DeclaredIn>focusMode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FOCUSMODE_RELATIVE_TO_OBSERVER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a9a82c5790fc00e5a499352e8598c01aaaeccaa778978a4bd4ba54a6c62b230cc7</Anchor>
    <Abstract>Focus distance relative and in direction of observer. </Abstract>
    <DeclaredIn>focusMode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UNDEFINED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a7a39b4d7daaafe7ee47b948a82356cf9</Anchor>
    <Abstract>Undefined value. </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SOCKET</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a76ff681f8dc917ac432aada5f01be30b</Anchor>
    <Abstract>CPU thread affinity: -64k..-1024. </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CORE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a39953841ba513e364b4c18fa9e9f1ad4</Anchor>
    <Abstract>Core thread affinity: 1..oo. </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SOCKET_MAX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a2b293f8758aec4b2f73d63a30ef621c0</Anchor>
    <Abstract>Highes bindable CPU. </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RELATIVE_TO_OBSERVER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2ab094545dcfa4c2b2c595a2aa0e364f42</Anchor>
    <Abstract>focal convergence relative to observer </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RELATIVE_TO_ORIGIN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2ac06ad74bb2d305a30dde5c47e8008557</Anchor>
    <Abstract>focal convergence relative to origin </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIXED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a14e3bc2cbdf8cd1adafbdd42df9bc71d</Anchor>
    <Abstract>config or observer focus fixed on wall/projection </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RGBA32F</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a09dea5fc7e9f2a16345da2a8f0bc17b9</Anchor>
    <Abstract>Float32 framebuffer (WindowSettings::IATTR_PLANES_COLOR) </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RGBA16F</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a147f4d3382cd3f330cb2f056d2d7ac6d</Anchor>
    <Abstract>Float16 framebuffer (WindowSettings::IATTR_PLANES_COLOR) </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2af2b4a222009a5f449e38fb25f5455d5c</Anchor>
    <Abstract>FBO drawable (WindowSettings::IATTR_HINT_DRAWABLE) </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOCAL_SYNC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a7bce4e91fbeb48cd2dbb6ece15aa6042</Anchor>
    <Abstract>Full local sync (Node::IATTR_THREAD_MODEL) </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DRAW_SYNC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2ab42af08df96f5abf4ee8d94c1283e0b2</Anchor>
    <Abstract>Local draw sync (Node::IATTR_THREAD_MODEL) </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ASYNC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2ad05943daebd995374763de385845d2c9</Anchor>
    <Abstract>No local sync (Node::IATTR_THREAD_MODEL) </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PBUFFER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a49a543192f4299a3a6f9f2b60898bec9</Anchor>
    <Abstract>PBuffer drawable (WindowSettings::IATTR_HINT_DRAWABLE) </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a5dc85dcf970fef784490ca52c9fa8651</Anchor>
    <Abstract>Window drawable (WindowSettings::IATTR_HINT_DRAWABLE) </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VERTICAL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2abe836a3ae3d50d5656d18f05a09d8e59</Anchor>
    <Abstract>Vertical load-balancing. </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QUAD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2ae9748b78c839c1b2e9361bd1bf56dd09</Anchor>
    <Abstract>Quad-buffered stereo decomposition. </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ANAGLYPH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2aba42784cc4ea919ac814c9d94fbde6b1</Anchor>
    <Abstract>Anaglyphic stereo decomposition. </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PASSIVE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2af1b1efde1de8e869f841c5dae119b754</Anchor>
    <Abstract>Passive stereo rendering. </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICEST</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a3c2346f35d2141c4821610f69a1eaf50</Anchor>
    <Abstract>Nicest statistics gathering (WindowSettings::IATTR_HINT_STATISTICS, Channel::IATTR_HINT_STATISTICS) ...</Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2afea8a64c1aef24d76cdbd4d7dd27ce0c</Anchor>
    <Abstract>Automatic selection (various attributes) </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OFF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a5d3165051d79665732e9e6c06ff02128</Anchor>
    <Abstract>disabled (various attributes) </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a214d2cf8b301cb58983036df95de3d00</Anchor>
    <Abstract>enabled (various attributes) </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FASTEST</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a0227251703de6c882798a6b9b6d35c61</Anchor>
    <Abstract>Fastest statistics gathering (WindowSettings::IATTR_HINT_STATISTICS, Channel::IATTR_HINT_STATISTICS) ...</Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HORIZONTAL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a8213313496c3b4ac3104ba55d686fe8f</Anchor>
    <Abstract>Horizontal load-balancing. </Abstract>
    <DeclaredIn>iAttribute.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_INIT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a65f25f150c93d992a29cb6237d32fb5ca0b947a608086729315989294636fda98</Anchor>
    <Abstract>Log initialization (512) </Abstract>
    <DeclaredIn>fabric/log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_ASSEMBLY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a65f25f150c93d992a29cb6237d32fb5cafc6bbb7c67e2500960ad7be954901575</Anchor>
    <Abstract>Compositing tasks (1024) </Abstract>
    <DeclaredIn>fabric/log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_TASKS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a65f25f150c93d992a29cb6237d32fb5cad8dc021d021cc12cd193b36c5fd306c8</Anchor>
    <Abstract>Rendering tasks (2048) </Abstract>
    <DeclaredIn>fabric/log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_CUSTOM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a65f25f150c93d992a29cb6237d32fb5caf096b965ceb7ca4f3955c99a6f308d6c</Anchor>
    <Abstract>32768 </Abstract>
    <DeclaredIn>fabric/log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NODETYPE_SERVER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a7a79990d899212df9a55559a946fa102a1dc4c34ace90e54ea6e9fcfac38b28e5</Anchor>
    <Abstract>A server node. </Abstract>
    <DeclaredIn>nodeType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TASK_DEFAULT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a978851485c07a71e4fff423d89b285d8a394aee61bef302ab4fe5c557d163ab72</Anchor>
    <Abstract>leaf: all, other ASSEMBLE|READBACK|VIEW </Abstract>
    <DeclaredIn>task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TASK_VIEW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a978851485c07a71e4fff423d89b285d8af22278d9d4393b4ce9fd57be41021558</Anchor>
    <Abstract>View start/finish. </Abstract>
    <DeclaredIn>task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TASK_CLEAR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a978851485c07a71e4fff423d89b285d8a55b628bde3a395ef7754dd7644081f55</Anchor>
    <Abstract>Clear the framebuffer. </Abstract>
    <DeclaredIn>task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TASK_DRAW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a978851485c07a71e4fff423d89b285d8a6c29280792a95a19cb8413b985ced713</Anchor>
    <Abstract>Draw data to the framebuffer. </Abstract>
    <DeclaredIn>task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TASK_ASSEMBLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a978851485c07a71e4fff423d89b285d8a2ea027dd4094092dfe1ba891793bf819</Anchor>
    <Abstract>Combine input frames. </Abstract>
    <DeclaredIn>task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TASK_READBACK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a978851485c07a71e4fff423d89b285d8a54339a7277ade86c1dcbd21f61f7f888</Anchor>
    <Abstract>Read results to output frames. </Abstract>
    <DeclaredIn>task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::AxisEvent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::AxisEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_axis_event.html</Path>
    <Abstract>Event for a (SpaceMouse) axis movement. </Abstract>
    <DeclaredIn>axisEvent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::AxisEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_axis_event.html</Path>
    <Anchor>af60d1c6a06e7283141d9d046372b5bb2</Anchor>
    <Abstract>X translation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>yAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::AxisEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_axis_event.html</Path>
    <Anchor>af68653b6897a7cfea46c06f150d6a741</Anchor>
    <Abstract>Y translation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::AxisEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_axis_event.html</Path>
    <Anchor>a092e450a6996401aa87c76af3cfb1cc7</Anchor>
    <Abstract>Z translation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xRotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::AxisEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_axis_event.html</Path>
    <Anchor>a96ffd32b9db3be33a86a7db83f18c635</Anchor>
    <Abstract>X rotation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>yRotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::AxisEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_axis_event.html</Path>
    <Anchor>aa0fbe3cecc133ad0d403848e52e3eaef</Anchor>
    <Abstract>Y rotation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zRotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::AxisEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_axis_event.html</Path>
    <Anchor>a5804ee1833775e4f9e4c7ddbe877e092</Anchor>
    <Abstract>Z rotation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_event.html</Path>
    <Anchor>a12d5512d2bb24de27dcc3fa609c6da26</Anchor>
    <Abstract>unique originator serial number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_event.html</Path>
    <Anchor>a5a699e4a1d9cb9069b7588041818df2e</Anchor>
    <Abstract>The config time when the event was created. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>originator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_event.html</Path>
    <Anchor>a45f48e57172f44f17cc73f1150118bf5</Anchor>
    <Abstract>The identifier of the entity emitting the event. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::ButtonEvent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::ButtonEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_button_event.html</Path>
    <Abstract>Event for a (SpaceMouse) click. </Abstract>
    <DeclaredIn>buttonEvent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>button</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::ButtonEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_button_event.html</Path>
    <Anchor>a1a0aabc51a8a1b1db7e0954b18191bb2</Anchor>
    <Abstract>fired button </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buttons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::ButtonEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_button_event.html</Path>
    <Anchor>ae2eb0466ebaf49ecd4abce096e9a2a93</Anchor>
    <Abstract>current state of all buttons </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_event.html</Path>
    <Anchor>a12d5512d2bb24de27dcc3fa609c6da26</Anchor>
    <Abstract>unique originator serial number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_event.html</Path>
    <Anchor>a5a699e4a1d9cb9069b7588041818df2e</Anchor>
    <Abstract>The config time when the event was created. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>originator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_event.html</Path>
    <Anchor>a45f48e57172f44f17cc73f1150118bf5</Anchor>
    <Abstract>The identifier of the entity emitting the event. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Canvas</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Abstract>A canvas represents a logical 2D projection surface. </Abstract>
    <DeclaredIn>canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Canvases</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a6a67e9740720e6d423a7c046c6792523</Anchor>
    <Abstract>A vector of canvases. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Segments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>af8784510d513b46d6a17981dbda687ca</Anchor>
    <Abstract>A vector of segments. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Layouts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>aa2ba02e09640fe2107984f5368f14928</Anchor>
    <Abstract>A vector of layouts. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Visitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a95b6899fe275cbe3214d8d41f95fd515</Anchor>
    <Abstract>A Canvas visitor. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a217d5ee92bba00ece42388b8629f0729</Anchor>
    <DeclaredIn>fabric/canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>afba34d60aae57b7eaac4cdba2616ec4c</Anchor>
    <DeclaredIn>fabric/canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActiveLayoutIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a8e24e509abfe033a4d76edf3ef6ef6ba</Anchor>
    <DeclaredIn>fabric/canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActiveLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>ac7a7a7dd37398e844ae3e78cebc8cd5b</Anchor>
    <DeclaredIn>fabric/canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSegments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a4690d08d2fbbf3926187fd130ab23e79</Anchor>
    <DeclaredIn>fabric/canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLayouts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>ac597f5b646ef8a194e9f8402a723f266</Anchor>
    <DeclaredIn>fabric/canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a91af3b5eee7db059974b12a0e84adfac</Anchor>
    <DeclaredIn>fabric/canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a098b5e998171a19ffbaa1b7f58ac60d4</Anchor>
    <DeclaredIn>fabric/canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsetFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a1683f218771ec081436cc3868da3a1fc</Anchor>
    <DeclaredIn>fabric/canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a139a4ab8462bec50fb84052a69579f50</Anchor>
    <Abstract>Activate the given layout on this canvas. </Abstract>
    <DeclaredIn>fabric/canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>affe95b4bbe1909168fca3eaa2bfef1d8</Anchor>
    <Abstract>Traverse this canvas and all children using a canvas visitor. </Abstract>
    <DeclaredIn>fabric/canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a446782b9968af972bdbd57390961631d</Anchor>
    <Abstract>Const-version of accept(). </Abstract>
    <DeclaredIn>fabric/canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a0bdbe97f54e13fcbaf24d5c20aaa23e1</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ac82bf838d019796b4a3d898bf9a6279e</Anchor>
    <Abstract>Set the name of the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a8b8235ef3a933f40cedcac9488b5d11e</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a074a96afc7fb9e31a1d5b4368ebde972</Anchor>
    <Abstract>Set user-specific data. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ad8344492a6a8222a8f87b622709e6768</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ae8a8ec5d8f869f441f44a31d345866bb</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTasks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3aec2e67eb4948d424c673faef62c63e</Anchor>
    <Abstract>Return the set of tasks this channel might execute in the worst case. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Frustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a90be6ccf2bc8c914386f1e4c05a261c4</Anchor>
    <Abstract>Construct a new frustum. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Frustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>aa8ce28807339f6d11553d7f2f4d1fbe0</Anchor>
    <Abstract>Destruct the frustum. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a4b0e4ab0f81f698f3353947ca6b5864b</Anchor>
    <Abstract>Set the frustum using a wall description. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>ac66cfc54f75f250a0f7fa7f98463c7a5</Anchor>
    <Abstract>Set the frustum using a projection description. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a91f256d93807510db28db6e50c880477</Anchor>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>acced38d338d315945ad93794e3ffda46</Anchor>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>afebc9278e21a6641ba1baa5b117d18fe</Anchor>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsetFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a4364e9b0755bd4f933cd6a9af8addea5</Anchor>
    <Abstract>Set the last specified frustum to TYPE_NONE. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Canvas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>ab76c5c0835a408c41abce1608aa28735</Anchor>
    <Abstract>Construct a new Canvas. </Abstract>
    <DeclaredIn>fabric/canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Canvas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a8025946d815808fff70cb7deffe25e41</Anchor>
    <Abstract>Destruct this canvas. </Abstract>
    <DeclaredIn>fabric/canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a572f480b70277ed366df880293cb9cc4</Anchor>
    <DeclaredIn>fabric/canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>ae9c45e98c992587e367997fb22e7521f</Anchor>
    <DeclaredIn>fabric/canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_canvas.html</Path>
    <Anchor>a7965e8f32b362d86f366fd5da976f03e</Anchor>
    <DeclaredIn>fabric/canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aeaed0d358b6f67d6f3b4372d4e254484</Anchor>
    <Abstract>Construct a new Object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a4b753d5cb7ee3bd182075fa090f4ddbb</Anchor>
    <Abstract>Construct an unmapped, unregistered copy of an object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a2c301f8fda1bbd4bfb184f050a82ff91</Anchor>
    <Abstract>Destruct the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3140ce8ffc4d6dfa5cb053bc5102e84d</Anchor>
    <Abstract>NOP assignment operator. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aea00c39dfb613d9fb7843dbb68459892</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a321f24113c02e0f16830a403e03f62e9</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Channel</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Abstract>Base data transport class for channels. </Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Visitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>ae05bc99a89d01a880b5fefe8fb00c4fb</Anchor>
    <Abstract>The channel visitor type. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a8e9fd882027bb6f2d5597c2a470ab686</Anchor>
    <Abstract>The parent window type. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>ab2aaed90da9030248d5255f1cfe2070f</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a6356f651199bba9b9925bc3c54b859ab</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNativePixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a7c9bd91890416d860cde709b3139aaa0</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a0f1854b0407fd8bf1b67019addcd20b5</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNearFar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a68de09f0af71688cd6021f4dee283f4d</Anchor>
    <Abstract>Set the near and far planes for this channel. </Abstract>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a2b9db6dc0a855ee41beb681b5615515a</Anchor>
    <Abstract>Perform a depth-first traversal of this channel. </Abstract>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a97b12497d9cef79372df69f0f61ed14a</Anchor>
    <Abstract>Const-version of accept(). </Abstract>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCapabilities</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>ad1b9b116389b4907f2d1804bd81a2193</Anchor>
    <Abstract>Set the capabilities supported by the channel. </Abstract>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCapabilities</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a0a786b8cf66393ebe4633405df1469f2</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>af667b4074f02e830aa7cddfc1451926f</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDrawBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a861f4c291a77b09cce9e788bfd380127</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReadBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a343254c0881fbcdbbe39270e930cd2a5</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDrawBufferMask</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a1885ef51b70bee3b8e1d099ca7487ff7</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a3943b82e9a4980f41155e2e95aa14d83</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useOrtho</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a9b3d02de45551ad52be390928bb54554</Anchor>
    <Abstract>Select perspective or orthographic rendering. </Abstract>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a8e9c77f2ee356d6aa3c2b4d97dc709c2</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPerspective</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a0c986a8eca7a82df6f7b05324fc92554</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOrtho</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>adfd47320b686909e4c78df306cd1498b</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeadTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a9b48c6ea3bec6054f6503d06834e56f4</Anchor>
    <Abstract>Return the view matrix. </Abstract>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPerspectiveTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a312f67c94ba255d2196bb01f514897cf</Anchor>
    <Abstract>Return the perspective view matrix. </Abstract>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOrthoTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a9a8a69b8f063d81a1decd6320df56273</Anchor>
    <Abstract>Return the orthographic view matrix. </Abstract>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>aa5df108f0004ee002e568d3181419c07</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>ad91975289a44e9f9578de0c9aa5b842c</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a12d825673baf323b931e560a28114290</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSubPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>ab611fbd3666f5d4651905873695d207d</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>ad86daca55af983a02ddc6156b22847b2</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a29b7a2aea745e70b62705da8e23a771c</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>aa31a1cd7f63257809d99ed0386d2a17c</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a12c18e0d277dc35920e4ca8941f5f63b</Anchor>
    <Abstract>Get the channel&amp;#39;s current position wrt the destination channel. </Abstract>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEye</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>ae765a57b67dcd806fb5906ec246dfaa1</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOverdraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a33e206b85fb85058fa829f8d3cb425af</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTaskID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a3a42f9b72a9a918659c83b06b9075134</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a6c8bf1ea71680c7310e8da842f0e114c</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a0bdbe97f54e13fcbaf24d5c20aaa23e1</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ac82bf838d019796b4a3d898bf9a6279e</Anchor>
    <Abstract>Set the name of the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a8b8235ef3a933f40cedcac9488b5d11e</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a074a96afc7fb9e31a1d5b4368ebde972</Anchor>
    <Abstract>Set user-specific data. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ad8344492a6a8222a8f87b622709e6768</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ae8a8ec5d8f869f441f44a31d345866bb</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTasks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3aec2e67eb4948d424c673faef62c63e</Anchor>
    <Abstract>Return the set of tasks this channel might execute in the worst case. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>ab6993ec8fd0d503af791656d19390201</Anchor>
    <Abstract>Construct a new channel. </Abstract>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a7ccc7384abdd3235d9682063249d14d6</Anchor>
    <Abstract>Construct a copy of a channel (view/segment dest). </Abstract>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a43e0432b68ab37a66e0e3e1e48bc90fe</Anchor>
    <Abstract>Destruct the channel. </Abstract>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aeaed0d358b6f67d6f3b4372d4e254484</Anchor>
    <Abstract>Construct a new Object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a4b753d5cb7ee3bd182075fa090f4ddbb</Anchor>
    <Abstract>Construct an unmapped, unregistered copy of an object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a2c301f8fda1bbd4bfb184f050a82ff91</Anchor>
    <Abstract>Destruct the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3140ce8ffc4d6dfa5cb053bc5102e84d</Anchor>
    <Abstract>NOP assignment operator. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aea00c39dfb613d9fb7843dbb68459892</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a321f24113c02e0f16830a403e03f62e9</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>ab95924efea8b5108e4310807c19dfe7a</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a347c8bdf0dfe51459692ba75feb9d2b0</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttributeString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a476015e957cef7f0e52d0b91a3197f43</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSAttributeString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a796eadb73b83c74dd37c9350563661b9</Anchor>
    <DeclaredIn>fabric/channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_STATISTICS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a7b6740187badb415e81d5662fcde4b86a5cabbab59a24ad8442f62bc4fa708db4</Anchor>
    <Abstract>Statistics gathering mode (OFF, FASTEST [ON], NICEST) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_SENDTOKEN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_channel.html</Path>
    <Anchor>a7b6740187badb415e81d5662fcde4b86adbf0d71708df321708d04e6833433539</Anchor>
    <Abstract>Use a send token for output frames (OFF, ON) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Client</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_client.html</Path>
    <Abstract>A client represents a network node of the application in the cluster. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>connectServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_client.html</Path>
    <Anchor>ac30bf80085992ca2f13b0999f6a2fe38</Anchor>
    <Abstract>Open and connect an Equalizer server to the local client. </Abstract>
    <DeclaredIn>fabric/client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disconnectServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_client.html</Path>
    <Anchor>a980e2993575a605df5d80b1c9e0eee5d</Anchor>
    <Abstract>Disconnect and close the connection to an Equalizer server. </Abstract>
    <DeclaredIn>fabric/client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processCommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_client.html</Path>
    <Anchor>a0d4f70786d5d43eef636d56ee3680fef</Anchor>
    <Abstract>Get and process one pending command from the node command queue. </Abstract>
    <DeclaredIn>fabric/client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMainThreadQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_client.html</Path>
    <Anchor>aa62adb7450cdf6c9ec1ab336c8ad1009</Anchor>
    <DeclaredIn>fabric/client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Client</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_client.html</Path>
    <Anchor>a09455052d367d050474cc28a07837b18</Anchor>
    <Abstract>Construct a new client. </Abstract>
    <DeclaredIn>fabric/client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Client</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_client.html</Path>
    <Anchor>affd4048ec32c7759396e0df974784fbc</Anchor>
    <Abstract>Destruct the client. </Abstract>
    <DeclaredIn>fabric/client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::ColorMask</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::ColorMask</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_color_mask.html</Path>
    <Abstract>Defines which parts of the color buffer are to be written. </Abstract>
    <DeclaredIn>colorMask.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ColorMask</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ColorMask</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_color_mask.html</Path>
    <Anchor>a8a74cf6af184f6240446f5bc79b7e321</Anchor>
    <Abstract>Construct a color mask with all components enabled. </Abstract>
    <DeclaredIn>colorMask.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ColorMask</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ColorMask</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_color_mask.html</Path>
    <Anchor>a3c40761149afd43f96358b4b649b92bf</Anchor>
    <Abstract>Construct a color mask with given default values. </Abstract>
    <DeclaredIn>colorMask.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Config</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Abstract>Base data class for a configuration. </Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Observers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a850edb71abce1711d6216424b7a1c02d</Anchor>
    <Abstract>A vector of observers. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Layouts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a0f16d3e676d5c5292ea75b912e067f57</Anchor>
    <Abstract>A vector of layouts. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Canvases</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a7d274a34b4ea7b874af6c16b2a4054af</Anchor>
    <Abstract>A vector of canvases. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>ae3262044735bd0177588b1d2d224a4d8</Anchor>
    <Abstract>A vector of nodes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>ae352b2c77d4308ad04eddcab7c83393d</Anchor>
    <DeclaredIn>fabric/config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a72673030ff85c9023a64895670efb897</Anchor>
    <DeclaredIn>fabric/config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getObservers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a269be2ca62737368d6cca3187b88ccb4</Anchor>
    <DeclaredIn>fabric/config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLayouts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>aa46e4fa5672c9fe4c60056ce5fa5eae5</Anchor>
    <DeclaredIn>fabric/config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCanvases</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a74d793421e8c852feb3be32073a05efc</Anchor>
    <DeclaredIn>fabric/config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>aa2bd8ef50b23c12d31971d1e6fd249d7</Anchor>
    <DeclaredIn>fabric/config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a3c11a50231106962f3e6ad8ea67695d6</Anchor>
    <Abstract>Perform a depth-first traversal of this config. </Abstract>
    <DeclaredIn>fabric/config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a59ec77e861d9acbf81e5c23ef643f68a</Anchor>
    <Abstract>Const-version of accept(). </Abstract>
    <DeclaredIn>fabric/config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a800bad8102922f984cdcdc7ee920e7b9</Anchor>
    <DeclaredIn>fabric/config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a639e012504a7ad8a89d3a3964702d468</Anchor>
    <DeclaredIn>fabric/config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>acdca4d4ba2ce8836c34eb648f1d0abec</Anchor>
    <DeclaredIn>fabric/config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>aeaf4e3ff967956b237fee6dd03fe85f0</Anchor>
    <DeclaredIn>fabric/config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a5fa38850580e61ab97a7959d4cb610c3</Anchor>
    <Abstract>Set the maximum accepted latency for this config. </Abstract>
    <DeclaredIn>fabric/config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a67b61dbe9d02da6ba06f19a605bfd7d8</Anchor>
    <DeclaredIn>fabric/config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a0bdbe97f54e13fcbaf24d5c20aaa23e1</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ac82bf838d019796b4a3d898bf9a6279e</Anchor>
    <Abstract>Set the name of the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a8b8235ef3a933f40cedcac9488b5d11e</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a074a96afc7fb9e31a1d5b4368ebde972</Anchor>
    <Abstract>Set user-specific data. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ad8344492a6a8222a8f87b622709e6768</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ae8a8ec5d8f869f441f44a31d345866bb</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTasks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3aec2e67eb4948d424c673faef62c63e</Anchor>
    <Abstract>Return the set of tasks this channel might execute in the worst case. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aeaed0d358b6f67d6f3b4372d4e254484</Anchor>
    <Abstract>Construct a new Object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a4b753d5cb7ee3bd182075fa090f4ddbb</Anchor>
    <Abstract>Construct an unmapped, unregistered copy of an object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a2c301f8fda1bbd4bfb184f050a82ff91</Anchor>
    <Abstract>Destruct the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3140ce8ffc4d6dfa5cb053bc5102e84d</Anchor>
    <Abstract>NOP assignment operator. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aea00c39dfb613d9fb7843dbb68459892</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a321f24113c02e0f16830a403e03f62e9</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a950cc441120145cc27cefd7d344de4ff</Anchor>
    <DeclaredIn>fabric/config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>af8ee449a7b2ef9d0f5d0daf9fb7b61de</Anchor>
    <DeclaredIn>fabric/config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FATTR_EYE_BASE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a6ba87a3cb798fd5801d0e4ae08c70ad3a1e337e7cf6d464118f0b639d1d811bdc</Anchor>
    <Abstract>The default interocular distance in meters. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FATTR_VERSION</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a6ba87a3cb798fd5801d0e4ae08c70ad3af9994f969604fadb54f62a707856fcbc</Anchor>
    <Abstract>The version of the file loaded. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_ROBUSTNESS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config.html</Path>
    <Anchor>a3c8040f9b7c224b736e2ecb8ff0a7922ac8e061aa4ef75b2246571bd569a5a8a3</Anchor>
    <Abstract>Tolerate resource failures. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::ConfigParams</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Abstract>Parameters for running a configuration. </Abstract>
    <DeclaredIn>configParams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigParams</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>a4a78c74491502f65ad14d74d371e7434</Anchor>
    <Abstract>Construct new configuration parameters. </Abstract>
    <DeclaredIn>configParams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ConfigParams</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>a8b766130b473af5088197c232d3e1f32</Anchor>
    <Abstract>Destruct this configuration parameters. </Abstract>
    <DeclaredIn>configParams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>a0e747b4863278c040b3e4d188146ce24</Anchor>
    <Abstract>Set the name of the configuration. </Abstract>
    <DeclaredIn>configParams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>a1125c1732f7ac1440cf9325612898ea9</Anchor>
    <DeclaredIn>configParams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderClient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>aa4fc58fa82ec1326f3341f4172c38397</Anchor>
    <Abstract>Set the name of the render client executable. </Abstract>
    <DeclaredIn>configParams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderClient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>aaa9af234adeb487301124cee53222b99</Anchor>
    <DeclaredIn>configParams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderClientArgs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>a5244289fa60ac4d013ddfd1cfd1daada</Anchor>
    <Abstract>Set the command line arguments for the render client executable. </Abstract>
    <DeclaredIn>configParams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderClientArgs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>a023833b89e8fa0e4377832068994082a</Anchor>
    <DeclaredIn>configParams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderClientEnvPrefixes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>afed7708a0a44c5c80771ae103963153e</Anchor>
    <Abstract>Set the prefixes of the environmental variables to pass on clients. </Abstract>
    <DeclaredIn>configParams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderClientEnvPrefixes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>a1c09451a8a2af84e628b836b5fbdc7a5</Anchor>
    <DeclaredIn>configParams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWorkDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>a288d76b7286a8f6c1501b16f5a3635a9</Anchor>
    <Abstract>Set the directory from which to launch the render client. </Abstract>
    <DeclaredIn>configParams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWorkDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>ab73dc12891eae75e8bf157674bc17f7f</Anchor>
    <DeclaredIn>configParams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>a1f5d218612190ef95ac0bce7b450ebd0</Anchor>
    <DeclaredIn>configParams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>a7c05bf8038df10478beca231b702c5ea</Anchor>
    <DeclaredIn>configParams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEqualizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>a646f7de6cd87c9b1eff94bc0e4fe9e3a</Anchor>
    <DeclaredIn>configParams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEqualizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>a641f34061f159750a5303d8f5b939f17</Anchor>
    <DeclaredIn>configParams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPrefixes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>a47723bff008a46441a5cbf770c8cfd8b</Anchor>
    <Abstract>Set a list of network prefixes in CIDR notation for autoconfig network interface filtering. </Abstract>
    <DeclaredIn>configParams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPrefixes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>aa3801a1c131b20ef98f21109d07b8444</Anchor>
    <DeclaredIn>configParams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGPUFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>aa89e1951627f0e165216851cc9766a47</Anchor>
    <Abstract>Set a regex filter matching to &amp;#39;nodename:display.port&amp;#39;. </Abstract>
    <DeclaredIn>configParams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGPUFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>ad1b467d6a17f69751d02e74856aa5e4d</Anchor>
    <DeclaredIn>configParams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLAG_NONE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>aa8f256f3741df0d110f2fa33bec36d5aa9f89d9470d94356636dff7c5fa844549</Anchor>
    <Abstract>Unset all flags. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLAG_MULTIPROCESS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>aa8f256f3741df0d110f2fa33bec36d5aa0069277a3326f1804be87f185503deeb</Anchor>
    <Abstract>Auto-config: one node per pipe. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLAG_MULTIPROCESS_DB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>aa8f256f3741df0d110f2fa33bec36d5aa10001ef4f8722b94d022bd1459aa8a73</Anchor>
    <Abstract>one node per DB decomposition </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLAG_NETWORK_ETHERNET</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>aa8f256f3741df0d110f2fa33bec36d5aaf536b42ebfc00a6e9b5f8c292e96b265</Anchor>
    <Abstract>Auto-config: use ethernet only. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLAG_NETWORK_INFINIBAND</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>aa8f256f3741df0d110f2fa33bec36d5aac0b321c1275f1c0d16ff48f6257a2677</Anchor>
    <Abstract>Auto-config: use IB only. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLAG_LOAD_EQ_HORIZONTAL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>aa8f256f3741df0d110f2fa33bec36d5aa337d52922ebd5d9fed4cbba4b28c149c</Anchor>
    <Abstract>Auto-config: horizontal partition for load equalizer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLAG_LOAD_EQ_VERTICAL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>aa8f256f3741df0d110f2fa33bec36d5aade8b1b1f25eb86a4f7e347b595d5de5a</Anchor>
    <Abstract>Auto-config: vertical partition for load equalizer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLAG_LOAD_EQ_2D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_params.html</Path>
    <Anchor>aa8f256f3741df0d110f2fa33bec36d5aa78a0251cfa4cc9b8911f850392b02257</Anchor>
    <Abstract>Auto-config: 2D partition for load equalizer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::ConfigVisitor</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::ConfigVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_visitor.html</Path>
    <Abstract>A visitor to traverse configs and all children. </Abstract>
    <DeclaredIn>configVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_visitor.html</Path>
    <Anchor>a52c4844969e8f7abb873dc148ba5480a</Anchor>
    <Abstract>Construct a new config visitor. </Abstract>
    <DeclaredIn>configVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ConfigVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_visitor.html</Path>
    <Anchor>a717d2700db3a60d480027a4ab2ce4974</Anchor>
    <Abstract>Destruct this config visitor. </Abstract>
    <DeclaredIn>configVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitPre</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_visitor.html</Path>
    <Anchor>a61a8c15a0a92063e37c5ce421ab34550</Anchor>
    <Abstract>Visit a config on the down traversal. </Abstract>
    <DeclaredIn>configVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitPost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_visitor.html</Path>
    <Anchor>a5dbd41d23c63733a11fc38d9760ad40c</Anchor>
    <Abstract>Visit a config on the up traversal. </Abstract>
    <DeclaredIn>configVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitPre</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_visitor.html</Path>
    <Anchor>ae9ff2918963aa992959be1cb798e9900</Anchor>
    <Abstract>Visit a config on the down traversal. </Abstract>
    <DeclaredIn>configVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitPost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_config_visitor.html</Path>
    <Anchor>a6135a160841f3febc455bb97e2d36027</Anchor>
    <Abstract>Visit a config on the up traversal. </Abstract>
    <DeclaredIn>configVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::DrawableConfig</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::DrawableConfig</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_drawable_config.html</Path>
    <Abstract>Stores the characteristics of a window&amp;#39;s frame buffer configuration. </Abstract>
    <DeclaredIn>drawableConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stencilBits</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::DrawableConfig</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_drawable_config.html</Path>
    <Anchor>a8ef61214b3dd4f013b63eeb1dfa2b107</Anchor>
    <Abstract>Number of stencil bits. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>colorBits</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::DrawableConfig</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_drawable_config.html</Path>
    <Anchor>a7359200cfb974cb231d6284a73586cce</Anchor>
    <Abstract>Number of bits per color component. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alphaBits</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::DrawableConfig</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_drawable_config.html</Path>
    <Anchor>ad885736c0fdacef8f54cd0655461ebcc</Anchor>
    <Abstract>Number of alpha bits. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accumBits</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::DrawableConfig</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_drawable_config.html</Path>
    <Anchor>a30d981022fa31adeb0186042e6324076</Anchor>
    <Abstract>Number of accumulation bits. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::DrawableConfig</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_drawable_config.html</Path>
    <Anchor>aa497ef511d3e9413f64e61f32f524829</Anchor>
    <Abstract>OpenGL version (glGetString( GL_VERSION )) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGLVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::DrawableConfig</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_drawable_config.html</Path>
    <Anchor>a6ea6ff8c2e3d3877abe0a415e2b812b5</Anchor>
    <Abstract>OpenGL version (GLEW detected) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stereo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::DrawableConfig</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_drawable_config.html</Path>
    <Anchor>ae1629d9a106f1d77a9280961418c4d20</Anchor>
    <Abstract>Active stereo supported. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doublebuffered</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::DrawableConfig</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_drawable_config.html</Path>
    <Anchor>ae8dbe2b17a8220b224c411facbd881d1</Anchor>
    <Abstract>Doublebuffering supported. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>coreProfile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::DrawableConfig</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_drawable_config.html</Path>
    <Anchor>a3d1f46c163a5405310153b88021842ec</Anchor>
    <Abstract>Core or Compat profile (since OpenGL 3.2) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::ElementVisitor</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::ElementVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_element_visitor.html</Path>
    <Abstract>A visitor to traverse non-leaf elements and their children in a tree. </Abstract>
    <DeclaredIn>elementVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ElementVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ElementVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_element_visitor.html</Path>
    <Anchor>addd2886df6a65773be02ef7da5646ed4</Anchor>
    <Abstract>Construct a new visitor. </Abstract>
    <DeclaredIn>elementVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ElementVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ElementVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_element_visitor.html</Path>
    <Anchor>a2e2821da7648c96a595803d03f54e0e4</Anchor>
    <Abstract>Destruct the visitor. </Abstract>
    <DeclaredIn>elementVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitPre</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ElementVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_element_visitor.html</Path>
    <Anchor>aefdb23a30a1d33a81db35f1279bd0368</Anchor>
    <Abstract>Visit an element on the down traversal. </Abstract>
    <DeclaredIn>elementVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitPost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ElementVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_element_visitor.html</Path>
    <Anchor>afb0fb8da5ae30f66cfa5bc85c7856589</Anchor>
    <Abstract>Visit an element on the up traversal. </Abstract>
    <DeclaredIn>elementVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitPre</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ElementVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_element_visitor.html</Path>
    <Anchor>a3cf6923c3a45c3e7d0cf287c6a60e912</Anchor>
    <Abstract>Visit an element on a const down traversal. </Abstract>
    <DeclaredIn>elementVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitPost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ElementVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_element_visitor.html</Path>
    <Anchor>aaa653911f879ac09b61fd18dc4d2b593</Anchor>
    <Abstract>Visit an element on a const up traversal. </Abstract>
    <DeclaredIn>elementVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Equalizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Abstract>Base data transport class for equalizers. </Abstract>
    <DeclaredIn>equalizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrozen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>ab42ed1d44eabfd466bdd12edb2b26787</Anchor>
    <Abstract>Set the equalizer to freeze the current state. </Abstract>
    <DeclaredIn>equalizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFrozen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>aba32a5a69f1440ecc390a5fc08b800ab</Anchor>
    <DeclaredIn>equalizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>a419b24e104d8bb8611e1207c02a0608e</Anchor>
    <Abstract>Set the load balancer adaptation mode. </Abstract>
    <DeclaredIn>equalizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>a7ba3ffc58552c49d349f9247d8b68e35</Anchor>
    <DeclaredIn>equalizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDamping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>a6c331ac33e862441cee8d79db3889e09</Anchor>
    <Abstract>Set the damping factor for the viewport, range or zoom adjustment. </Abstract>
    <DeclaredIn>equalizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDamping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>ab20968470a5ec74387335b96bce12bfd</Anchor>
    <DeclaredIn>equalizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>ad25f4bfee88e38dcdf8016b539803395</Anchor>
    <Abstract>Set the average frame rate for the DFREqualizer. </Abstract>
    <DeclaredIn>equalizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>a4f03d1637046a1ba00573d5c86f66393</Anchor>
    <DeclaredIn>equalizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBoundary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>a614bc1bef81195f374c4993116c272da</Anchor>
    <Abstract>Set a boundary for 2D tiles. </Abstract>
    <DeclaredIn>equalizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBoundary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>a16293e1fcc91f8444ab65de475ca8d11</Anchor>
    <Abstract>Set a boundary for DB ranges. </Abstract>
    <DeclaredIn>equalizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundary2i</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>ad4f083e484b23f7817b46d3630e866b4</Anchor>
    <DeclaredIn>equalizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundaryf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>ae557494d8a14d0a90048a0aa2faf8e59</Anchor>
    <DeclaredIn>equalizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>a810806f012b151ea816f95ff2f3b5396</Anchor>
    <Abstract>Set a resistance for 2D tiles. </Abstract>
    <DeclaredIn>equalizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>a72214cc5f0ce35c15c364820d3888bee</Anchor>
    <Abstract>Set a resistance for DB ranges. </Abstract>
    <DeclaredIn>equalizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getResistance2i</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>afc6ff793c8f4ab2dd0794d5f597762bd</Anchor>
    <DeclaredIn>equalizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getResistancef</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>a3c2828b5c4001f5821cb4ba4aaebf598</Anchor>
    <DeclaredIn>equalizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAssembleOnlyLimit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>a25795a6bcdc2208a96d3eee80c4e9737</Anchor>
    <Abstract>Set the limit when to assign assemble tasks only. </Abstract>
    <DeclaredIn>equalizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAssembleOnlyLimit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>afe5da77b88f86805312263c39db656a7</Anchor>
    <DeclaredIn>equalizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTileSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>ac60ae8b880a30d812b4894d36814cb69</Anchor>
    <Abstract>Set the tile size for the TileEqualizer. </Abstract>
    <DeclaredIn>equalizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>a7ce36a2230ba44a8cae1df9ef8338ff8</Anchor>
    <DeclaredIn>equalizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MODE_DB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>a999a437f685cecaab8b6acf84ecdc8dcaa8eac02eeea34721bb480d062d1c54dd</Anchor>
    <Abstract>Adapt for a sort-last decomposition. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MODE_HORIZONTAL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>a999a437f685cecaab8b6acf84ecdc8dca8b28472851595c7adbb8802e86344033</Anchor>
    <Abstract>Adapt for sort-first using horizontal stripes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MODE_VERTICAL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>a999a437f685cecaab8b6acf84ecdc8dca301730daff1a082e76e68fe15300c6b2</Anchor>
    <Abstract>Adapt for sort-first using vertical stripes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MODE_2D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Equalizer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_equalizer.html</Path>
    <Anchor>a999a437f685cecaab8b6acf84ecdc8dca0991bd58352a8693b9a2d4036b9fd289</Anchor>
    <Abstract>Adapt for a sort-first decomposition. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Error</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Error</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_error.html</Path>
    <Abstract>A wrapper for error codes to allow intuitive bool-like usage. </Abstract>
    <DeclaredIn>error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Error</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Error</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_error.html</Path>
    <Anchor>a8f80777b7c9f3c975b16aa63c47b1c21</Anchor>
    <Abstract>Construct a new error. </Abstract>
    <DeclaredIn>eq/fabric/error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Error</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_error.html</Path>
    <Anchor>a7a73f99a52798b21ec6f705e14703c9f</Anchor>
    <Abstract>Assign the given error code. </Abstract>
    <DeclaredIn>eq/fabric/error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator bool_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Error</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_error.html</Path>
    <Anchor>a292cf27a1b74948aa628730fec4461fd</Anchor>
    <DeclaredIn>eq/fabric/error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Error</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_error.html</Path>
    <Anchor>a8ab0867d84850286abe1c9ebd761507b</Anchor>
    <DeclaredIn>eq/fabric/error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Error</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_error.html</Path>
    <Anchor>a74090ee471bd600cb295055c8aa65d61</Anchor>
    <DeclaredIn>eq/fabric/error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOriginator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Error</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_error.html</Path>
    <Anchor>a4c9f0f79800d27dfa1066ae20b1a5c7d</Anchor>
    <DeclaredIn>eq/fabric/error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Error</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_error.html</Path>
    <Anchor>a2b0830d82bacde9cb60ef750004244e5</Anchor>
    <DeclaredIn>eq/fabric/error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Error</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_error.html</Path>
    <Anchor>a8950758d54a0f90c3ae3a3a59d2c06f7</Anchor>
    <DeclaredIn>eq/fabric/error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Error</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_error.html</Path>
    <Anchor>a44e893adbcf624b2d9b850fadc78d292</Anchor>
    <DeclaredIn>eq/fabric/error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Error</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_error.html</Path>
    <Anchor>adec94a44aa21f7ddf28f7a0a61c5313b</Anchor>
    <DeclaredIn>eq/fabric/error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::ErrorRegistry</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::ErrorRegistry</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_error_registry.html</Path>
    <Abstract>The registry translating error codes to strings. </Abstract>
    <DeclaredIn>errorRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ErrorRegistry</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_error_registry.html</Path>
    <Anchor>a7475d06182cf71b50703a56a9f7138ee</Anchor>
    <DeclaredIn>errorRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ErrorRegistry</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_error_registry.html</Path>
    <Anchor>a92a9fc769837aeb2f6da0ab9d12e4bc8</Anchor>
    <Abstract>Set an error string for the given error code. </Abstract>
    <DeclaredIn>errorRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eraseString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ErrorRegistry</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_error_registry.html</Path>
    <Anchor>a68691465080cc3139f0e38232b26cb8b</Anchor>
    <Abstract>Clear a given error code string. </Abstract>
    <DeclaredIn>errorRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Event</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_event.html</Path>
    <Abstract>Base event structure to report window system and other events. </Abstract>
    <DeclaredIn>event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_event.html</Path>
    <Anchor>a12d5512d2bb24de27dcc3fa609c6da26</Anchor>
    <Abstract>unique originator serial number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_event.html</Path>
    <Anchor>a5a699e4a1d9cb9069b7588041818df2e</Anchor>
    <Abstract>The config time when the event was created. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>originator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_event.html</Path>
    <Anchor>a45f48e57172f44f17cc73f1150118bf5</Anchor>
    <Abstract>The identifier of the entity emitting the event. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Frame</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame.html</Path>
    <Abstract>A holder for a frame data and related parameters. </Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Frame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame.html</Path>
    <Anchor>a474f3cc2bfc87dfc3e0a098e6ace38ea</Anchor>
    <Abstract>Construct a new frame. </Abstract>
    <DeclaredIn>fabric/frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Frame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame.html</Path>
    <Anchor>adc162aa913856f69250ba1306ce275ad</Anchor>
    <Abstract>Destruct the frame. </Abstract>
    <DeclaredIn>fabric/frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame.html</Path>
    <Anchor>ad7e22d30497de38fc27c84621b14e692</Anchor>
    <Abstract>Set the name of the frame. </Abstract>
    <DeclaredIn>fabric/frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame.html</Path>
    <Anchor>afbb7bca8359fa68db077483ac17376fb</Anchor>
    <DeclaredIn>fabric/frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame.html</Path>
    <Anchor>a4fbf210c42f4de8ae10bd37e4fc1d8f5</Anchor>
    <DeclaredIn>fabric/frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame.html</Path>
    <Anchor>a7b1a0bf112a1081024fa1a78a42f97b6</Anchor>
    <Abstract>Set the position of the frame wrt the channel. </Abstract>
    <DeclaredIn>fabric/frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame.html</Path>
    <Anchor>a821e42fcb28f9eb8ca9b2a46f0ec8eda</Anchor>
    <Abstract>Set the zoom for this frame holder. </Abstract>
    <DeclaredIn>fabric/frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame.html</Path>
    <Anchor>a22c8cbcc857ca3dfad31ad235f57edb0</Anchor>
    <DeclaredIn>fabric/frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BUFFER_UNDEFINED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame.html</Path>
    <Anchor>a09d354db0c932b84a6194fd6c3e512c3a7db2914348736ce7536d1c23a61f5d22</Anchor>
    <Abstract>Inherit, only if no others are set. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BUFFER_COLOR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame.html</Path>
    <Anchor>a09d354db0c932b84a6194fd6c3e512c3a417a4ec31cc1a4157f0be6792ff5f943</Anchor>
    <Abstract>Use color images. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BUFFER_DEPTH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame.html</Path>
    <Anchor>a09d354db0c932b84a6194fd6c3e512c3a2deaaa96f7f23e2f3484b1905908dc8b</Anchor>
    <Abstract>Use depth images. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TYPE_MEMORY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame.html</Path>
    <Anchor>add9e511de81ad2c43dc89dad4a109d1bacc6364283121236b94973c0578cad8a2</Anchor>
    <Abstract>use main memory to store pixel data </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TYPE_TEXTURE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame.html</Path>
    <Anchor>add9e511de81ad2c43dc89dad4a109d1ba2c3649adfda68fccea7ee865fb06291d</Anchor>
    <Abstract>use a GL texture to store pixel data </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::FrameData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
    <Anchor>a16e2a717f08ebf3ae3467172b230193c</Anchor>
    <Abstract>Set the covered area for readbacks. </Abstract>
    <DeclaredIn>fabric/frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
    <Anchor>a51d662e5f30ca790bfd5ff94d28fee24</Anchor>
    <DeclaredIn>fabric/frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
    <Anchor>af92cfaf40bb29e7f4b49bef21a4df838</Anchor>
    <Abstract>Set the (color, depth) buffers of the source frame. </Abstract>
    <DeclaredIn>fabric/frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
    <Anchor>ac8bec7ee83b160e4452bfbbd940b3975</Anchor>
    <Abstract>Disable the usage of a frame buffer attachment for all images. </Abstract>
    <DeclaredIn>fabric/frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
    <Anchor>a2a9a3826530aa64e6c6726098d512b48</Anchor>
    <DeclaredIn>fabric/frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
    <Anchor>a9814f9d86ffba160d85d4a175227287e</Anchor>
    <Abstract>Set the source context decomposition wrt dest channel. </Abstract>
    <DeclaredIn>fabric/frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
    <Anchor>ad08ad8b888e09b691a5febd4960a9974</Anchor>
    <DeclaredIn>fabric/frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
    <Anchor>a51757c4f603734536288105d83dab24a</Anchor>
    <Abstract>Set additional zoom for input frames. </Abstract>
    <DeclaredIn>fabric/frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
    <Anchor>ae11afb9d9f6e556d9d8b1dea79811ec6</Anchor>
    <DeclaredIn>fabric/frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
    <Anchor>ade716cc2fbf98e0f306ea001e05000af</Anchor>
    <Abstract>Set the frame storage type. </Abstract>
    <DeclaredIn>fabric/frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frame_data.html</Path>
    <Anchor>a6773216e14924598aaa98035fa9a739e</Anchor>
    <DeclaredIn>fabric/frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Frustum</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Abstract>A distributed object for frustum data. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Frustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a90be6ccf2bc8c914386f1e4c05a261c4</Anchor>
    <Abstract>Construct a new frustum. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Frustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>aa8ce28807339f6d11553d7f2f4d1fbe0</Anchor>
    <Abstract>Destruct the frustum. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a4b0e4ab0f81f698f3353947ca6b5864b</Anchor>
    <Abstract>Set the frustum using a wall description. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>ac66cfc54f75f250a0f7fa7f98463c7a5</Anchor>
    <Abstract>Set the frustum using a projection description. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a91f256d93807510db28db6e50c880477</Anchor>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>acced38d338d315945ad93794e3ffda46</Anchor>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>afebc9278e21a6641ba1baa5b117d18fe</Anchor>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsetFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a4364e9b0755bd4f933cd6a9af8addea5</Anchor>
    <Abstract>Set the last specified frustum to TYPE_NONE. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TYPE_NONE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>ae7ff821685c19bd70c3a343f12b7da2ca490dbe8078bd08862263fc461ea94512</Anchor>
    <Abstract>No frustum has been specified. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TYPE_WALL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>ae7ff821685c19bd70c3a343f12b7da2ca38ac0af3d403e01913147c443613cf53</Anchor>
    <Abstract>A wall description has been set last. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TYPE_PROJECTION</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>ae7ff821685c19bd70c3a343f12b7da2ca3634c20ddd1c8c13a429fc0eeafebed1</Anchor>
    <Abstract>A projection description has been set last. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Global</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_global.html</Path>
    <Abstract>Global parameter handling for the Equalizer fabric namespace. </Abstract>
    <DeclaredIn>global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::fabric::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_global.html</Path>
    <Anchor>a4d756a70eb85ebd869d53cd02635c4c4</Anchor>
    <Abstract>Set the default Equalizer server. </Abstract>
    <DeclaredIn>fabric/global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::fabric::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_global.html</Path>
    <Anchor>a0f44db77b14382ccf4352e002d463300</Anchor>
    <DeclaredIn>fabric/global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getErrorRegistry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::fabric::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_global.html</Path>
    <Anchor>ad88e4554cfe31c5e30bef884f05b06c4</Anchor>
    <DeclaredIn>fabric/global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::GPUInfo</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_g_p_u_info.html</Path>
    <Abstract>A structure containing GPU-specific information. </Abstract>
    <DeclaredIn>gpuInfo.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GPUInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_g_p_u_info.html</Path>
    <Anchor>a52d5528baf0db355fd5388005c8e83bf</Anchor>
    <Abstract>Default constructor pointing to default display. </Abstract>
    <DeclaredIn>gpuInfo.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_g_p_u_info.html</Path>
    <Anchor>ac5fc7b4f2bd285af5b878326c8afeef0</Anchor>
    <DeclaredIn>gpuInfo.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_g_p_u_info.html</Path>
    <Anchor>ae70b87f3a7c083440eda0f1c256fac7d</Anchor>
    <DeclaredIn>gpuInfo.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>port</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_g_p_u_info.html</Path>
    <Anchor>a4ec87adbc06314bb06f9952ddd6ef455</Anchor>
    <Abstract>The display (GLX) or ignored (Win32, AGL). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>device</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_g_p_u_info.html</Path>
    <Anchor>a54fe13d1ea880cc6c3b485ae02bf8eff</Anchor>
    <Abstract>The screen (GLX), GPU (Win32) or virtual screen (AGL). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pvp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_g_p_u_info.html</Path>
    <Anchor>a6f4cb49bbdab2874faf01e71fc46c4dc</Anchor>
    <Abstract>The size and location of the GPU. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hostname</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_g_p_u_info.html</Path>
    <Anchor>afc4af73b2d9c9ab7e8780f9739f01cf2</Anchor>
    <Abstract>remote system hostname, empty for local GPUs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::KeyEvent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::KeyEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_key_event.html</Path>
    <Abstract>Event for a key press or release. </Abstract>
    <DeclaredIn>keyEvent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>key</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::KeyEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_key_event.html</Path>
    <Anchor>a1fdf2107ef98f08e692546db5aaf96b9</Anchor>
    <Abstract>KeyCode for special keys, ascii code otherwise. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_event.html</Path>
    <Anchor>a12d5512d2bb24de27dcc3fa609c6da26</Anchor>
    <Abstract>unique originator serial number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_event.html</Path>
    <Anchor>a5a699e4a1d9cb9069b7588041818df2e</Anchor>
    <Abstract>The config time when the event was created. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>originator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_event.html</Path>
    <Anchor>a45f48e57172f44f17cc73f1150118bf5</Anchor>
    <Abstract>The identifier of the entity emitting the event. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Layout</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_layout.html</Path>
    <Abstract>Base data transport class for layouts. </Abstract>
    <DeclaredIn>layout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_layout.html</Path>
    <Anchor>a6c75849597cb4b7dc4998df9cde113c9</Anchor>
    <Abstract>Traverse this layout and all children using a layout visitor. </Abstract>
    <DeclaredIn>fabric/layout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_layout.html</Path>
    <Anchor>add6273084a00d8b990ceafdc151afc46</Anchor>
    <Abstract>Const-version of accept(). </Abstract>
    <DeclaredIn>fabric/layout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a0bdbe97f54e13fcbaf24d5c20aaa23e1</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ac82bf838d019796b4a3d898bf9a6279e</Anchor>
    <Abstract>Set the name of the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a8b8235ef3a933f40cedcac9488b5d11e</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a074a96afc7fb9e31a1d5b4368ebde972</Anchor>
    <Abstract>Set user-specific data. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ad8344492a6a8222a8f87b622709e6768</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ae8a8ec5d8f869f441f44a31d345866bb</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTasks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3aec2e67eb4948d424c673faef62c63e</Anchor>
    <Abstract>Return the set of tasks this channel might execute in the worst case. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aeaed0d358b6f67d6f3b4372d4e254484</Anchor>
    <Abstract>Construct a new Object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a4b753d5cb7ee3bd182075fa090f4ddbb</Anchor>
    <Abstract>Construct an unmapped, unregistered copy of an object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a2c301f8fda1bbd4bfb184f050a82ff91</Anchor>
    <Abstract>Destruct the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3140ce8ffc4d6dfa5cb053bc5102e84d</Anchor>
    <Abstract>NOP assignment operator. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aea00c39dfb613d9fb7843dbb68459892</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a321f24113c02e0f16830a403e03f62e9</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Views</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_layout.html</Path>
    <Anchor>a1260fce285ef8fa8a8acaaf1a7f8935c</Anchor>
    <Abstract>A vector of pointers to views. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Visitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_layout.html</Path>
    <Anchor>a55054acb56e90a5040eaa3be04ed0f89</Anchor>
    <Abstract>The layout visitor type. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_layout.html</Path>
    <Anchor>a69074a029036f9393d80d8f3475d1f71</Anchor>
    <DeclaredIn>fabric/layout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_layout.html</Path>
    <Anchor>a8bf14eadfc7aae253a66855abe386ca4</Anchor>
    <DeclaredIn>fabric/layout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViews</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_layout.html</Path>
    <Anchor>a538e40ff4b469ba4f139ae755c4f1274</Anchor>
    <Abstract>Get the list of views. </Abstract>
    <DeclaredIn>fabric/layout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_layout.html</Path>
    <Anchor>a8aa0f24fa6e9bc1f54bc03eb5b093671</Anchor>
    <DeclaredIn>fabric/layout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::LeafVisitor</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::LeafVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_leaf_visitor.html</Path>
    <Abstract>A visitor to traverse leaf nodes of a graph. </Abstract>
    <DeclaredIn>leafVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LeafVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::LeafVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_leaf_visitor.html</Path>
    <Anchor>afd6f309d281277f352ab674992c0b43c</Anchor>
    <Abstract>Constructs a new leaf visitor. </Abstract>
    <DeclaredIn>leafVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~LeafVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::LeafVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_leaf_visitor.html</Path>
    <Anchor>affe7ada72e74f4590ce2a57a78035149</Anchor>
    <Abstract>Destruct the leaf visitor. </Abstract>
    <DeclaredIn>leafVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::LeafVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_leaf_visitor.html</Path>
    <Anchor>adbc1289ae58e788826e562d4d7fd8308</Anchor>
    <Abstract>Visit a leaf node. </Abstract>
    <DeclaredIn>leafVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::LeafVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_leaf_visitor.html</Path>
    <Anchor>ab6d06656a4c8e15508d6f5b606e9fb99</Anchor>
    <Abstract>Visit a leaf node during a const traversal. </Abstract>
    <DeclaredIn>leafVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Node</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_node.html</Path>
    <Abstract>Base data transport class for nodes. </Abstract>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pipes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_node.html</Path>
    <Anchor>a5b83ef6384309ef4cda8405f8229c43e</Anchor>
    <Abstract>A vector of pointers to pipes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_node.html</Path>
    <Anchor>a9823a3d23f3cb37807051c12fe39f0ca</Anchor>
    <DeclaredIn>fabric/node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_node.html</Path>
    <Anchor>a784cf2609858a9424d5f8a2b9ffd84f6</Anchor>
    <DeclaredIn>fabric/node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_node.html</Path>
    <Anchor>aebe39b02687d1a8a199b0189e739b506</Anchor>
    <DeclaredIn>fabric/node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_node.html</Path>
    <Anchor>a73cccf14a0651083eb79affb03ea1acc</Anchor>
    <Abstract>Perform a depth-first traversal of this node. </Abstract>
    <DeclaredIn>fabric/node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_node.html</Path>
    <Anchor>a3588a0018d327a126c5535b39985d1f7</Anchor>
    <Abstract>Const-version of accept(). </Abstract>
    <DeclaredIn>fabric/node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a0bdbe97f54e13fcbaf24d5c20aaa23e1</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ac82bf838d019796b4a3d898bf9a6279e</Anchor>
    <Abstract>Set the name of the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a8b8235ef3a933f40cedcac9488b5d11e</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a074a96afc7fb9e31a1d5b4368ebde972</Anchor>
    <Abstract>Set user-specific data. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ad8344492a6a8222a8f87b622709e6768</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ae8a8ec5d8f869f441f44a31d345866bb</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTasks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3aec2e67eb4948d424c673faef62c63e</Anchor>
    <Abstract>Return the set of tasks this channel might execute in the worst case. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_node.html</Path>
    <Anchor>a1a019d07f253c74d7c2b5fdb43b0e0a1</Anchor>
    <DeclaredIn>fabric/node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aeaed0d358b6f67d6f3b4372d4e254484</Anchor>
    <Abstract>Construct a new Object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a4b753d5cb7ee3bd182075fa090f4ddbb</Anchor>
    <Abstract>Construct an unmapped, unregistered copy of an object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a2c301f8fda1bbd4bfb184f050a82ff91</Anchor>
    <Abstract>Destruct the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3140ce8ffc4d6dfa5cb053bc5102e84d</Anchor>
    <Abstract>NOP assignment operator. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aea00c39dfb613d9fb7843dbb68459892</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a321f24113c02e0f16830a403e03f62e9</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_node.html</Path>
    <Anchor>af7ef63417275729265fba566723f7a11</Anchor>
    <DeclaredIn>fabric/node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_THREAD_MODEL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_node.html</Path>
    <Anchor>aefaa00336b31bd3bb46303e3a50283e3a5ece38d2b936b4f93ea8d7a152dbaf60</Anchor>
    <Abstract>Threading model </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_LAUNCH_TIMEOUT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_node.html</Path>
    <Anchor>aefaa00336b31bd3bb46303e3a50283e3aa4954bdfbecb2bb809a4f14d2dcee8ec</Anchor>
    <Abstract>Timeout when auto-launching the node. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Object</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Abstract>Internal base class for all distributed, inheritable Equalizer objects. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a0bdbe97f54e13fcbaf24d5c20aaa23e1</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ac82bf838d019796b4a3d898bf9a6279e</Anchor>
    <Abstract>Set the name of the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a8b8235ef3a933f40cedcac9488b5d11e</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a074a96afc7fb9e31a1d5b4368ebde972</Anchor>
    <Abstract>Set user-specific data. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ad8344492a6a8222a8f87b622709e6768</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ae8a8ec5d8f869f441f44a31d345866bb</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTasks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3aec2e67eb4948d424c673faef62c63e</Anchor>
    <Abstract>Return the set of tasks this channel might execute in the worst case. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aeaed0d358b6f67d6f3b4372d4e254484</Anchor>
    <Abstract>Construct a new Object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a4b753d5cb7ee3bd182075fa090f4ddbb</Anchor>
    <Abstract>Construct an unmapped, unregistered copy of an object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a2c301f8fda1bbd4bfb184f050a82ff91</Anchor>
    <Abstract>Destruct the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3140ce8ffc4d6dfa5cb053bc5102e84d</Anchor>
    <Abstract>NOP assignment operator. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aea00c39dfb613d9fb7843dbb68459892</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a321f24113c02e0f16830a403e03f62e9</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Observer</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Abstract>Base data transport class for observers. </Abstract>
    <DeclaredIn>observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Visitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>a8fa034fb5ccbcd18f5ab80d2f3ab1215</Anchor>
    <Abstract>The observer visitor type. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHeadMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>a2322016b3cfb97abeace52cb9c9a1061</Anchor>
    <Abstract>Set the head matrix. </Abstract>
    <DeclaredIn>fabric/observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeadMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>a15c5d5bfe2ee08adfdbd8cbb44ee3576</Anchor>
    <DeclaredIn>fabric/observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEyePosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>af7a7744734700aff1a56737e2034201c</Anchor>
    <Abstract>Set the position of the given eye relative to the observer. </Abstract>
    <DeclaredIn>fabric/observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEyePosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>a75ef818b4be3691940da38eedfc3c72c</Anchor>
    <DeclaredIn>fabric/observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFocusDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>a58017865198c39c918db694b5c1c1ca2</Anchor>
    <Abstract>Set the focal distance. </Abstract>
    <DeclaredIn>fabric/observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocusDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>aa19bea24cec84f3569b9ddc074302d5e</Anchor>
    <DeclaredIn>fabric/observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFocusMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>ae4f1b9a55c3ca63a50b4160f07e990dc</Anchor>
    <Abstract>Set the focal mode. </Abstract>
    <DeclaredIn>fabric/observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocusMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>a5eed082fbfd956dffef29c68c2e6464b</Anchor>
    <DeclaredIn>fabric/observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOpenCVCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>a2db4fc9ea993c3b3f97f3c24471a0a54</Anchor>
    <Abstract>Set the index of the OpenCV camera for tracking. </Abstract>
    <DeclaredIn>fabric/observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOpenCVCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>a3311c5086605798cb4823f21323da04d</Anchor>
    <DeclaredIn>fabric/observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVRPNTracker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>af5211910d0326a47e37edfd05d738865</Anchor>
    <Abstract>Set the VRPN tracker device. </Abstract>
    <DeclaredIn>fabric/observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVRPNTracker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>af8445572979987bfca12058ef336d4b1</Anchor>
    <DeclaredIn>fabric/observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>a9b44678ad71c5fe58c6649d0a38c2933</Anchor>
    <DeclaredIn>fabric/observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>a5f238596a9e6685d586be4d82b68c978</Anchor>
    <DeclaredIn>fabric/observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>add8360bb809d0ca15b61c8b3194a7f8b</Anchor>
    <Abstract>Traverse this observer using a observer visitor. </Abstract>
    <DeclaredIn>fabric/observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_observer.html</Path>
    <Anchor>a1a546c35d85ecb5019a1fd7e09643687</Anchor>
    <Abstract>Const-version of accept(). </Abstract>
    <DeclaredIn>fabric/observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a0bdbe97f54e13fcbaf24d5c20aaa23e1</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ac82bf838d019796b4a3d898bf9a6279e</Anchor>
    <Abstract>Set the name of the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a8b8235ef3a933f40cedcac9488b5d11e</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a074a96afc7fb9e31a1d5b4368ebde972</Anchor>
    <Abstract>Set user-specific data. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ad8344492a6a8222a8f87b622709e6768</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ae8a8ec5d8f869f441f44a31d345866bb</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTasks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3aec2e67eb4948d424c673faef62c63e</Anchor>
    <Abstract>Return the set of tasks this channel might execute in the worst case. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aeaed0d358b6f67d6f3b4372d4e254484</Anchor>
    <Abstract>Construct a new Object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a4b753d5cb7ee3bd182075fa090f4ddbb</Anchor>
    <Abstract>Construct an unmapped, unregistered copy of an object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a2c301f8fda1bbd4bfb184f050a82ff91</Anchor>
    <Abstract>Destruct the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3140ce8ffc4d6dfa5cb053bc5102e84d</Anchor>
    <Abstract>NOP assignment operator. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aea00c39dfb613d9fb7843dbb68459892</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a321f24113c02e0f16830a403e03f62e9</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Pipe</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Abstract>Base data transport class for pipes. </Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Windows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>adcc29e245a4fe2cd6bf3949154c40e27</Anchor>
    <Abstract>A vector of pointers to windows. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>ab79eb8a45dcf5ec67ff74bda899c5845</Anchor>
    <DeclaredIn>fabric/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>ada0110e55156cadcaddd9cbf7fd9f803</Anchor>
    <DeclaredIn>fabric/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>a666c69d89845842455637caeee5c1b2f</Anchor>
    <DeclaredIn>fabric/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>a6bbffa12120a01dc16bf89ab6877d8bb</Anchor>
    <Abstract>Returns the port number of this pipe. </Abstract>
    <DeclaredIn>fabric/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDevice</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>a7cb96628940d615d34dd6d62a636e9ac</Anchor>
    <Abstract>Returns the device number of this pipe. </Abstract>
    <DeclaredIn>fabric/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>af1d1dce4facd4be360288dfece07912e</Anchor>
    <DeclaredIn>fabric/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>a21e02cbfa6032fdac6af1c8d5bc19c19</Anchor>
    <Abstract>Set the pipe&amp;#39;s pixel viewport. </Abstract>
    <DeclaredIn>fabric/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>a236bd348b796920f1cb00dfd38544032</Anchor>
    <Abstract>Perform a depth-first traversal of this pipe. </Abstract>
    <DeclaredIn>fabric/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>af0427c33a15d5d9abeb1dc20ab8a828a</Anchor>
    <Abstract>Const-version of accept(). </Abstract>
    <DeclaredIn>fabric/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a0bdbe97f54e13fcbaf24d5c20aaa23e1</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ac82bf838d019796b4a3d898bf9a6279e</Anchor>
    <Abstract>Set the name of the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a8b8235ef3a933f40cedcac9488b5d11e</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a074a96afc7fb9e31a1d5b4368ebde972</Anchor>
    <Abstract>Set user-specific data. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ad8344492a6a8222a8f87b622709e6768</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ae8a8ec5d8f869f441f44a31d345866bb</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTasks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3aec2e67eb4948d424c673faef62c63e</Anchor>
    <Abstract>Return the set of tasks this channel might execute in the worst case. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aeaed0d358b6f67d6f3b4372d4e254484</Anchor>
    <Abstract>Construct a new Object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a4b753d5cb7ee3bd182075fa090f4ddbb</Anchor>
    <Abstract>Construct an unmapped, unregistered copy of an object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a2c301f8fda1bbd4bfb184f050a82ff91</Anchor>
    <Abstract>Destruct the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3140ce8ffc4d6dfa5cb053bc5102e84d</Anchor>
    <Abstract>NOP assignment operator. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aea00c39dfb613d9fb7843dbb68459892</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a321f24113c02e0f16830a403e03f62e9</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>a0912a16df647045d9f4dd0538abb3f02</Anchor>
    <DeclaredIn>fabric/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_THREAD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>aed3ba4a1d748c4d6a8deff5ec07879d0ae69ac68301954561568e9ae66dcd5a15</Anchor>
    <Abstract>Execute tasks in separate thread (default) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_AFFINITY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pipe.html</Path>
    <Anchor>aed3ba4a1d748c4d6a8deff5ec07879d0ae822d37c88d2676ea0b5d37d48d8a8ed</Anchor>
    <Abstract>Bind render thread to subset of cores. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Pixel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Pixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel.html</Path>
    <Abstract>Holds a pixel decomposition specification with methods for manipulation. </Abstract>
    <DeclaredIn>pixel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel.html</Path>
    <Anchor>a0862c107d85eee59e0464a2e7ef55212</Anchor>
    <Abstract>Apply (accumulate) another pixel specification. </Abstract>
    <DeclaredIn>pixel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel.html</Path>
    <Anchor>a500fe52facc5b900f57748a818e0be9a</Anchor>
    <DeclaredIn>pixel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel.html</Path>
    <Anchor>a20004d1690cbb265121f69d89052ecf1</Anchor>
    <DeclaredIn>pixel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invalidate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel.html</Path>
    <Anchor>a3ebc1f2f5a0645eb937ec67fde416254</Anchor>
    <Abstract>Make the pixel specification invalid. </Abstract>
    <DeclaredIn>pixel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>validate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel.html</Path>
    <Anchor>af67f0c5cf8211293cd1a2438a2b3550a</Anchor>
    <Abstract>Make the pixel specification valid. </Abstract>
    <DeclaredIn>pixel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel.html</Path>
    <Anchor>a9b51849d96f1fb9a9622b8b1596f836f</Anchor>
    <DeclaredIn>pixel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel.html</Path>
    <Anchor>a842920bf6333a4db86567b239c9615da</Anchor>
    <Abstract>Construct a pixel specification covering all pixels of a frustum. </Abstract>
    <DeclaredIn>pixel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel.html</Path>
    <Anchor>a888b3b5b37c1e2996788be0a478c9a3c</Anchor>
    <Abstract>Construct a pixel specification with default values. </Abstract>
    <DeclaredIn>pixel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ALL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Pixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel.html</Path>
    <Anchor>abce463ba3acd5b4f01ead8114f0e1098</Anchor>
    <Abstract>A pixel specification covering all pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::PixelViewport</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Abstract>Holds a 2D pixel viewport with methods for manipulation. </Abstract>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>aa01556986b07ac61921c34a4d583715d</Anchor>
    <Abstract>Construct a new, invalid pixel viewport. </Abstract>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>ad93e7169b77d4179a90727a07be3374d</Anchor>
    <Abstract>Construct a new pixel viewport with default values. </Abstract>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>a7c32199954fa681d7d35cce50e9c02aa</Anchor>
    <Abstract>Construct a new pixel viewport with default values. </Abstract>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invalidate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>a99ab8c162a3d708fe2806e96e1d82156</Anchor>
    <Abstract>Invalidate the pixel viewport. </Abstract>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>a5c688027ef3505d260606fe8cc8c371b</Anchor>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>a39e8081f0f79c98c09c7bf6dcdfd8f11</Anchor>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>ad07b15973517ad95122fa4c38ba6d2df</Anchor>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInside</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>aa5a84418295f928b179731974c8d8082</Anchor>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>aea43434a9449d8bf678506eec69e3b12</Anchor>
    <Abstract>Apply a fractional viewport to this pixel viewport. </Abstract>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>adece2cd23c7efb89c3f7e857090787a9</Anchor>
    <Abstract>Apply a pixel decomposition to this pixel viewport. </Abstract>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>a7633d228daf686bf2ceb8857305deb26</Anchor>
    <Abstract>Apply a zoom to this pixel viewport. </Abstract>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>a9bb4fc4bbe4a8c8b3b6d3cdaff891fd7</Anchor>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getXEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>acfd9129b309790f9c2aaecfc167b40c8</Anchor>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getYEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>a7b9db2a4cd4dcd933eea3658f953a80e</Anchor>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertToPlugin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>a298f890b828e947bab38480302fbd498</Anchor>
    <Abstract>Convert into a lunchbox::Plugin usable format. </Abstract>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertFromPlugin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>ac316a480a0e9d9301449f673dce34441</Anchor>
    <Abstract>Convert from a lunchbox::Plugin format. </Abstract>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>a74a26d94ba156d901c34871a9e34757d</Anchor>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>a66d0317dcf0b3e7e10a1cbb836dc9cbd</Anchor>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unapply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>a697f067afdaf07e3062e932042ac5d42</Anchor>
    <Abstract>Perform the inverse operation of applying a pixel decomposition to this pixel viewport. </Abstract>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>a359b3216a854a2e65cdedd0355b81bdc</Anchor>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>ac69e7f303121a4548cf7af330b8ff51f</Anchor>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>merge</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>a5e578b48913843ba2f3e6b28e8a66652</Anchor>
    <Abstract>Create a pixel viewport that includes both viewports (union). </Abstract>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intersect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_pixel_viewport.html</Path>
    <Anchor>a49173e93d092f8ddc4384d6956be5b0a</Anchor>
    <Abstract>Create the intersection of the two pixel viewports. </Abstract>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::PointerEvent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::PointerEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_pointer_event.html</Path>
    <Abstract>Event for a pointer (mouse) motion or click. </Abstract>
    <DeclaredIn>pointerEvent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::PointerEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_pointer_event.html</Path>
    <Anchor>a616b99aa2107bac81534070830c85383</Anchor>
    <Abstract>X position relative to entity. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::PointerEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_pointer_event.html</Path>
    <Anchor>a855086b433e73e4ba001694d5c870732</Anchor>
    <Abstract>Y position relative to entity (0 is on top) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dx</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::PointerEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_pointer_event.html</Path>
    <Anchor>a82110cc3afd5695c64e6144b3d1dcfb2</Anchor>
    <Abstract>X position change since last event. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::PointerEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_pointer_event.html</Path>
    <Anchor>af3da7f3c1ab1c6c583df97347eb61d6a</Anchor>
    <Abstract>Y position change since last event. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buttons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::PointerEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_pointer_event.html</Path>
    <Anchor>a5e9e9d38deb8435cebe0fcb439e5a54a</Anchor>
    <Abstract>current state of all buttons </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>button</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::PointerEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_pointer_event.html</Path>
    <Anchor>a372cf00cd247e04809dba28af7003407</Anchor>
    <Abstract>fired button </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modifiers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::PointerEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_pointer_event.html</Path>
    <Anchor>a2c6f25a7eb9604bb748169f0a49d6620</Anchor>
    <Abstract>state of modifier keys </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::PointerEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_pointer_event.html</Path>
    <Anchor>a27afbad2c25eb2123d06cd7a1305a136</Anchor>
    <Abstract>x wheel rotation in clicks </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>yAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::PointerEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_pointer_event.html</Path>
    <Anchor>a4d0086a09eec4e41ea6fa0bdf8126b66</Anchor>
    <Abstract>y wheel rotation in clicks </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>context</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::PointerEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_pointer_event.html</Path>
    <Anchor>a91dc90321b196c324f1b90067f59602e</Anchor>
    <Abstract>The last rendering context at position. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_event.html</Path>
    <Anchor>a12d5512d2bb24de27dcc3fa609c6da26</Anchor>
    <Abstract>unique originator serial number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_event.html</Path>
    <Anchor>a5a699e4a1d9cb9069b7588041818df2e</Anchor>
    <Abstract>The config time when the event was created. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>originator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_event.html</Path>
    <Anchor>a45f48e57172f44f17cc73f1150118bf5</Anchor>
    <Abstract>The identifier of the entity emitting the event. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Projection</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Projection</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_projection.html</Path>
    <Abstract>A projector definition defining a view frustum. </Abstract>
    <DeclaredIn>projection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resizeHorizontal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Projection</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_projection.html</Path>
    <Anchor>abaf17f2826f86b89ff033610c7fe4d1a</Anchor>
    <Abstract>Resize the horizontal FOV. </Abstract>
    <DeclaredIn>projection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resizeVertical</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Projection</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_projection.html</Path>
    <Anchor>aef13474bfa3118ebc66d70717f7f53b3</Anchor>
    <Abstract>Resize the vertical FOV. </Abstract>
    <DeclaredIn>projection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Projection</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_projection.html</Path>
    <Anchor>ac596486f71ab765aca343ecb6ce1053a</Anchor>
    <Abstract>Convert the projection parameters from a wall description. </Abstract>
    <DeclaredIn>projection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Projection</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_projection.html</Path>
    <Anchor>a71941845ab763e61b918829a4bf0b522</Anchor>
    <DeclaredIn>projection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Projection</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_projection.html</Path>
    <Anchor>a3caf5dfe5a6f4954cf1f6b36d3a6d2ed</Anchor>
    <DeclaredIn>projection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>origin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Projection</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_projection.html</Path>
    <Anchor>a2025c17d58d92e85c3db3034a870d9f2</Anchor>
    <Abstract>The position of the projection. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>distance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Projection</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_projection.html</Path>
    <Anchor>ace084e5ec6055db0b28ee0805fe83f52</Anchor>
    <Abstract>The distance of the projection surface. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fov</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Projection</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_projection.html</Path>
    <Anchor>a28a3f9014976ce60ee813fdd7052f13c</Anchor>
    <Abstract>The x and y opening angle of the projection. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hpr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Projection</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_projection.html</Path>
    <Anchor>a1c3883c4a3dc03cef484a9f9f156a58a</Anchor>
    <Abstract>The orientation (head, pitch, roll) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Range</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Range</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_range.html</Path>
    <Abstract>A fractional database range with methods for manipulation. </Abstract>
    <DeclaredIn>range.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Range</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Range</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_range.html</Path>
    <Anchor>ab290b02ee18341024df557db1bf25627</Anchor>
    <Abstract>Construct a new range covering all data. </Abstract>
    <DeclaredIn>range.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Range</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Range</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_range.html</Path>
    <Anchor>ae0efd403829a65c113a7bc3577e1b636</Anchor>
    <Abstract>Construct a new range with default values. </Abstract>
    <DeclaredIn>range.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Range</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_range.html</Path>
    <Anchor>a911ae4402d754ad951a95bf645de00da</Anchor>
    <Abstract>The start position. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Range</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_range.html</Path>
    <Anchor>a4040f166fdf60677f9fb505b609ebe20</Anchor>
    <Abstract>The end position. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ALL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Range</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_range.html</Path>
    <Anchor>a57fcf6b5bf2e4c6e7ff2e80412e03cb9</Anchor>
    <Abstract>A full database range. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Range</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_range.html</Path>
    <Anchor>a3c01d831116d3c7a485bb5a2d146b3ce</Anchor>
    <DeclaredIn>range.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Range</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_range.html</Path>
    <Anchor>af54d79870413d472012010e25bddbef4</Anchor>
    <DeclaredIn>range.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Range</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_range.html</Path>
    <Anchor>aeba6df1067ce944161a16499b990d466</Anchor>
    <DeclaredIn>range.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>merge</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Range</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_range.html</Path>
    <Anchor>a40977e1a3f2480ac463b8de86f04dd45</Anchor>
    <Abstract>Merge the two ranges (form the union). </Abstract>
    <DeclaredIn>range.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::RenderContext</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_render_context.html</Path>
    <Abstract>The context applied to a channel during rendering operations. </Abstract>
    <DeclaredIn>renderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_render_context.html</Path>
    <Anchor>a11d0f0be3900b14b4303058edca957aa</Anchor>
    <Abstract>frustum for projection matrix </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ortho</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_render_context.html</Path>
    <Anchor>ab6712f58ad12e9ca1f033c2400cfb4f1</Anchor>
    <Abstract>ortho frustum for projection matrix </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>headTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_render_context.html</Path>
    <Anchor>a6706808f8096479e56aa5f2468193c9b</Anchor>
    <Abstract>frustum transform for modelview </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orthoTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_render_context.html</Path>
    <Anchor>a6155059085df3333e9b641e0211d6c88</Anchor>
    <Abstract>orthographic frustum transform </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>view</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_render_context.html</Path>
    <Anchor>ac735c0eb8b73af77e6222c5a06e11f69</Anchor>
    <Abstract>destination view id and version </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_render_context.html</Path>
    <Anchor>a7732c706570d88bdb2a1fb993131f258</Anchor>
    <Abstract>identifier from Config::beginFrame </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pvp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_render_context.html</Path>
    <Anchor>a56855c881c05341574a7771ed298ec1b</Anchor>
    <Abstract>pixel viewport of channel wrt window </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_render_context.html</Path>
    <Anchor>a987dc35fa7e5f573418b3c4423bd697b</Anchor>
    <Abstract>pixel decomposition wrt to dest </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_render_context.html</Path>
    <Anchor>a055d07fd092ba70c930224401d70105d</Anchor>
    <Abstract>fractional viewport wrt dest view </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>offset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_render_context.html</Path>
    <Anchor>a970d48ef9f6bbdd9459f733707cdb12a</Anchor>
    <Abstract>absolute position wrt dest channel </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>range</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_render_context.html</Path>
    <Anchor>a88b2b9d575d9527eea9e303a97ec24b6</Anchor>
    <Abstract>database-range wrt to dest channel </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_render_context.html</Path>
    <Anchor>a68c72cbe9efaf0ec27a0348e2422dc78</Anchor>
    <Abstract>subpixel decomposition wrt to dest </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_render_context.html</Path>
    <Anchor>ab3a268f063c223533ee2acd337297c99</Anchor>
    <Abstract>up/downsampling wrt to dest </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_render_context.html</Path>
    <Anchor>a1b0a7ea74d1d27e6a0a962d630a9b108</Anchor>
    <Abstract>buffer as passed to glDrawBuffer() </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>period</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_render_context.html</Path>
    <Anchor>ae25b0b07a8c5d679fc1163647f2053cd</Anchor>
    <Abstract>DPlex period. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>phase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_render_context.html</Path>
    <Anchor>ad0027a2dc49ffd8d0f0525ae5c91d016</Anchor>
    <Abstract>DPlex phase. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eye</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_render_context.html</Path>
    <Anchor>a71dc03d7bb1d3a24c3698c80d8c2dcc7</Anchor>
    <Abstract>current eye pass </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bufferMask</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_render_context.html</Path>
    <Anchor>a6170e0d3825e9df50d94d8d17d8f669b</Anchor>
    <Abstract>color mask for anaglyph stereo </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Segment</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_segment.html</Path>
    <Abstract>Base data transport class for segments. </Abstract>
    <DeclaredIn>segment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Visitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_segment.html</Path>
    <Anchor>a938ad63b58e8f5186de455f9a8be3ab0</Anchor>
    <Abstract>The segment visitor type. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCanvas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_segment.html</Path>
    <Anchor>a48dfc96c74302aae9322ec97e81ad484</Anchor>
    <DeclaredIn>fabric/segment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCanvas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_segment.html</Path>
    <Anchor>aeac3d5f87db72b3cb409dbdfb56c5684</Anchor>
    <DeclaredIn>fabric/segment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_segment.html</Path>
    <Anchor>a9bc279dfd239e98f68196417c75ba138</Anchor>
    <DeclaredIn>fabric/segment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_segment.html</Path>
    <Anchor>a5ce8f76d4493cab0c6fb3eacba390fa9</Anchor>
    <Abstract>Return the output channel of this segment. </Abstract>
    <DeclaredIn>fabric/segment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_segment.html</Path>
    <Anchor>a0bc4f8a5ce070a2dea0495c54fcaf1a0</Anchor>
    <Abstract>Return the output channel of this segment. </Abstract>
    <DeclaredIn>fabric/segment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEyes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_segment.html</Path>
    <Anchor>ac670f33a166f333a5fc1ccff034b0b64</Anchor>
    <DeclaredIn>fabric/segment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_segment.html</Path>
    <Anchor>a8bf368cac82f6255f973557e2e248112</Anchor>
    <Abstract>Traverse this segment using a segment visitor. </Abstract>
    <DeclaredIn>fabric/segment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_segment.html</Path>
    <Anchor>ae933fbed4740e91fcff523e4a5e830e2</Anchor>
    <Abstract>Const-version of accept(). </Abstract>
    <DeclaredIn>fabric/segment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a0bdbe97f54e13fcbaf24d5c20aaa23e1</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ac82bf838d019796b4a3d898bf9a6279e</Anchor>
    <Abstract>Set the name of the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a8b8235ef3a933f40cedcac9488b5d11e</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a074a96afc7fb9e31a1d5b4368ebde972</Anchor>
    <Abstract>Set user-specific data. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ad8344492a6a8222a8f87b622709e6768</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ae8a8ec5d8f869f441f44a31d345866bb</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTasks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3aec2e67eb4948d424c673faef62c63e</Anchor>
    <Abstract>Return the set of tasks this channel might execute in the worst case. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Frustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a90be6ccf2bc8c914386f1e4c05a261c4</Anchor>
    <Abstract>Construct a new frustum. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Frustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>aa8ce28807339f6d11553d7f2f4d1fbe0</Anchor>
    <Abstract>Destruct the frustum. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a4b0e4ab0f81f698f3353947ca6b5864b</Anchor>
    <Abstract>Set the frustum using a wall description. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>ac66cfc54f75f250a0f7fa7f98463c7a5</Anchor>
    <Abstract>Set the frustum using a projection description. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a91f256d93807510db28db6e50c880477</Anchor>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>acced38d338d315945ad93794e3ffda46</Anchor>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>afebc9278e21a6641ba1baa5b117d18fe</Anchor>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsetFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a4364e9b0755bd4f933cd6a9af8addea5</Anchor>
    <Abstract>Set the last specified frustum to TYPE_NONE. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aeaed0d358b6f67d6f3b4372d4e254484</Anchor>
    <Abstract>Construct a new Object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a4b753d5cb7ee3bd182075fa090f4ddbb</Anchor>
    <Abstract>Construct an unmapped, unregistered copy of an object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a2c301f8fda1bbd4bfb184f050a82ff91</Anchor>
    <Abstract>Destruct the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3140ce8ffc4d6dfa5cb053bc5102e84d</Anchor>
    <Abstract>NOP assignment operator. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aea00c39dfb613d9fb7843dbb68459892</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a321f24113c02e0f16830a403e03f62e9</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Server</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_server.html</Path>
    <Abstract>Base co::Node class for a server. </Abstract>
    <DeclaredIn>server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClientPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_server.html</Path>
    <Anchor>ab0fe0cca18f9b098179bae1a86b55c11</Anchor>
    <Abstract>A reference-counted pointer to the client. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstClientPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_server.html</Path>
    <Anchor>a1ea97ddcf05243b97083ec4f3fd8dd34</Anchor>
    <Abstract>A reference-counted const pointer to the client. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_server.html</Path>
    <Anchor>a9bd69f16487d4f5d906340606d33579f</Anchor>
    <Abstract>A vector of config pointers. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodeFactory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_server.html</Path>
    <Anchor>a59102e213535e866e19e8e5266e2d789</Anchor>
    <Abstract>The node factory. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_server.html</Path>
    <Anchor>a3d6b1ee8ee9db219db83db1ea970c468</Anchor>
    <DeclaredIn>fabric/server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_server.html</Path>
    <Anchor>af86db39aaf78e5d3a3410399159442d9</Anchor>
    <DeclaredIn>fabric/server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfigs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_server.html</Path>
    <Anchor>a0587ee43f9ec7142e845bea7d6da588e</Anchor>
    <DeclaredIn>fabric/server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_server.html</Path>
    <Anchor>aecf8d6f7541cc1ac29cc8da6b57d3214</Anchor>
    <Abstract>Traverse this server and all children using a server visitor. </Abstract>
    <DeclaredIn>fabric/server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_server.html</Path>
    <Anchor>a9a57267a138828c3c5b5f508ab6d2f72</Anchor>
    <Abstract>Const-version of accept(). </Abstract>
    <DeclaredIn>fabric/server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::SizeEvent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::SizeEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_size_event.html</Path>
    <Abstract>Event for a size or position change on a Window, Channel or View. </Abstract>
    <DeclaredIn>sizeEvent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::SizeEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_size_event.html</Path>
    <Anchor>acca6ab5a91bf6b3aca1066a463b16f3f</Anchor>
    <Abstract>new X position, relative to parent </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::SizeEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_size_event.html</Path>
    <Anchor>a392786ed9a0ad9af6bb3b757f14f2bcf</Anchor>
    <Abstract>new Y position, relative to parent </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>w</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::SizeEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_size_event.html</Path>
    <Anchor>a8ea99052d39778ee5fb2fac2ee3038e0</Anchor>
    <Abstract>new width </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>h</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::SizeEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_size_event.html</Path>
    <Anchor>ab1511a1b37fd162cfde0c10967b09141</Anchor>
    <Abstract>new height </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::SizeEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_size_event.html</Path>
    <Anchor>a2dac8b357c8321de4987066359e9408b</Anchor>
    <Abstract>view only: new width relative to initial width </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::SizeEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_size_event.html</Path>
    <Anchor>aee1431ea763095732dd99abce0d4dd75</Anchor>
    <Abstract>view only: new height relative to initial height </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_event.html</Path>
    <Anchor>a12d5512d2bb24de27dcc3fa609c6da26</Anchor>
    <Abstract>unique originator serial number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_event.html</Path>
    <Anchor>a5a699e4a1d9cb9069b7588041818df2e</Anchor>
    <Abstract>The config time when the event was created. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>originator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_event.html</Path>
    <Anchor>a45f48e57172f44f17cc73f1150118bf5</Anchor>
    <Abstract>The identifier of the entity emitting the event. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Statistic</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Abstract>A statistics event. </Abstract>
    <DeclaredIn>statistic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>adcb36e42b648a05d98616d8421984b5b</Anchor>
    <Abstract>Translate the Type to a string representation. </Abstract>
    <DeclaredIn>statistic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a0e43ffebf2a01c44a5099df8744b1acd</Anchor>
    <Abstract>Translate the Type to a color value. </Abstract>
    <DeclaredIn>statistic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a31b6479638dd428cc119d323e823b8e0</Anchor>
    <Abstract>The type of statistic. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>aa20c8f78ac19f93f3d1d15cddd7cf13e</Anchor>
    <Abstract>The frame during when the sampling happened. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>plugins</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a5f17917bf0cc1c79535194b434fec5d8</Anchor>
    <Abstract>color,depth plugins (readback, compression) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a602dc49bfaac5a4e9aab3fb7bda18962</Anchor>
    <Abstract>Absolute start time of the operation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>endTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a6127d7bff8a6603a8011ccd894e76f3c</Anchor>
    <Abstract>Absolute end time of the operation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>idleTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a165d84fec47c1c286df375ac53caf713</Anchor>
    <Abstract>Absolute idle time of PIPE_IDLE. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>totalTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a7422bec96cc0886cb53ddb635f00db6c</Anchor>
    <Abstract>Total time of a pipe frame (PIPE_IDLE) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ratio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>accf9775444e4a3e12944f92c7a126e3e</Anchor>
    <Abstract>compression ratio (transfer, compression) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>currentFPS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>aa24a0dd5e01d7454007de7f44b65e3ae</Anchor>
    <Abstract>FPS of last frame (WINDOW_FPS) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>averageFPS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a5b6b6743c7b7ba175b91b356736a026c</Anchor>
    <Abstract>Weighted sum averaging of FPS (WINDOW_FPS) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resourceName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a49881c9208037201667e54c1a0695c39</Anchor>
    <Abstract>A non-unique name of the originator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_event.html</Path>
    <Anchor>a12d5512d2bb24de27dcc3fa609c6da26</Anchor>
    <Abstract>unique originator serial number </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_event.html</Path>
    <Anchor>a5a699e4a1d9cb9069b7588041818df2e</Anchor>
    <Abstract>The config time when the event was created. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>originator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_event.html</Path>
    <Anchor>a45f48e57172f44f17cc73f1150118bf5</Anchor>
    <Abstract>The identifier of the entity emitting the event. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_CLEAR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a666d290258be2baa1f0fcd9c6be6dd45adf3b715876272c43a7ad953d2e39a22c</Anchor>
    <Abstract>Sampling of Channel::frameClear. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_DRAW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a666d290258be2baa1f0fcd9c6be6dd45af1d811eb2ee69fef6be656197e2ee23c</Anchor>
    <Abstract>Sampling of Channel::frameDraw. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_DRAW_FINISH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a666d290258be2baa1f0fcd9c6be6dd45a7b861d9db77aad1edcc00a2318f3a3ab</Anchor>
    <Abstract>Sampling of Channel::frameDrawFinish. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_ASSEMBLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a666d290258be2baa1f0fcd9c6be6dd45a2cdfefd69e7918e5a5598501bd393380</Anchor>
    <Abstract>Sampling of Channel::frameAssemble. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_FRAME_WAIT_READY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a666d290258be2baa1f0fcd9c6be6dd45add83b49eaae0b0fc64ffb81aaa929057</Anchor>
    <Abstract>Sampling of Frame::waitReady. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_READBACK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a666d290258be2baa1f0fcd9c6be6dd45a0eea999bf18f36aba16c3b40c9b09b6e</Anchor>
    <Abstract>Sampling of Channel::frameReadback. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_ASYNC_READBACK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a666d290258be2baa1f0fcd9c6be6dd45a23af80f78a55280302ee001bf4bc7d4a</Anchor>
    <Abstract>Sampling of async readback. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_VIEW_FINISH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a666d290258be2baa1f0fcd9c6be6dd45a1c35530d1498a4e186cb469022c153ec</Anchor>
    <Abstract>Sampling of Channel::frameViewFinish. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_FRAME_TRANSMIT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a666d290258be2baa1f0fcd9c6be6dd45a79df8a87a41c801c369d32448a97ae82</Anchor>
    <Abstract>Sampling of frame transmission. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_FRAME_COMPRESS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a666d290258be2baa1f0fcd9c6be6dd45a08990530e29e0e535bc4edf2afc7a5ed</Anchor>
    <Abstract>Sampling of frame compression. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_FRAME_WAIT_SENDTOKEN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a666d290258be2baa1f0fcd9c6be6dd45a95f50ea63e8b3327ced6dcf898da857b</Anchor>
    <Abstract>Sampling of waiting for a send token from the receiver. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW_FINISH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a666d290258be2baa1f0fcd9c6be6dd45a1cac4736c5db894f02169adf5fdc6543</Anchor>
    <Abstract>Sampling of Window::finish before a swap barrier. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW_THROTTLE_FRAMERATE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a666d290258be2baa1f0fcd9c6be6dd45a2e0bbe463242d210808332a6c73ab67e</Anchor>
    <Abstract>Sampling of throttling of framerate_equalizer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW_SWAP_BARRIER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a666d290258be2baa1f0fcd9c6be6dd45a4862125935e43f3f09052ac49ee37ded</Anchor>
    <Abstract>Sampling of swap barrier block. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW_SWAP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a666d290258be2baa1f0fcd9c6be6dd45aa685bb117e9968d5f966863daff63f5c</Anchor>
    <Abstract>Sampling of Window::swapBuffers. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW_FPS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a666d290258be2baa1f0fcd9c6be6dd45a3cf84a4dde417902999af82cc24de1d8</Anchor>
    <Abstract>Framerate sampling. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PIPE_IDLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a666d290258be2baa1f0fcd9c6be6dd45a1ca99d69ff8e89f5c97e3aec17c9f41a</Anchor>
    <Abstract>Pipe thread idle ratio. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NODE_FRAME_DECOMPRESS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a666d290258be2baa1f0fcd9c6be6dd45a50d443d99cbf46177f5f935fa1e86270</Anchor>
    <Abstract>Sampling of frame decompression. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONFIG_START_FRAME</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a666d290258be2baa1f0fcd9c6be6dd45ae80e85f7cf50e62de89e6dac3bd00bdf</Anchor>
    <Abstract>Sampling of Config::startFrame. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONFIG_FINISH_FRAME</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a666d290258be2baa1f0fcd9c6be6dd45afae67d25c16bc0ab3fb3d6839b46cc02</Anchor>
    <Abstract>Sampling of Config::finishFrame. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONFIG_WAIT_FINISH_FRAME</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1_statistic.html</Path>
    <Anchor>a666d290258be2baa1f0fcd9c6be6dd45a1ce826e37e044447a53637a259b9a2eb</Anchor>
    <Abstract>Sampling of synchronization time during Config::finishFrame. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::SubPixel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::SubPixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_sub_pixel.html</Path>
    <Abstract>Holds a subpixel decomposition specification along with some methods for manipulation. </Abstract>
    <DeclaredIn>subPixel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::SubPixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_sub_pixel.html</Path>
    <Anchor>a13175f78acf9f6b7309c57810f706557</Anchor>
    <Abstract>Apply (accumulate) another subpixel specification. </Abstract>
    <DeclaredIn>subPixel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::SubPixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_sub_pixel.html</Path>
    <Anchor>a759e35f989f7b4af9913d6a339fd1887</Anchor>
    <DeclaredIn>subPixel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::SubPixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_sub_pixel.html</Path>
    <Anchor>afd7b870a9f824f9ffac982e4797c1deb</Anchor>
    <DeclaredIn>subPixel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invalidate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::SubPixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_sub_pixel.html</Path>
    <Anchor>a2a93224587030d78217b8b5bace3d9ad</Anchor>
    <Abstract>Make the subpixel specification invalid. </Abstract>
    <DeclaredIn>subPixel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>validate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::SubPixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_sub_pixel.html</Path>
    <Anchor>a7537af6ee9966cdae5f2fed166f827c4</Anchor>
    <Abstract>Make the subpixel specification valid. </Abstract>
    <DeclaredIn>subPixel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::SubPixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_sub_pixel.html</Path>
    <Anchor>ad234f4b630c118a662c122e7104b7376</Anchor>
    <DeclaredIn>subPixel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SubPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::SubPixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_sub_pixel.html</Path>
    <Anchor>aed2398c4189c1010b8d4589a8b72340b</Anchor>
    <Abstract>Construct an empty subpixel specification. </Abstract>
    <DeclaredIn>subPixel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SubPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::SubPixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_sub_pixel.html</Path>
    <Anchor>a95cdb3518c379b2cef1690902abf6b57</Anchor>
    <Abstract>Construct a subpixel specification with default values. </Abstract>
    <DeclaredIn>subPixel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>index</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::SubPixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_sub_pixel.html</Path>
    <Anchor>a12b9120728651fd0e5afe95f78c6ed3f</Anchor>
    <Abstract>The contributor id. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::SubPixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_sub_pixel.html</Path>
    <Anchor>adf5407d52a9f0d4c4a2407de97486a60</Anchor>
    <Abstract>Total number of contributors. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::SwapBarrier</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::SwapBarrier</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_swap_barrier.html</Path>
    <Abstract>A swapbarrier is set on a Compound to synchronize the swap buffer between windows. </Abstract>
    <DeclaredIn>swapBarrier.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SwapBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::SwapBarrier</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_swap_barrier.html</Path>
    <Anchor>a5a0bb13f6d2da9a04157801d753e5233</Anchor>
    <Abstract>Constructs a new SwapBarrier. </Abstract>
    <DeclaredIn>swapBarrier.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Tile</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Tile</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_tile.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::View</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Abstract>Base data transport class for views. </Abstract>
    <DeclaredIn>view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>aed8b18af7733da81a3a280582b79bbcb</Anchor>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a3fe4fad549e3feea155256c53f865782</Anchor>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a436ae424b13d2a2a92e93f97905c7a0e</Anchor>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>af21573263dcf627ed7aea569163dcfc5</Anchor>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a340f9fb5bf6739048ae2f7551719204e</Anchor>
    <Abstract>Set the entity tracking this view. </Abstract>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>ad5d365d828a95a533574790b0c96f256</Anchor>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a84f6a1a2db79bb5e5a8df8799ba51037</Anchor>
    <Abstract>const version of getObserver(). </Abstract>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOverdraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a74c7e3977f2a6b5cac1d3c8ab724c3bf</Anchor>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOverdraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a438db0f5f2cd87f6a04f7d79b6361cd1</Anchor>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useEqualizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a4feaaa528c9118e31cfb97dc478eb4bb</Anchor>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEqualizers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a79c6a601e2df8c37fcc8df9bc079e962</Anchor>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEqualizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a0b6794d64f1083897d702802ccf0338d</Anchor>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEqualizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a6020d34e71bed66f0c382c46515cba2b</Anchor>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a1f47469d27d3e47cf05b6a727dae75d9</Anchor>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changeMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a5538a14b335d3f272d2ebb6f11b5a135</Anchor>
    <Abstract>Set the mode of this view. </Abstract>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>aa1e3f2d08ac77f877028b84b90dc93d1</Anchor>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setModelUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a0c29370bbe767fb1a5824d3220093bde</Anchor>
    <Abstract>Set the model unit of this view. </Abstract>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getModelUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>acfb9c52a2850a49b7838891c9e0e2c65</Anchor>
    <Abstract>Get the model unit of this view. </Abstract>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a96ebb4c8221ba402591de658b0d07434</Anchor>
    <Abstract>Traverse this view using a view visitor. </Abstract>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a85d7c327102e41ee7f87590d88c77017</Anchor>
    <Abstract>Const-version of accept(). </Abstract>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMinimumCapabilities</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a04b1fee2e4364ec5d94c7da847d847de</Anchor>
    <Abstract>Set the minimum required capabilities for this view. </Abstract>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinimumCapabilities</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a2235b8a8a84e7a38ea12be04da3cac3b</Anchor>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaximumCapabilities</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a97bd6f198a5ffae87b344dd3c38df6f6</Anchor>
    <Abstract>Set the maximum desired capabilities for this view. </Abstract>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaximumCapabilities</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a561e47befd2a5a9a54e165ee6bfdd05a</Anchor>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCapabilities</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a75e97c8a1500f7504ffb58c354f179ce</Anchor>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a0bdbe97f54e13fcbaf24d5c20aaa23e1</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ac82bf838d019796b4a3d898bf9a6279e</Anchor>
    <Abstract>Set the name of the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a8b8235ef3a933f40cedcac9488b5d11e</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a074a96afc7fb9e31a1d5b4368ebde972</Anchor>
    <Abstract>Set user-specific data. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ad8344492a6a8222a8f87b622709e6768</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ae8a8ec5d8f869f441f44a31d345866bb</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTasks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3aec2e67eb4948d424c673faef62c63e</Anchor>
    <Abstract>Return the set of tasks this channel might execute in the worst case. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Frustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a90be6ccf2bc8c914386f1e4c05a261c4</Anchor>
    <Abstract>Construct a new frustum. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Frustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>aa8ce28807339f6d11553d7f2f4d1fbe0</Anchor>
    <Abstract>Destruct the frustum. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a4b0e4ab0f81f698f3353947ca6b5864b</Anchor>
    <Abstract>Set the frustum using a wall description. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>ac66cfc54f75f250a0f7fa7f98463c7a5</Anchor>
    <Abstract>Set the frustum using a projection description. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a91f256d93807510db28db6e50c880477</Anchor>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>acced38d338d315945ad93794e3ffda46</Anchor>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>afebc9278e21a6641ba1baa5b117d18fe</Anchor>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsetFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_frustum.html</Path>
    <Anchor>a4364e9b0755bd4f933cd6a9af8addea5</Anchor>
    <Abstract>Set the last specified frustum to TYPE_NONE. </Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSAttributeString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>acdbfa3b4757c573b3349cbc4c4b35849</Anchor>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a47f610e5566c663c581fd1e6988995df</Anchor>
    <Abstract>The application view instance holds the user data master by default. </Abstract>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a6b8bfadb73fceb818ca32f33f46b2dd0</Anchor>
    <Abstract>The view user data instance uses the config latency by default. </Abstract>
    <DeclaredIn>fabric/view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aeaed0d358b6f67d6f3b4372d4e254484</Anchor>
    <Abstract>Construct a new Object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a4b753d5cb7ee3bd182075fa090f4ddbb</Anchor>
    <Abstract>Construct an unmapped, unregistered copy of an object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a2c301f8fda1bbd4bfb184f050a82ff91</Anchor>
    <Abstract>Destruct the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3140ce8ffc4d6dfa5cb053bc5102e84d</Anchor>
    <Abstract>NOP assignment operator. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MODE_MONO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a0098a81f9680fa4694848e0d811d6f76a6a239583f61db085be382b8255e98540</Anchor>
    <Abstract>Render in mono (cyclop eye) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MODE_STEREO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_view.html</Path>
    <Anchor>a0098a81f9680fa4694848e0d811d6f76a61f7cc23613e76b5d68c25acad4826d8</Anchor>
    <Abstract>Render in stereo (left &amp; right eye) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Viewport</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Abstract>A fractional viewport with methods for manipulation. </Abstract>
    <DeclaredIn>viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invalidate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Anchor>a6071f94dfc75843e854634498ff2676b</Anchor>
    <Abstract>Make the viewport invalid. </Abstract>
    <DeclaredIn>viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Anchor>aaf0bfd9c4986e170a84e712da66be0ab</Anchor>
    <Abstract>Apply (accumulate) another viewport. </Abstract>
    <DeclaredIn>viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Anchor>a1ed9da76066f076bf09ccb907d851594</Anchor>
    <Abstract>Transform this viewport into the rhs viewport space. </Abstract>
    <DeclaredIn>viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Anchor>acb8cda0de904b23d48d0973b4fd60f8f</Anchor>
    <DeclaredIn>viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Anchor>a27505e3b2d4d1b9180594a8256070e78</Anchor>
    <DeclaredIn>viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Anchor>aafa0ca3cc72ed2458e14bf172ce08c34</Anchor>
    <DeclaredIn>viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Anchor>a4fc00aa9bfc9432ee89cffa1e3966367</Anchor>
    <DeclaredIn>viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Anchor>adf0678a4c6f9175e0be49fb802a679a9</Anchor>
    <DeclaredIn>viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getXEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Anchor>a7128957b1ace0314dc319a5034691e13</Anchor>
    <DeclaredIn>viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getYEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Anchor>aa9a339274671c86964dd4869b7552726</Anchor>
    <DeclaredIn>viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intersect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Anchor>a44d32f1ccffca17977b0a2ef73b4df40</Anchor>
    <Abstract>Create the intersection of the two viewports. </Abstract>
    <DeclaredIn>viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Anchor>a929f958c9b22d3ff84fcf1ea62a0c4e0</Anchor>
    <Abstract>Create the union of the two viewports. </Abstract>
    <DeclaredIn>viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCoverage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Anchor>a15aa650686601e526acc028b0d2fad6d</Anchor>
    <Abstract>Compute the coverage of another viewport on this viewport. </Abstract>
    <DeclaredIn>viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Anchor>a72b111a76596d89f73e83f11d36f58be</Anchor>
    <Abstract>Apply the view coverage to this viewport. </Abstract>
    <DeclaredIn>viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Viewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Anchor>a288b52fdd1228f351756045501a3185b</Anchor>
    <Abstract>Construct a full fractional viewport. </Abstract>
    <DeclaredIn>viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Viewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Anchor>a04ce630ec6f3bd09a23fc572910cda88</Anchor>
    <Abstract>Construct a fractional viewport with default values. </Abstract>
    <DeclaredIn>viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Viewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Anchor>ac1dc4689e3ab5db494a5fb795ce19d0b</Anchor>
    <Abstract>Construct a fractional viewport from a Vector4f. </Abstract>
    <DeclaredIn>viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Anchor>ade1822ae793b0914ddc460aa3bb64171</Anchor>
    <Abstract>The X coordinate. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Anchor>a860e97f910f61ab3269ee4635d6f8ac7</Anchor>
    <Abstract>The Y coordinate. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>w</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Anchor>aaee39bae9a4ff5664112c0a1fb5d9803</Anchor>
    <Abstract>The width. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>h</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Anchor>a0411e9d1de5b50049a28d0b15fabc632</Anchor>
    <Abstract>The height. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FULL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_viewport.html</Path>
    <Anchor>a9e7f3637203a20b92e9d3d4489d26e80</Anchor>
    <Abstract>A full viewport. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Wall</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Abstract>A wall defining a view frustum. </Abstract>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Wall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>aa9f5a736a8f64f1cc01c47d1d52ba29f</Anchor>
    <Abstract>Construct a new wall description. </Abstract>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Wall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>ac764e68340f057cfd52fb773f0500ace</Anchor>
    <Abstract>Construct a new wall description with default values. </Abstract>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resizeHorizontal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>acfb9ba156a7e16bb8c45d6348575135d</Anchor>
    <Abstract>Resize the wall horizontally. </Abstract>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resizeVertical</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>aa6158a821972336e532a15a9598ebd84</Anchor>
    <Abstract>Resize the wall vertically. </Abstract>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resizeLeft</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>a179ac19b4c9d3d16d6a8296441d13ede</Anchor>
    <Abstract>Resize the wall on the left side. </Abstract>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resizeRight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>a889ee1b572a937a1216c32ca0d600163</Anchor>
    <Abstract>Resize the wall on the right side. </Abstract>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resizeTop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>a34ed113273c1a0ec69f2431928893da6</Anchor>
    <Abstract>Resize the wall on the top side. </Abstract>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resizeBottom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>aba19c166035ee368903fcd6960f43765</Anchor>
    <Abstract>Resize the wall on the bottom side. </Abstract>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resizeHorizontalToAR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>af69885899f65b5fa0e87cd9f649e37d8</Anchor>
    <Abstract>Resize the wall horizontally to match the given aspect ratio. </Abstract>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveFocus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>a4160e3723cafa512fc268ff724e0631c</Anchor>
    <Abstract>Resize the wall by the given ratio as observed from the eye position. </Abstract>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>a6880d33cfc87e6243efb6bf946feb32c</Anchor>
    <Abstract>Compute the sub-frustum for a 2D area on the full wall. </Abstract>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>a22e245833478d042f73b62de893b4a21</Anchor>
    <Abstract>Move each wall corner by the given ratio. </Abstract>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>a0f50e5b7c1fe1eb860ab6f6f32d3f4af</Anchor>
    <Abstract>Set the wall parameters from a projection description. </Abstract>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>ac17cbc902802507e8176fbf71cc53cda</Anchor>
    <Abstract>Set the wall parameters from an inverse projection matrix. </Abstract>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>adb6f7c8a6fd449b3f1d62d3ae9a73fd8</Anchor>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>a00544a812342c6aea65d215cafb9165b</Anchor>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>a04dca5356b957200605a6aac0c8b9654</Anchor>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>af6f68ea6d8362d291a317c91d5f88b46</Anchor>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getU</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>ace7053cb0b85d38a5291c4c6b7f979dc</Anchor>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>abbdd09941d9d3da491f40de69197ca1b</Anchor>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>a56c08b66704c55b9c08a49ecf935d296</Anchor>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bottomLeft</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>a9d5f445a20f73dfb434c482fdeab7716</Anchor>
    <Abstract>The bottom-left corner. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bottomRight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>a3c217dec20427a496b86353a713d79c5</Anchor>
    <Abstract>The bottom-right corner. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>topLeft</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>a192d0ed770ddf71640316ebdbe6895ec</Anchor>
    <Abstract>The top-left corner. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>a72d07b4173f858d0e2776bcd1fd9e33b</Anchor>
    <Abstract>The wall type. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TYPE_FIXED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>a15a9726124abfb49d72b6f6cfdd2e0aaaeb0dd301b30a6c3f7b1518fe7a00adf6</Anchor>
    <Abstract>A fixed mounted projection wall. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TYPE_HMD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_wall.html</Path>
    <Anchor>a15a9726124abfb49d72b6f6cfdd2e0aaab7effabb81e6c720037fac3c4a117eb2</Anchor>
    <Abstract>A wall fixed to the observer (head-mounted display) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Window</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Abstract>Base data transport class for windows. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Channels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>a1ea47ec88c8a3f1d3236f464ce2eb530</Anchor>
    <Abstract>A vector of pointers to channels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Visitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>a7a62d967c5413fe38ff50b0290527a6f</Anchor>
    <Abstract>The Window visitor type. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>ae20cb71c07cddbd45a7e67eb8dacd95e</Anchor>
    <DeclaredIn>fabric/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>a57234ed530a1941970642c4cc525fbe0</Anchor>
    <DeclaredIn>fabric/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>aecf7049d25fa9ccb644bf630add94831</Anchor>
    <DeclaredIn>fabric/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDrawableConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>ae0bd5bde52211bf62d59afef25a205ba</Anchor>
    <DeclaredIn>fabric/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>ab9b5de7fd1773f601a6812cccef373f9</Anchor>
    <DeclaredIn>fabric/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>a02fd697cbda3a6b1b278cbd930fd6002</Anchor>
    <DeclaredIn>fabric/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>ac1f95772888c8ab9ff9d66cd1f99ec89</Anchor>
    <Abstract>Set the window&amp;#39;s name/caption. </Abstract>
    <DeclaredIn>fabric/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>aa6cd344718a9bab2756097041ae9f684</Anchor>
    <Abstract>Set the window&amp;#39;s pixel viewport wrt its parent pipe. </Abstract>
    <DeclaredIn>fabric/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>ae8a10fbed695807c7d5ba029d7d08706</Anchor>
    <Abstract>Set the window&amp;#39;s viewport wrt its parent pipe. </Abstract>
    <DeclaredIn>fabric/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>a6204846074a724f7b3b477232c06a2c5</Anchor>
    <DeclaredIn>fabric/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>a005931beee0a18db7395785d6106c05f</Anchor>
    <Abstract>Perform a depth-first traversal of this window. </Abstract>
    <DeclaredIn>fabric/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>a27e5541d09da3fe7457493726982c797</Anchor>
    <Abstract>Const-version of accept(). </Abstract>
    <DeclaredIn>fabric/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a0bdbe97f54e13fcbaf24d5c20aaa23e1</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a8b8235ef3a933f40cedcac9488b5d11e</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a074a96afc7fb9e31a1d5b4368ebde972</Anchor>
    <Abstract>Set user-specific data. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ad8344492a6a8222a8f87b622709e6768</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>ae8a8ec5d8f869f441f44a31d345866bb</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTasks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3aec2e67eb4948d424c673faef62c63e</Anchor>
    <Abstract>Return the set of tasks this channel might execute in the worst case. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>ad4d19918e0b173d3f6527fe48a36ab5c</Anchor>
    <DeclaredIn>fabric/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aeaed0d358b6f67d6f3b4372d4e254484</Anchor>
    <Abstract>Construct a new Object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a4b753d5cb7ee3bd182075fa090f4ddbb</Anchor>
    <Abstract>Construct an unmapped, unregistered copy of an object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a2c301f8fda1bbd4bfb184f050a82ff91</Anchor>
    <Abstract>Destruct the object. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a3140ce8ffc4d6dfa5cb053bc5102e84d</Anchor>
    <Abstract>NOP assignment operator. </Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>aea00c39dfb613d9fb7843dbb68459892</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_object.html</Path>
    <Anchor>a321f24113c02e0f16830a403e03f62e9</Anchor>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSettings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>a5f7939f4b2cb8be732ff30fb954a5c08</Anchor>
    <Abstract>Set the settings of this window. </Abstract>
    <DeclaredIn>fabric/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSettings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>aedf9f15423e2cb9804dcba704f18f0d7</Anchor>
    <DeclaredIn>fabric/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>a41df0221b9cdc5c01abc9ebb7cfa710e</Anchor>
    <Abstract>Set a window attribute. </Abstract>
    <DeclaredIn>fabric/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window.html</Path>
    <Anchor>a5f9d103a9fa3a1c89178346f4693d994</Anchor>
    <DeclaredIn>fabric/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::WindowSettings</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Abstract>A set of settings to setup an eq::fabric::Window. </Abstract>
    <DeclaredIn>windowSettings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WindowSettings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ab113b1cec643d8ffe438cfd0f2a77db6</Anchor>
    <Abstract>Create a new WindowSettings. </Abstract>
    <DeclaredIn>fabric/windowSettings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WindowSettings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>a9c89747b15516f4cce267c1abd05817e</Anchor>
    <Abstract>Destroy the WindowSettings. </Abstract>
    <DeclaredIn>fabric/windowSettings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>a26e182d01f766e48768d7059fccea575</Anchor>
    <Abstract>Set a window attribute. </Abstract>
    <DeclaredIn>fabric/windowSettings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>a0318a7ae0f34eed3848939f09f95b9e2</Anchor>
    <DeclaredIn>fabric/windowSettings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>a2aa0119bf596609877a2611c933e00c4</Anchor>
    <DeclaredIn>fabric/windowSettings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad39aef74305bf3bde3be67d34485699f</Anchor>
    <Abstract>Set the window&amp;#39;s pixel viewport wrt its parent pipe. </Abstract>
    <DeclaredIn>fabric/windowSettings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>a6819b69f944d3ec6fc2f40c13d737282</Anchor>
    <DeclaredIn>fabric/windowSettings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>a95af8e4e01837687bfebf97554498af7</Anchor>
    <Abstract>Set the window&amp;#39;s name. </Abstract>
    <DeclaredIn>fabric/windowSettings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_CORE_PROFILE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad48bcf47b867c55cacae99e901f1e5fdaa98d2a0dc438bb907fcd6e261e825271</Anchor>
    <Abstract>Core profile context if possible. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_OPENGL_MAJOR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad48bcf47b867c55cacae99e901f1e5fdacea0ec6e3e054657d906f611feef68d0</Anchor>
    <Abstract>Major version for GL context creation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_OPENGL_MINOR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad48bcf47b867c55cacae99e901f1e5fda32a37712a251bf314f6be0852677227b</Anchor>
    <Abstract>Minor version for GL context creation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_STEREO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad48bcf47b867c55cacae99e901f1e5fda3cf8f87655e4f8d06c875e2f283d81ae</Anchor>
    <Abstract>Active stereo. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_DOUBLEBUFFER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad48bcf47b867c55cacae99e901f1e5fdad98f44b89ecc5f03262280c447d6f8b4</Anchor>
    <Abstract>Front and back buffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_FULLSCREEN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad48bcf47b867c55cacae99e901f1e5fdaf21df51c73e85c91f6b4b5d5f49ee05d</Anchor>
    <Abstract>Fullscreen drawable. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_DECORATION</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad48bcf47b867c55cacae99e901f1e5fda79749fc0fc575e401e99caea2a47845d</Anchor>
    <Abstract>Window decorations. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_SWAPSYNC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad48bcf47b867c55cacae99e901f1e5fda730711a01baa7664c5bc1e4942ef7daa</Anchor>
    <Abstract>Swap sync on vertical retrace. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_DRAWABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad48bcf47b867c55cacae99e901f1e5fda59a089c35c0da69a84c70b2a7f8088a3</Anchor>
    <Abstract>Window, pbuffer, FBO or OFF. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_STATISTICS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad48bcf47b867c55cacae99e901f1e5fdaa73d4510c3ffee1ca7372cc86f331d7b</Anchor>
    <Abstract>Statistics gathering hint. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_SCREENSAVER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad48bcf47b867c55cacae99e901f1e5fdaae08f7aff50c82048468c901da746866</Anchor>
    <Abstract>Screensaver (de)activation (WGL) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_GRAB_POINTER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad48bcf47b867c55cacae99e901f1e5fda388dac2b4644baebf8909a0f57864fea</Anchor>
    <Abstract>Capture mouse outside window. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_WIDTH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad48bcf47b867c55cacae99e901f1e5fda54d1292c0cdfafdff32f6358d92af023</Anchor>
    <Abstract>Default horizontal resolution. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_HEIGHT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad48bcf47b867c55cacae99e901f1e5fdad04d26f30723fed9b9e4197d70778ebb</Anchor>
    <Abstract>Default vertical resolution. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_PLANES_COLOR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad48bcf47b867c55cacae99e901f1e5fdab8c244d6650bf52bc51846aa363115c0</Anchor>
    <Abstract>No of per-component color planes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_PLANES_ALPHA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad48bcf47b867c55cacae99e901f1e5fdaa267c44d1bd753f0894137038a377ec9</Anchor>
    <Abstract>No of alpha planes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_PLANES_DEPTH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad48bcf47b867c55cacae99e901f1e5fdae9f09b8cfc5d3a6f19606e0d28f84808</Anchor>
    <Abstract>No of z-buffer planes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_PLANES_STENCIL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad48bcf47b867c55cacae99e901f1e5fda690d5e28e603833db5d60588d60428f0</Anchor>
    <Abstract>No of stencil planes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_PLANES_ACCUM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad48bcf47b867c55cacae99e901f1e5fdaad2634fa4e6023e3e2e3406e64ea1e12</Anchor>
    <Abstract>No of accumulation buffer planes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_PLANES_ACCUM_ALPHA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad48bcf47b867c55cacae99e901f1e5fda407679870a0b4d70340b147eb47eed61</Anchor>
    <Abstract>No of alpha accum buffer planes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_PLANES_SAMPLES</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::WindowSettings</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_window_settings.html</Path>
    <Anchor>ad48bcf47b867c55cacae99e901f1e5fda99ea152585ca196ce1b4b8248c5d7c28</Anchor>
    <Abstract>No of multisample (AA) planes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Zoom</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Zoom</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_zoom.html</Path>
    <Abstract>A zoom specification with methods for manipulation. </Abstract>
    <DeclaredIn>zoom.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Zoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Zoom</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_zoom.html</Path>
    <Anchor>af9b18484c82590c416287488ed965f98</Anchor>
    <Abstract>Construct a new zoom specification set to 1, 1. </Abstract>
    <DeclaredIn>zoom.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Zoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Zoom</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_zoom.html</Path>
    <Anchor>a549d6aab26dfdc829d7e4f084b840555</Anchor>
    <Abstract>Construct a new zoom specification with default values. </Abstract>
    <DeclaredIn>zoom.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NONE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Zoom</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_zoom.html</Path>
    <Anchor>a851d867d384084ccc14ab6700af7625e</Anchor>
    <Abstract>The zoom NONE (1,1) value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::glx</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>eq::glx</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1glx.html</Path>
    <Abstract>The system abstraction layer for X11 and glX. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>XSetCurrentDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::glx</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1glx.html</Path>
    <Anchor>a0b09ece2f0224344f89baaf47cc7efd2</Anchor>
    <Abstract>Set the current X display connection. </Abstract>
    <DeclaredIn>eq/glx/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>XGetCurrentDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::glx</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1glx.html</Path>
    <Anchor>af17b73eb3e32a823b615cef49edb4e2e</Anchor>
    <DeclaredIn>eq/glx/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::glx::EventHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::glx::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_event_handler.html</Path>
    <Abstract>The event handler for glX/X11 windows. </Abstract>
    <DeclaredIn>eventHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_event_handler.html</Path>
    <Anchor>ab9c68c3c075230e633f520c9fe3f99b1</Anchor>
    <Abstract>Construct a new glX event handler. </Abstract>
    <DeclaredIn>glx/eventHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~EventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_event_handler.html</Path>
    <Anchor>afe912a95fb7fd248e4e747d635e20a78</Anchor>
    <Abstract>Destruct the glX event handler. </Abstract>
    <DeclaredIn>glx/eventHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::glx::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_event_handler.html</Path>
    <Anchor>af5d286734f10e1db91b055e758ba058a</Anchor>
    <Abstract>Dispatch all pending events on the current thread. </Abstract>
    <DeclaredIn>glx/eventHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_event_handler.html</Path>
    <Anchor>a0100480171a68e5bd914f81caa2abe6c</Anchor>
    <Abstract>Construct a new event handler. </Abstract>
    <DeclaredIn>eventHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::glx::MessagePump</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::glx::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_message_pump.html</Path>
    <Abstract>A message pump receiving and dispatching X11 events. </Abstract>
    <DeclaredIn>messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_message_pump.html</Path>
    <Anchor>a42b0b1470c6a81642fd0e601f030c1e5</Anchor>
    <Abstract>Construct a new X11 message pump. </Abstract>
    <DeclaredIn>glx/messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_message_pump.html</Path>
    <Anchor>a77ec0c04a1341faf8f4ed87ecb483e39</Anchor>
    <Abstract>Destruct this message pump. </Abstract>
    <DeclaredIn>glx/messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postWakeup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_message_pump.html</Path>
    <Anchor>af708ae6b19947d84d21841c99bb3becb</Anchor>
    <Abstract>Unblock dispatchOne(). </Abstract>
    <DeclaredIn>glx/messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatchAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_message_pump.html</Path>
    <Anchor>a7c670e4e92f61923efc59c64c98f4c72</Anchor>
    <Abstract>Dispatch all pending system events, does not block. </Abstract>
    <DeclaredIn>glx/messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatchOne</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_message_pump.html</Path>
    <Anchor>ac1f03d3e9a6f508800550ae33cecaa2d</Anchor>
    <Abstract>Dispatch at least one pending system event, blocks potentially. </Abstract>
    <DeclaredIn>glx/messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>register_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_message_pump.html</Path>
    <Anchor>afd3747edc9c4b81b24d7792a59675d3e</Anchor>
    <Abstract>Register a new Display connection for event dispatch. </Abstract>
    <DeclaredIn>glx/messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deregister</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_message_pump.html</Path>
    <Anchor>ae220ec66ed5ccb2db4edf7b2cff7d673</Anchor>
    <Abstract>Deregister a Display connection from event dispatch. </Abstract>
    <DeclaredIn>glx/messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>register_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_message_pump.html</Path>
    <Anchor>ab5d1089e46cdcbc8d1aee2445bbd6af5</Anchor>
    <Abstract>Register a new Deflect connection for event dispatch. </Abstract>
    <DeclaredIn>glx/messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deregister</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_message_pump.html</Path>
    <Anchor>aa6effd3d9876444f2763332e3bd6cd65</Anchor>
    <Abstract>Deregister a Deflect connection from event dispatch. </Abstract>
    <DeclaredIn>glx/messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_message_pump.html</Path>
    <Anchor>a398cf554cf2a9d1a133348e403882dce</Anchor>
    <Abstract>Construct a new message pump. </Abstract>
    <DeclaredIn>messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::glx::Pipe</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::glx::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_pipe.html</Path>
    <Abstract>Default implementation of a glX system pipe. </Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_pipe.html</Path>
    <Anchor>a6b5d2b60578a3cd0d6f7a72d1d72ec4b</Anchor>
    <Abstract>Construct a new glX system pipe. </Abstract>
    <DeclaredIn>glx/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_pipe.html</Path>
    <Anchor>a57c25296d2f85bf7df5a2f8564ff7e8e</Anchor>
    <Abstract>Destruct this glX pipe. </Abstract>
    <DeclaredIn>glx/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getXDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_pipe.html</Path>
    <Anchor>af8b041b4acce937d60dd690b4140fc40</Anchor>
    <DeclaredIn>glx/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glxewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_pipe.html</Path>
    <Anchor>a24ba5a0210f8fcdefc6de7fa57e6188b</Anchor>
    <DeclaredIn>glx/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_pipe.html</Path>
    <Anchor>a4356d1be6008f415ab405d5ad4190062</Anchor>
    <Abstract>Initialize this pipe for the GLX window system. </Abstract>
    <DeclaredIn>glx/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_pipe.html</Path>
    <Anchor>a587aaddcc4ebd2f1ef6ecddbbb40e0cf</Anchor>
    <Abstract>Deinitialize this pipe for the GLX window system. </Abstract>
    <DeclaredIn>glx/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_pipe.html</Path>
    <Anchor>a30a85124f55b53b097a4473fa8dce23a</Anchor>
    <Abstract>Create a new SstemPipe for the given eq::Pipe. </Abstract>
    <DeclaredIn>systemPipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SystemPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_pipe.html</Path>
    <Anchor>a6cf63eb5a1250df9a174061471c3751e</Anchor>
    <Abstract>Destroy the SystemPipe. </Abstract>
    <DeclaredIn>systemPipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_pipe.html</Path>
    <Anchor>ac924f3e52d2ce6af3b843cb92a964720</Anchor>
    <DeclaredIn>systemPipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_pipe.html</Path>
    <Anchor>a7728a9d81f1794808c49d4fd360c38c8</Anchor>
    <DeclaredIn>systemPipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxOpenGLVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_pipe.html</Path>
    <Anchor>a66d8591964929773b8f10d20c1e35447</Anchor>
    <DeclaredIn>systemPipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setXDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_pipe.html</Path>
    <Anchor>a594ca2574beee4b422dbcafb7657ac51</Anchor>
    <Abstract>Set the X display connection for this pipe. </Abstract>
    <DeclaredIn>glx/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getXDisplayString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_pipe.html</Path>
    <Anchor>a68b07312b2112fae7fdb26bf0746aff8</Anchor>
    <DeclaredIn>glx/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_pipe.html</Path>
    <Anchor>aeddc0caf6b8f9c79ce821851a6aad5d8</Anchor>
    <Abstract>Initialize this pipe for OpenGL. </Abstract>
    <DeclaredIn>glx/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_pipe.html</Path>
    <Anchor>ae71bcebd6ad62bece6a3d9f6d8ec6bfb</Anchor>
    <Abstract>Send a pipe error event to the application node. </Abstract>
    <DeclaredIn>systemPipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::glx::Window</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Abstract>Equalizer default implementation of a glX window. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>a7964f24639d03ae8d35a3b84cba5a518</Anchor>
    <Abstract>Construct a new glX/X11 system window. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>a593c24ce146a751a36fe352e2a8c87f7</Anchor>
    <Abstract>Destruct this glX window. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>adcae40964be7604f3efa14f4671f9eee</Anchor>
    <Abstract>Initialize this window for the glX window system. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>a63b912c69e8fc67c21b6db055d09be75</Anchor>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chooseGLXFBConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>a7ff0240f589b260f1da2d53c14e7d93f</Anchor>
    <Abstract>Choose a GLX framebuffer config based on the window&amp;#39;s attributes. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createGLXContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>adbc6730e97f37e96bf273e58f6da891a</Anchor>
    <Abstract>Create a glX context. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitGLXDrawable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>a0745ae010302498a2a63edcb72c9c61b</Anchor>
    <Abstract>Initialize the window&amp;#39;s drawable (fullscreen, pbuffer or window) and bind the glX context...</Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitGLXWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>a10840a4b25636de3603d0230b67e8c6f</Anchor>
    <Abstract>Initialize the window with a window and bind the glX context. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitGLXPBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>af3f71f1bca03d763fe74b95aeb2abe84</Anchor>
    <Abstract>Initialize the window with a PBuffer and bind the glX context. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initEventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>a58a9ab6ba719d498904371ca9e7bc35c</Anchor>
    <Abstract>Register with the pipe&amp;#39;s GLXEventHandler, called by setXDrawable(). </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitEventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>a28203e7bfa95fe3306fc3ea48cd282cc</Anchor>
    <Abstract>Deregister with the GLXEventHandler, called by setXDrawable(). </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGLXContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>a921fd06f1d3682680ac559b9539ce00d</Anchor>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getXDrawable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>adc796e64ce73450e7908b28acab26b6e</Anchor>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getXDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>a145355b135f4b181df8f38f0da089d7d</Anchor>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glxewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>acbd9436c8ab3f19b6f6d0b90e1d6cf59</Anchor>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setXDrawable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>a970ba10efbd5e41d78c339def58d6f29</Anchor>
    <Abstract>Set the X11 drawable ID for this window. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGLXContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>a5497f644e7e4b205f8fe4c6d193a89a3</Anchor>
    <Abstract>Set the glX rendering context for this window. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>a1e9cd7923bbc985e1350000fefc7b270</Anchor>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doneCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>ae47255f7fbd4b88b8f65d7b8043be4f1</Anchor>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>a3f21e08ccf46db2133233770a10ed942</Anchor>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinNVSwapBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>a6733e6d1b07066c00fe0e4297f1f7dd2</Anchor>
    <Abstract>Implementation untested for glX. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>leaveNVSwapBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>a6c076ef25057b5201e85bb3b0d36a1cf</Anchor>
    <Abstract>Unbind a GLX_NV_swap_barrier. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window.html</Path>
    <Anchor>a69b3c01243af0ee46559dec4bbaa9880</Anchor>
    <Abstract>Process a mouse event. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window_i_f.html</Path>
    <Anchor>a4cfeee1ab35177549f7281d67febaa7e</Anchor>
    <Abstract>Process a (re)size event. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window_i_f.html</Path>
    <Anchor>a290e1d930cadba963801cab058a4d2c9</Anchor>
    <Abstract>Process a keyboard event. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window_i_f.html</Path>
    <Anchor>a9e967898757a8847babc8b48ed94c14d</Anchor>
    <Abstract>Process an axis event. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window_i_f.html</Path>
    <Anchor>abf135b58bf93b9b68e697f8070b83e70</Anchor>
    <Abstract>Process a button event. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window_i_f.html</Path>
    <Anchor>affd1a3b60ad13d09f5aa82db84291785</Anchor>
    <Abstract>Process a stateless event. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a6da73c4a415f65d6cad80f3508cc8656</Anchor>
    <Abstract>Construct a new OpenGL window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~GLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a2f9f6dc22c4cb0fea9175984aa72287a</Anchor>
    <Abstract>Destruct a new OpenGL window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a87a95ddbe5a9993b4f8a36aaf17c22d4</Anchor>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initGLEW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>aac0da2da1f2e83bb9a7a487faec4ff6b</Anchor>
    <Abstract>Initialize the GLEW context for this window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitGLEW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>abda0f097fa517fd9a50ba9faa66c7389</Anchor>
    <Abstract>De-initialize the GLEW context. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a3e5c80aadda75dbb9499f670cca9909f</Anchor>
    <Abstract>Get the GLEW context for this window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queryDrawableConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>adde4544eb0954e33f3fdc7f5d1952fd4</Anchor>
    <Abstract>Set up the drawable config by querying the current context. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>aedeb6d0951040f6c04b84589e2f05a62</Anchor>
    <Abstract>Bind the window&amp;#39;s FBO, if it uses an FBO drawable. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindDrawFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a06dac44630e2182f9ad2370f66311e61</Anchor>
    <Abstract>Bind the window&amp;#39;s draw FBO, used for multisampling. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a232cea38218d73df847b22dc0cd8a788</Anchor>
    <Abstract>Update the window&amp;#39;s FBO from the multisampled FBO. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>af963818ae1cbf8068b271827a0f82b84</Anchor>
    <Abstract>Flush all command buffers. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a3a908be05acd4848f019d03bfb03de5a</Anchor>
    <Abstract>Finish execution of all commands. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a5ce659a130d10112591e800161f5b0ec</Anchor>
    <Abstract>Build and initialize the FBO. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExitFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a4cd57e391d3d71a692c47a6846ac1b6f</Anchor>
    <Abstract>Destroy the FBO. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>acbc764b3d553a4018734b81f5b25ebef</Anchor>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>ac060fbb5960861a5c00b9291cd7e07e6</Anchor>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a25c36c74f33badb21ca893833290b8d0</Anchor>
    <Abstract>Create a new SystemWindow for the given eq::Window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a3b6bb633ed4be1c8561ede26f2a6db35</Anchor>
    <Abstract>Destroy the SystemWindow. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>aa5e2cefc215d894e9ec370bdd18b5f5b</Anchor>
    <Abstract>Send a window error event to the application node. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a51f6af7c8cb42cff68f142751e1b45f3</Anchor>
    <Abstract>Process a stateless event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a6590cd0d52a15d877db81330156d8d41</Anchor>
    <Abstract>Process a (re)size event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a2ec0a58160afd109ae3e25d7d880e797</Anchor>
    <Abstract>Process a mouse event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ad1c42304a0c7890e216a4388a1d2373b</Anchor>
    <Abstract>Process a keyboard event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a16066f67716e151954e94756a4f37263</Anchor>
    <Abstract>Process an axis event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>aa8496fdc41099eacfb97b05bf8d1571d</Anchor>
    <Abstract>Process a button event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ab45ed6161cfacd3ae1b4a5bc7e24ca1c</Anchor>
    <Abstract>Set the window&amp;#39;s pixel viewport wrt its parent pipe. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a5542a45ce1eea5dafe7ec0d6a3589618</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a279a88dc1758222716c552305d5e9e90</Anchor>
    <Abstract>Set the window&amp;#39;s name. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a76359168d7109a57feb35d6d1d0877aa</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a0d782332f49d0ca59471f4ee106db118</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSharedContextWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a274123d370d12ba6acd5576640ea4f9f</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::glx::WindowIF</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::glx::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window_i_f.html</Path>
    <Abstract>The interface defining the minimum functionality for a glX window. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGLXContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window_i_f.html</Path>
    <Anchor>a9d52de071b47c536126d1fd3970ca062</Anchor>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getXDrawable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window_i_f.html</Path>
    <Anchor>a0cfd5a41062fa32792984cce804c9287</Anchor>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getXDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window_i_f.html</Path>
    <Anchor>ad5f30f0624337cab5aa0d376fc4dfb7c</Anchor>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window_i_f.html</Path>
    <Anchor>a4cfeee1ab35177549f7281d67febaa7e</Anchor>
    <Abstract>Process a (re)size event. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window_i_f.html</Path>
    <Anchor>a92629af5ec7f3a2cc310f811d8cb7f47</Anchor>
    <Abstract>Process a mouse event. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window_i_f.html</Path>
    <Anchor>a290e1d930cadba963801cab058a4d2c9</Anchor>
    <Abstract>Process a keyboard event. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window_i_f.html</Path>
    <Anchor>a9e967898757a8847babc8b48ed94c14d</Anchor>
    <Abstract>Process an axis event. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window_i_f.html</Path>
    <Anchor>abf135b58bf93b9b68e697f8070b83e70</Anchor>
    <Abstract>Process a button event. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1_window_i_f.html</Path>
    <Anchor>affd1a3b60ad13d09f5aa82db84291785</Anchor>
    <Abstract>Process a stateless event. </Abstract>
    <DeclaredIn>glx/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a6da73c4a415f65d6cad80f3508cc8656</Anchor>
    <Abstract>Construct a new OpenGL window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~GLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a2f9f6dc22c4cb0fea9175984aa72287a</Anchor>
    <Abstract>Destruct a new OpenGL window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a37838c9aca2297d47603b18d1e953c0a</Anchor>
    <Abstract>Bind the FBO and update the current cache. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doneCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a7c1ddf60163144d6ec9fddfb845dada7</Anchor>
    <Abstract>Unbind the FBO and remove context from current cache. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a87a95ddbe5a9993b4f8a36aaf17c22d4</Anchor>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initGLEW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>aac0da2da1f2e83bb9a7a487faec4ff6b</Anchor>
    <Abstract>Initialize the GLEW context for this window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitGLEW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>abda0f097fa517fd9a50ba9faa66c7389</Anchor>
    <Abstract>De-initialize the GLEW context. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a3e5c80aadda75dbb9499f670cca9909f</Anchor>
    <Abstract>Get the GLEW context for this window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queryDrawableConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>adde4544eb0954e33f3fdc7f5d1952fd4</Anchor>
    <Abstract>Set up the drawable config by querying the current context. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>aedeb6d0951040f6c04b84589e2f05a62</Anchor>
    <Abstract>Bind the window&amp;#39;s FBO, if it uses an FBO drawable. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindDrawFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a06dac44630e2182f9ad2370f66311e61</Anchor>
    <Abstract>Bind the window&amp;#39;s draw FBO, used for multisampling. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a232cea38218d73df847b22dc0cd8a788</Anchor>
    <Abstract>Update the window&amp;#39;s FBO from the multisampled FBO. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>af963818ae1cbf8068b271827a0f82b84</Anchor>
    <Abstract>Flush all command buffers. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a3a908be05acd4848f019d03bfb03de5a</Anchor>
    <Abstract>Finish execution of all commands. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a5ce659a130d10112591e800161f5b0ec</Anchor>
    <Abstract>Build and initialize the FBO. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExitFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a4cd57e391d3d71a692c47a6846ac1b6f</Anchor>
    <Abstract>Destroy the FBO. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>acbc764b3d553a4018734b81f5b25ebef</Anchor>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>ac060fbb5960861a5c00b9291cd7e07e6</Anchor>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a25c36c74f33badb21ca893833290b8d0</Anchor>
    <Abstract>Create a new SystemWindow for the given eq::Window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a3b6bb633ed4be1c8561ede26f2a6db35</Anchor>
    <Abstract>Destroy the SystemWindow. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>aa5e2cefc215d894e9ec370bdd18b5f5b</Anchor>
    <Abstract>Send a window error event to the application node. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a51f6af7c8cb42cff68f142751e1b45f3</Anchor>
    <Abstract>Process a stateless event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a6590cd0d52a15d877db81330156d8d41</Anchor>
    <Abstract>Process a (re)size event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a2ec0a58160afd109ae3e25d7d880e797</Anchor>
    <Abstract>Process a mouse event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ad1c42304a0c7890e216a4388a1d2373b</Anchor>
    <Abstract>Process a keyboard event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a16066f67716e151954e94756a4f37263</Anchor>
    <Abstract>Process an axis event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>aa8496fdc41099eacfb97b05bf8d1571d</Anchor>
    <Abstract>Process a button event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ab45ed6161cfacd3ae1b4a5bc7e24ca1c</Anchor>
    <Abstract>Set the window&amp;#39;s pixel viewport wrt its parent pipe. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a5542a45ce1eea5dafe7ec0d6a3589618</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a279a88dc1758222716c552305d5e9e90</Anchor>
    <Abstract>Set the window&amp;#39;s name. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a76359168d7109a57feb35d6d1d0877aa</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a0d782332f49d0ca59471f4ee106db118</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSharedContextWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a274123d370d12ba6acd5576640ea4f9f</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ac4931aa0dcd232b19680622a2e0d5dea</Anchor>
    <Abstract>Initialize this system window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ab0dac0408016b13d3e680706d19f3a14</Anchor>
    <Abstract>De-initialize this system window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a29e00bd15296b876bc63c267c07950a2</Anchor>
    <Abstract>Swap the front and back buffer. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinNVSwapBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a055ea5d409568f2177581a9283c8966e</Anchor>
    <Abstract>Join a NV_swap_group. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::plugin::Compressor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Compressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a77c03e07dc1f934aeae6a2cac0b7950c</Anchor>
    <Abstract>Construct a new compressor. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a8de0dea876715061da965d296c09ab2f</Anchor>
    <Abstract>Compress data. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getResults</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a32e1b1c7cbac32387f0103fcbb8155b0</Anchor>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNResults</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>af738ca497f32ee61df5ff87bae6f092d</Anchor>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>download</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a839f1e6826909a5b3cc393f2247bf324</Anchor>
    <Abstract>Transfer frame buffer data into main memory. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upload</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a2e5526104be4d6eacd947ba62ede0faa</Anchor>
    <Abstract>Transfer data from main memory into GPU memory. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startDownload</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a422fa88a01586d8245c5fa292136eab4</Anchor>
    <Abstract>Start transferring frame buffer data into main memory. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishDownload</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a5b3daa52eed8a2201782aa99a5eb7e64</Anchor>
    <Abstract>Finish transferring frame buffer data into main memory. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_results</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a7f68a7df9b71bbc52bd7933b7b9ee658</Anchor>
    <Abstract>The compressed data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nResults</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a1282f1e6419e3ee43fbdd4161a556548</Anchor>
    <Abstract>Number of elements used in _results. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::plugin::Compressor::Functions</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::plugin::Compressor::Functions</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1plugin_1_1_compressor_1_1_functions.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::plugin::CompressorReadDrawPixels</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::plugin::CompressorReadDrawPixels</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor_read_draw_pixels.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::CompressorReadDrawPixels</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor_read_draw_pixels.html</Path>
    <Anchor>aca06c121fa0ec5d0e5cf07b5e319f4ec</Anchor>
    <Abstract>Compress data. </Abstract>
    <DeclaredIn>compressorReadDrawPixels.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Compressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a77c03e07dc1f934aeae6a2cac0b7950c</Anchor>
    <Abstract>Construct a new compressor. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getResults</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a32e1b1c7cbac32387f0103fcbb8155b0</Anchor>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNResults</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>af738ca497f32ee61df5ff87bae6f092d</Anchor>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>download</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a839f1e6826909a5b3cc393f2247bf324</Anchor>
    <Abstract>Transfer frame buffer data into main memory. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upload</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a2e5526104be4d6eacd947ba62ede0faa</Anchor>
    <Abstract>Transfer data from main memory into GPU memory. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startDownload</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a422fa88a01586d8245c5fa292136eab4</Anchor>
    <Abstract>Start transferring frame buffer data into main memory. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishDownload</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a5b3daa52eed8a2201782aa99a5eb7e64</Anchor>
    <Abstract>Finish transferring frame buffer data into main memory. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_internalFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::plugin::CompressorReadDrawPixels</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor_read_draw_pixels.html</Path>
    <Anchor>a2916160478548f5bfea62013021443ac</Anchor>
    <Abstract>the GL format </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_format</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::plugin::CompressorReadDrawPixels</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor_read_draw_pixels.html</Path>
    <Anchor>a6f18516c6bae4562b8e718773ab8936d</Anchor>
    <Abstract>the GL format </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::plugin::CompressorReadDrawPixels</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor_read_draw_pixels.html</Path>
    <Anchor>a548f5568b1c3303209d292c3cd956298</Anchor>
    <Abstract>the GL type </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_depth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::plugin::CompressorReadDrawPixels</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor_read_draw_pixels.html</Path>
    <Anchor>a51aac11d4647e9d538a6d1f08cacc528</Anchor>
    <Abstract>the size of one output token </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_results</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a7f68a7df9b71bbc52bd7933b7b9ee658</Anchor>
    <Abstract>The compressed data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nResults</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a1282f1e6419e3ee43fbdd4161a556548</Anchor>
    <Abstract>Number of elements used in _results. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::plugin::CompressorYUV</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::plugin::CompressorYUV</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor_y_u_v.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::CompressorYUV</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor_y_u_v.html</Path>
    <Anchor>a6deec273bca6db71aec8e039383dbe81</Anchor>
    <Abstract>Compress data. </Abstract>
    <DeclaredIn>compressorYUV.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Compressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a77c03e07dc1f934aeae6a2cac0b7950c</Anchor>
    <Abstract>Construct a new compressor. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getResults</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a32e1b1c7cbac32387f0103fcbb8155b0</Anchor>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNResults</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>af738ca497f32ee61df5ff87bae6f092d</Anchor>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>download</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a839f1e6826909a5b3cc393f2247bf324</Anchor>
    <Abstract>Transfer frame buffer data into main memory. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upload</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a2e5526104be4d6eacd947ba62ede0faa</Anchor>
    <Abstract>Transfer data from main memory into GPU memory. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startDownload</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a422fa88a01586d8245c5fa292136eab4</Anchor>
    <Abstract>Start transferring frame buffer data into main memory. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishDownload</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a5b3daa52eed8a2201782aa99a5eb7e64</Anchor>
    <Abstract>Finish transferring frame buffer data into main memory. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_results</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a7f68a7df9b71bbc52bd7933b7b9ee658</Anchor>
    <Abstract>The compressed data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nResults</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::plugin::Compressor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1plugin_1_1_compressor.html</Path>
    <Anchor>a1282f1e6419e3ee43fbdd4161a556548</Anchor>
    <Abstract>Number of elements used in _results. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::qt</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>eq::qt</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1qt.html</Path>
    <Abstract>The system abstraction layer for Qt. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::qt::ShareContextWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::qt::ShareContextWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_share_context_window.html</Path>
    <Abstract>Helper window to allow Open GL context sharing between Qt widgets and windows created by Equalizer...</Abstract>
    <DeclaredIn>shareContextWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::ShareContextWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_share_context_window.html</Path>
    <Anchor>a269ccd69bccf4b48a0797b6084b96df5</Anchor>
    <Abstract>Initialize this system window. </Abstract>
    <DeclaredIn>shareContextWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::ShareContextWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_share_context_window.html</Path>
    <Anchor>aa9af4f256f40e8e564eb59e20a1e2a58</Anchor>
    <Abstract>De-initialize this system window. </Abstract>
    <DeclaredIn>shareContextWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::ShareContextWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_share_context_window.html</Path>
    <Anchor>a43e9068e76f89330359aa17d6dc857f3</Anchor>
    <Abstract>Make the system window rendering context and drawable current. </Abstract>
    <DeclaredIn>shareContextWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doneCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::ShareContextWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_share_context_window.html</Path>
    <Anchor>a632ba680c514798f4eac39eb2eb84bf1</Anchor>
    <Abstract>This results in no context being current in the current thread. </Abstract>
    <DeclaredIn>shareContextWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::ShareContextWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_share_context_window.html</Path>
    <Anchor>ac903212dbf1e59f7e84464e924f46581</Anchor>
    <Abstract>Bind the window&amp;#39;s FBO, if it uses an FBO drawable. </Abstract>
    <DeclaredIn>shareContextWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindDrawFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::ShareContextWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_share_context_window.html</Path>
    <Anchor>af7b08d6f0515dac583cb977a7c196757</Anchor>
    <Abstract>Bind the window&amp;#39;s draw FBO, used for multisampling. </Abstract>
    <DeclaredIn>shareContextWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::ShareContextWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_share_context_window.html</Path>
    <Anchor>ae5a480b4cd746cceeea74ffa67e716e5</Anchor>
    <Abstract>Update the window&amp;#39;s FBO from the multisampled FBO. </Abstract>
    <DeclaredIn>shareContextWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::ShareContextWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_share_context_window.html</Path>
    <Anchor>a688409b97af8713553c34367f47e6856</Anchor>
    <Abstract>Swap the front and back buffer. </Abstract>
    <DeclaredIn>shareContextWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::ShareContextWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_share_context_window.html</Path>
    <Anchor>acce0529b59fdd7cd8d0dc62e928c5557</Anchor>
    <Abstract>Flush all command buffers. </Abstract>
    <DeclaredIn>shareContextWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::ShareContextWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_share_context_window.html</Path>
    <Anchor>addef28d39367555eb55b568580c31cd6</Anchor>
    <Abstract>Finish execution of all commands. </Abstract>
    <DeclaredIn>shareContextWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinNVSwapBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::ShareContextWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_share_context_window.html</Path>
    <Anchor>aac57c704897f996782906c1ac5c20bd8</Anchor>
    <Abstract>Join a NV_swap_group. </Abstract>
    <DeclaredIn>shareContextWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queryDrawableConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::ShareContextWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_share_context_window.html</Path>
    <Anchor>a184e6505939a8ccad09c6722187e8bb0</Anchor>
    <Abstract>Set up the given drawable based on the current context. </Abstract>
    <DeclaredIn>shareContextWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a25c36c74f33badb21ca893833290b8d0</Anchor>
    <Abstract>Create a new SystemWindow for the given eq::Window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a3b6bb633ed4be1c8561ede26f2a6db35</Anchor>
    <Abstract>Destroy the SystemWindow. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a959906fe6a57bcdbe67656f70bace67f</Anchor>
    <Abstract>Get the GLEW context for this window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>aa5e2cefc215d894e9ec370bdd18b5f5b</Anchor>
    <Abstract>Send a window error event to the application node. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a51f6af7c8cb42cff68f142751e1b45f3</Anchor>
    <Abstract>Process a stateless event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a6590cd0d52a15d877db81330156d8d41</Anchor>
    <Abstract>Process a (re)size event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a2ec0a58160afd109ae3e25d7d880e797</Anchor>
    <Abstract>Process a mouse event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ad1c42304a0c7890e216a4388a1d2373b</Anchor>
    <Abstract>Process a keyboard event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a16066f67716e151954e94756a4f37263</Anchor>
    <Abstract>Process an axis event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>aa8496fdc41099eacfb97b05bf8d1571d</Anchor>
    <Abstract>Process a button event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ab45ed6161cfacd3ae1b4a5bc7e24ca1c</Anchor>
    <Abstract>Set the window&amp;#39;s pixel viewport wrt its parent pipe. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a5542a45ce1eea5dafe7ec0d6a3589618</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a279a88dc1758222716c552305d5e9e90</Anchor>
    <Abstract>Set the window&amp;#39;s name. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a76359168d7109a57feb35d6d1d0877aa</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a0d782332f49d0ca59471f4ee106db118</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSharedContextWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a274123d370d12ba6acd5576640ea4f9f</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ae8d031bd946e14d7bbc9445d4e3b06d9</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a3c9cea8825e239899ccd453b8f1299ea</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::qt::Window</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::qt::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window.html</Path>
    <Abstract>Equalizer default implementation of a Qt window. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window.html</Path>
    <Anchor>aced7e922346fae391dfb1650c044c691</Anchor>
    <Abstract>Create a new window using Qt. </Abstract>
    <DeclaredIn>qt/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window.html</Path>
    <Anchor>a04e3fbb5eb0798e190b1578a55436091</Anchor>
    <Abstract>Destruct this Qt window. </Abstract>
    <DeclaredIn>qt/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window.html</Path>
    <Anchor>a31da47bda381c6d39217dd380728114e</Anchor>
    <Abstract>The context won&amp;#39;t be ready to be used until configInit is called. </Abstract>
    <DeclaredIn>qt/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEventProcessor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window.html</Path>
    <Anchor>a15cde52e574829c770f15d2460a95f25</Anchor>
    <Abstract>Use this object to make Qt events reach eq::Config when using this window for offscreen rendering wit...</Abstract>
    <DeclaredIn>qt/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveContextToThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window.html</Path>
    <Anchor>a8eee728766fd9f75a0aa47dd96bde33d</Anchor>
    <Abstract>Move OpenGLContext object to given thread. </Abstract>
    <DeclaredIn>qt/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window.html</Path>
    <Anchor>a90e3f8253c4e5fb74a5a552b3165b3a2</Anchor>
    <Abstract>Initialize this window for the Qt window system. </Abstract>
    <DeclaredIn>qt/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window.html</Path>
    <Anchor>a8601902446bb4cd496bcc48ab3ddaacf</Anchor>
    <DeclaredIn>qt/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window.html</Path>
    <Anchor>a70952c2f21066cbb893a3f8d13ba35ff</Anchor>
    <DeclaredIn>qt/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doneCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window.html</Path>
    <Anchor>a60e56f67a4dbf65331ff9cce569d595f</Anchor>
    <DeclaredIn>qt/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window.html</Path>
    <Anchor>a63997a93e57425675fc52c942376df80</Anchor>
    <DeclaredIn>qt/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinNVSwapBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window.html</Path>
    <Anchor>affa67f799c911892f6dbbe56a5546c75</Anchor>
    <Abstract>Implementation untested for Qt. </Abstract>
    <DeclaredIn>qt/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>leaveNVSwapBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window.html</Path>
    <Anchor>a676797a2afb4a96e864a71d2c9f5b424</Anchor>
    <Abstract>Implementation untested for Qt. </Abstract>
    <DeclaredIn>qt/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window.html</Path>
    <Anchor>a628cefd26a4ac0d14cbe41774f402e21</Anchor>
    <DeclaredIn>qt/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window_i_f.html</Path>
    <Anchor>aa8f336bc7f0a2e8ce21ec56d088a9907</Anchor>
    <Abstract>Process a stateless event. </Abstract>
    <DeclaredIn>qt/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window_i_f.html</Path>
    <Anchor>a96b5ab4baa0dd0de3c14186f32783029</Anchor>
    <Abstract>Process a mouse event. </Abstract>
    <DeclaredIn>qt/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window_i_f.html</Path>
    <Anchor>ab73c2b9f7adb29bf01d4bc64d7a34c93</Anchor>
    <Abstract>Process a keyboard event. </Abstract>
    <DeclaredIn>qt/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window_i_f.html</Path>
    <Anchor>a7df919f8211a0a42d6d812b9f7ae7e79</Anchor>
    <Abstract>Process a stateless event. </Abstract>
    <DeclaredIn>qt/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a6da73c4a415f65d6cad80f3508cc8656</Anchor>
    <Abstract>Construct a new OpenGL window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~GLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a2f9f6dc22c4cb0fea9175984aa72287a</Anchor>
    <Abstract>Destruct a new OpenGL window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a87a95ddbe5a9993b4f8a36aaf17c22d4</Anchor>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initGLEW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>aac0da2da1f2e83bb9a7a487faec4ff6b</Anchor>
    <Abstract>Initialize the GLEW context for this window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitGLEW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>abda0f097fa517fd9a50ba9faa66c7389</Anchor>
    <Abstract>De-initialize the GLEW context. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a3e5c80aadda75dbb9499f670cca9909f</Anchor>
    <Abstract>Get the GLEW context for this window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queryDrawableConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>adde4544eb0954e33f3fdc7f5d1952fd4</Anchor>
    <Abstract>Set up the drawable config by querying the current context. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>aedeb6d0951040f6c04b84589e2f05a62</Anchor>
    <Abstract>Bind the window&amp;#39;s FBO, if it uses an FBO drawable. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindDrawFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a06dac44630e2182f9ad2370f66311e61</Anchor>
    <Abstract>Bind the window&amp;#39;s draw FBO, used for multisampling. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a232cea38218d73df847b22dc0cd8a788</Anchor>
    <Abstract>Update the window&amp;#39;s FBO from the multisampled FBO. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>af963818ae1cbf8068b271827a0f82b84</Anchor>
    <Abstract>Flush all command buffers. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a3a908be05acd4848f019d03bfb03de5a</Anchor>
    <Abstract>Finish execution of all commands. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a5ce659a130d10112591e800161f5b0ec</Anchor>
    <Abstract>Build and initialize the FBO. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExitFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a4cd57e391d3d71a692c47a6846ac1b6f</Anchor>
    <Abstract>Destroy the FBO. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>acbc764b3d553a4018734b81f5b25ebef</Anchor>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>ac060fbb5960861a5c00b9291cd7e07e6</Anchor>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a25c36c74f33badb21ca893833290b8d0</Anchor>
    <Abstract>Create a new SystemWindow for the given eq::Window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a3b6bb633ed4be1c8561ede26f2a6db35</Anchor>
    <Abstract>Destroy the SystemWindow. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>aa5e2cefc215d894e9ec370bdd18b5f5b</Anchor>
    <Abstract>Send a window error event to the application node. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a51f6af7c8cb42cff68f142751e1b45f3</Anchor>
    <Abstract>Process a stateless event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a6590cd0d52a15d877db81330156d8d41</Anchor>
    <Abstract>Process a (re)size event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a2ec0a58160afd109ae3e25d7d880e797</Anchor>
    <Abstract>Process a mouse event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ad1c42304a0c7890e216a4388a1d2373b</Anchor>
    <Abstract>Process a keyboard event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a16066f67716e151954e94756a4f37263</Anchor>
    <Abstract>Process an axis event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>aa8496fdc41099eacfb97b05bf8d1571d</Anchor>
    <Abstract>Process a button event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ab45ed6161cfacd3ae1b4a5bc7e24ca1c</Anchor>
    <Abstract>Set the window&amp;#39;s pixel viewport wrt its parent pipe. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a5542a45ce1eea5dafe7ec0d6a3589618</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a279a88dc1758222716c552305d5e9e90</Anchor>
    <Abstract>Set the window&amp;#39;s name. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a76359168d7109a57feb35d6d1d0877aa</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a0d782332f49d0ca59471f4ee106db118</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSharedContextWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a274123d370d12ba6acd5576640ea4f9f</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::qt::WindowIF</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::qt::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window_i_f.html</Path>
    <Abstract>The interface defining the minimum functionality for a Qt window. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window_i_f.html</Path>
    <Anchor>aa8f336bc7f0a2e8ce21ec56d088a9907</Anchor>
    <Abstract>Process a stateless event. </Abstract>
    <DeclaredIn>qt/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window_i_f.html</Path>
    <Anchor>ae4b4f08e08c1015e0347c261a76330cb</Anchor>
    <Abstract>Process a (re)size event. </Abstract>
    <DeclaredIn>qt/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window_i_f.html</Path>
    <Anchor>a96b5ab4baa0dd0de3c14186f32783029</Anchor>
    <Abstract>Process a mouse event. </Abstract>
    <DeclaredIn>qt/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window_i_f.html</Path>
    <Anchor>ab73c2b9f7adb29bf01d4bc64d7a34c93</Anchor>
    <Abstract>Process a keyboard event. </Abstract>
    <DeclaredIn>qt/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::qt::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1qt_1_1_window_i_f.html</Path>
    <Anchor>a7df919f8211a0a42d6d812b9f7ae7e79</Anchor>
    <Abstract>Process a stateless event. </Abstract>
    <DeclaredIn>qt/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a6da73c4a415f65d6cad80f3508cc8656</Anchor>
    <Abstract>Construct a new OpenGL window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~GLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a2f9f6dc22c4cb0fea9175984aa72287a</Anchor>
    <Abstract>Destruct a new OpenGL window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a37838c9aca2297d47603b18d1e953c0a</Anchor>
    <Abstract>Bind the FBO and update the current cache. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doneCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a7c1ddf60163144d6ec9fddfb845dada7</Anchor>
    <Abstract>Unbind the FBO and remove context from current cache. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a87a95ddbe5a9993b4f8a36aaf17c22d4</Anchor>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initGLEW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>aac0da2da1f2e83bb9a7a487faec4ff6b</Anchor>
    <Abstract>Initialize the GLEW context for this window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitGLEW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>abda0f097fa517fd9a50ba9faa66c7389</Anchor>
    <Abstract>De-initialize the GLEW context. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a3e5c80aadda75dbb9499f670cca9909f</Anchor>
    <Abstract>Get the GLEW context for this window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queryDrawableConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>adde4544eb0954e33f3fdc7f5d1952fd4</Anchor>
    <Abstract>Set up the drawable config by querying the current context. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>aedeb6d0951040f6c04b84589e2f05a62</Anchor>
    <Abstract>Bind the window&amp;#39;s FBO, if it uses an FBO drawable. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindDrawFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a06dac44630e2182f9ad2370f66311e61</Anchor>
    <Abstract>Bind the window&amp;#39;s draw FBO, used for multisampling. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a232cea38218d73df847b22dc0cd8a788</Anchor>
    <Abstract>Update the window&amp;#39;s FBO from the multisampled FBO. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>af963818ae1cbf8068b271827a0f82b84</Anchor>
    <Abstract>Flush all command buffers. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a3a908be05acd4848f019d03bfb03de5a</Anchor>
    <Abstract>Finish execution of all commands. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a5ce659a130d10112591e800161f5b0ec</Anchor>
    <Abstract>Build and initialize the FBO. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExitFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a4cd57e391d3d71a692c47a6846ac1b6f</Anchor>
    <Abstract>Destroy the FBO. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>acbc764b3d553a4018734b81f5b25ebef</Anchor>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>ac060fbb5960861a5c00b9291cd7e07e6</Anchor>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a25c36c74f33badb21ca893833290b8d0</Anchor>
    <Abstract>Create a new SystemWindow for the given eq::Window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a3b6bb633ed4be1c8561ede26f2a6db35</Anchor>
    <Abstract>Destroy the SystemWindow. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>aa5e2cefc215d894e9ec370bdd18b5f5b</Anchor>
    <Abstract>Send a window error event to the application node. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a51f6af7c8cb42cff68f142751e1b45f3</Anchor>
    <Abstract>Process a stateless event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a6590cd0d52a15d877db81330156d8d41</Anchor>
    <Abstract>Process a (re)size event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a2ec0a58160afd109ae3e25d7d880e797</Anchor>
    <Abstract>Process a mouse event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ad1c42304a0c7890e216a4388a1d2373b</Anchor>
    <Abstract>Process a keyboard event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a16066f67716e151954e94756a4f37263</Anchor>
    <Abstract>Process an axis event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>aa8496fdc41099eacfb97b05bf8d1571d</Anchor>
    <Abstract>Process a button event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ab45ed6161cfacd3ae1b4a5bc7e24ca1c</Anchor>
    <Abstract>Set the window&amp;#39;s pixel viewport wrt its parent pipe. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a5542a45ce1eea5dafe7ec0d6a3589618</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a279a88dc1758222716c552305d5e9e90</Anchor>
    <Abstract>Set the window&amp;#39;s name. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a76359168d7109a57feb35d6d1d0877aa</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a0d782332f49d0ca59471f4ee106db118</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSharedContextWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a274123d370d12ba6acd5576640ea4f9f</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ac4931aa0dcd232b19680622a2e0d5dea</Anchor>
    <Abstract>Initialize this system window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ab0dac0408016b13d3e680706d19f3a14</Anchor>
    <Abstract>De-initialize this system window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a29e00bd15296b876bc63c267c07950a2</Anchor>
    <Abstract>Swap the front and back buffer. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinNVSwapBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a055ea5d409568f2177581a9283c8966e</Anchor>
    <Abstract>Join a NV_swap_group. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::util</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>eq::util</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1util.html</Path>
    <Abstract>Equalizer utility classes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Textures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::util</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1util.html</Path>
    <Anchor>a6fa6e88120bfd17c34f51c3b530e7b01</Anchor>
    <Abstract>A vector of pointers to eq::util::Texture. </Abstract>
    <DeclaredIn>eq/util/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::util</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1util.html</Path>
    <Anchor>a8221edc67948f45b11908ad54d1ae3ea</Anchor>
    <Abstract>Print the texture state to the given output stream. </Abstract>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::util::Accum</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum.html</Path>
    <Abstract>A C++ class to abstract an accumulation buffer. </Abstract>
    <DeclaredIn>accum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Accum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum.html</Path>
    <Anchor>afdb6fdbe5d6e8946493d607cf0d509b8</Anchor>
    <Abstract>Construct a new accumulation buffer. </Abstract>
    <DeclaredIn>accum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Accum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum.html</Path>
    <Anchor>a0373cd0a106f920af3aa41a8cff8d3af</Anchor>
    <Abstract>Destruct the accumulation buffer. </Abstract>
    <DeclaredIn>accum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum.html</Path>
    <Anchor>a180e8341c3cb18f2b8f31ceeba092fdb</Anchor>
    <Abstract>Initialize the accumulation buffer. </Abstract>
    <DeclaredIn>accum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum.html</Path>
    <Anchor>a62110c6caf1f6dc0ef6c26c39059b3b9</Anchor>
    <Abstract>Exit the accum buffer. </Abstract>
    <DeclaredIn>accum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum.html</Path>
    <Anchor>a33ca4d7de8fd188791b932587afb80e1</Anchor>
    <Abstract>Resize the accumulation buffer. </Abstract>
    <DeclaredIn>accum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum.html</Path>
    <Anchor>adf62e3ddf14269004ef9f34c873c25f6</Anchor>
    <DeclaredIn>accum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum.html</Path>
    <Anchor>a68cf95587922f37fc70e9f3300a452c1</Anchor>
    <Abstract>Clear the accumulation buffer. </Abstract>
    <DeclaredIn>accum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum.html</Path>
    <Anchor>a2056971a98672c757362d1012496951d</Anchor>
    <Abstract>Accumulate a frame from the read buffer into the accumulation buffer. </Abstract>
    <DeclaredIn>accum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>display</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum.html</Path>
    <Anchor>aa34a1e854afb731927f6ae6a6e5703a3</Anchor>
    <Abstract>Copy the result of the accumulation to the current draw buffer. </Abstract>
    <DeclaredIn>accum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxSteps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum.html</Path>
    <Anchor>aa73edca85f76857e2f16c40d335427bc</Anchor>
    <Abstract>Get the maximum number of accumulation steps possible. </Abstract>
    <DeclaredIn>accum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumSteps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum.html</Path>
    <Anchor>a7bf8eb33dde5d4afcbb7f7c6720b606f</Anchor>
    <Abstract>Get the current number of accumulation steps done. </Abstract>
    <DeclaredIn>accum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTotalSteps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum.html</Path>
    <Anchor>a90f2edc1f61c4e177c59f60ca2647110</Anchor>
    <Abstract>Set the total number of accumulation steps that will be done. </Abstract>
    <DeclaredIn>accum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalSteps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum.html</Path>
    <Anchor>a5c15bd44fb00115910d4af7023dc2763</Anchor>
    <DeclaredIn>accum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usesFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum.html</Path>
    <Anchor>a4cb9deccca9b1263f86b268088768929</Anchor>
    <Abstract>Test if the accumulation uses the FBO implementation. </Abstract>
    <DeclaredIn>accum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::util::AccumBufferObject</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::util::AccumBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum_buffer_object.html</Path>
    <Abstract>A class to emulate an OpenGL accumulation buffer using an FBO. </Abstract>
    <DeclaredIn>accumBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AccumBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::AccumBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum_buffer_object.html</Path>
    <Anchor>afd9ae6b364d1d311c65905fd42b1c1f6</Anchor>
    <Abstract>Construct a new Accumulation Buffer Object. </Abstract>
    <DeclaredIn>accumBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AccumBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::AccumBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum_buffer_object.html</Path>
    <Anchor>a22aa5b554db70ef8bed13dbea4584c22</Anchor>
    <Abstract>Destruct the Accumulation Buffer Object. </Abstract>
    <DeclaredIn>accumBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::AccumBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum_buffer_object.html</Path>
    <Anchor>a262e2d41e7421df71ba77000d41facf8</Anchor>
    <Abstract>Initialize the Accumulation Buffer Object. </Abstract>
    <DeclaredIn>accumBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::AccumBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum_buffer_object.html</Path>
    <Anchor>adc59255b8d6dea28dae2f95f1375013a</Anchor>
    <Abstract>De-initialize the Accumulation Buffer Object. </Abstract>
    <DeclaredIn>accumBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::AccumBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum_buffer_object.html</Path>
    <Anchor>a00481e35374cab5f7143a067f7664d3a</Anchor>
    <Abstract>Load the current read buffer into the accumulation buffer. </Abstract>
    <DeclaredIn>accumBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::AccumBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum_buffer_object.html</Path>
    <Anchor>ac4bf39616a6cc2dcce543035f395aec4</Anchor>
    <Abstract>Accumulate the current read buffer into the accumulation buffer. </Abstract>
    <DeclaredIn>accumBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>display</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::AccumBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum_buffer_object.html</Path>
    <Anchor>a1683376d99970dae98cacf164531a532</Anchor>
    <Abstract>Transfer accumulation buffer values to the draw buffer. </Abstract>
    <DeclaredIn>accumBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::AccumBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_accum_buffer_object.html</Path>
    <Anchor>ab253c955120fbfbb1d5dc14f9d2f7e68</Anchor>
    <Abstract>Resets the pixel viewport used in display and resizes the accumulation buffer if needed. </Abstract>
    <DeclaredIn>accumBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>ab49659f7ad216c3f4b5c3052cc0fc85a</Anchor>
    <Abstract>Construct a new Frame Buffer Object. </Abstract>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>a90a3513f13d8c69fc191732496e0e697</Anchor>
    <Abstract>Destruct the Frame Buffer Object. </Abstract>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addColorTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>ac969c742e990e9d26b483648915824a8</Anchor>
    <Abstract>Add one color texture to the FBO. </Abstract>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>a2cfaf357fc068bdc771b3a2139f59a13</Anchor>
    <Abstract>Initialize the Frame Buffer Object. </Abstract>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>a5eceeddf25109ff091f9fa88f53d2c90</Anchor>
    <Abstract>De-initialize the Frame Buffer Object. </Abstract>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>a877c0176ba92a39d191ab38dd3ba2e66</Anchor>
    <Abstract>Bind to the Frame Buffer Object. </Abstract>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>aabc834ca34c6d3b9de0d3b49cc72a647</Anchor>
    <Abstract>Unbind any Frame Buffer Object and use the default drawable for the current context. </Abstract>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>ad7568d400c2c49b8e1a898e20b23a853</Anchor>
    <Abstract>Resize the FBO. </Abstract>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>a62ec1d1be94a1c6c6bc9f8c18c9cb79f</Anchor>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>a97583da3daacce333d7991bacde98e61</Anchor>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getColorTextures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>a197c19beadb758eee529e10560644e38</Anchor>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDepthTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>ab057fc7af98a424be25b00d62f51128c</Anchor>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>afed3294f52e951b376a902b364844606</Anchor>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>a3bf50f74673b0681212144ba06f312b7</Anchor>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::util::BitmapFont</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::util::BitmapFont</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_bitmap_font.html</Path>
    <Abstract>A wrapper around AGL, WGL and GLX bitmap fonts. </Abstract>
    <DeclaredIn>bitmapFont.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BitmapFont</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::BitmapFont</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_bitmap_font.html</Path>
    <Anchor>ab5c072f93d97c2f8dfd1273905c608fd</Anchor>
    <Abstract>Construct a new bitmap font. </Abstract>
    <DeclaredIn>bitmapFont.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~BitmapFont</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::BitmapFont</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_bitmap_font.html</Path>
    <Anchor>a22f4a0368d2492fb6c40baa078e13686</Anchor>
    <Abstract>Destruct this bitmap font. </Abstract>
    <DeclaredIn>bitmapFont.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::BitmapFont</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_bitmap_font.html</Path>
    <Anchor>a136b00188a09da9080c68109226b6e22</Anchor>
    <Abstract>Initialize this bitmap font. </Abstract>
    <DeclaredIn>bitmapFont.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::BitmapFont</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_bitmap_font.html</Path>
    <Anchor>a65790dc6e59beb4c983b99dac56e7020</Anchor>
    <Abstract>De-initialize this bitmap font. </Abstract>
    <DeclaredIn>bitmapFont.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>draw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::BitmapFont</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_bitmap_font.html</Path>
    <Anchor>a4d700b260d8f4652fa4edf7b327de0d3</Anchor>
    <Abstract>Draw text on the current raster position. </Abstract>
    <DeclaredIn>bitmapFont.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::util::FrameBufferObject</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Abstract>A C++ class to abstract OpenGL frame buffer objects. </Abstract>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>ab49659f7ad216c3f4b5c3052cc0fc85a</Anchor>
    <Abstract>Construct a new Frame Buffer Object. </Abstract>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>a90a3513f13d8c69fc191732496e0e697</Anchor>
    <Abstract>Destruct the Frame Buffer Object. </Abstract>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addColorTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>ac969c742e990e9d26b483648915824a8</Anchor>
    <Abstract>Add one color texture to the FBO. </Abstract>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>a2cfaf357fc068bdc771b3a2139f59a13</Anchor>
    <Abstract>Initialize the Frame Buffer Object. </Abstract>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>a5eceeddf25109ff091f9fa88f53d2c90</Anchor>
    <Abstract>De-initialize the Frame Buffer Object. </Abstract>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>a877c0176ba92a39d191ab38dd3ba2e66</Anchor>
    <Abstract>Bind to the Frame Buffer Object. </Abstract>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>aabc834ca34c6d3b9de0d3b49cc72a647</Anchor>
    <Abstract>Unbind any Frame Buffer Object and use the default drawable for the current context. </Abstract>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>ad7568d400c2c49b8e1a898e20b23a853</Anchor>
    <Abstract>Resize the FBO. </Abstract>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>a62ec1d1be94a1c6c6bc9f8c18c9cb79f</Anchor>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>a97583da3daacce333d7991bacde98e61</Anchor>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getColorTextures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>a197c19beadb758eee529e10560644e38</Anchor>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDepthTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>ab057fc7af98a424be25b00d62f51128c</Anchor>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>afed3294f52e951b376a902b364844606</Anchor>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_frame_buffer_object.html</Path>
    <Anchor>a3bf50f74673b0681212144ba06f312b7</Anchor>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::util::ObjectManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::util::ObjectManager</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_object_manager.html</Path>
    <Abstract>A facility class to manage OpenGL objects across shared contexts. </Abstract>
    <DeclaredIn>objectManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObjectManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::ObjectManager</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_object_manager.html</Path>
    <Anchor>a7cd3c02fce00795922e175a90d41fe67</Anchor>
    <Abstract>Construct a new object manager. </Abstract>
    <DeclaredIn>objectManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObjectManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::ObjectManager</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_object_manager.html</Path>
    <Anchor>a188a61b45bfa9a15afe83efa51216e72</Anchor>
    <Abstract>Construct a new object manager sharing data with another manager. </Abstract>
    <DeclaredIn>objectManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ObjectManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::ObjectManager</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_object_manager.html</Path>
    <Anchor>af38d6ad63e369974b09e27ddebc1e915</Anchor>
    <Abstract>Destruct this object manager. </Abstract>
    <DeclaredIn>objectManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isShared</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::ObjectManager</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_object_manager.html</Path>
    <Anchor>a37f19dea87c05fca2cb8e172a49a624f</Anchor>
    <DeclaredIn>objectManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::ObjectManager</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_object_manager.html</Path>
    <Anchor>ac02aa6683ec2ccb36cdaba9da762939a</Anchor>
    <Abstract>Reset the object manager. </Abstract>
    <DeclaredIn>objectManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::ObjectManager</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_object_manager.html</Path>
    <Anchor>ae8c36475f2aedf634006395783a1c267</Anchor>
    <Abstract>Delete all managed objects and associated GL objects. </Abstract>
    <DeclaredIn>objectManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::util::PixelBufferObject</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_pixel_buffer_object.html</Path>
    <Abstract>A C++ class to abstract OpenGL pixel buffer objects. </Abstract>
    <DeclaredIn>pixelBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_pixel_buffer_object.html</Path>
    <Anchor>a8e935b4a077014ad0201cccbb479c20e</Anchor>
    <Abstract>Construct a new pixel buffer object. </Abstract>
    <DeclaredIn>pixelBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PixelBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_pixel_buffer_object.html</Path>
    <Anchor>ab99c4ad40fcfde5f45b8d4a6028aed49</Anchor>
    <Abstract>Destruct the pixel buffer object. </Abstract>
    <DeclaredIn>pixelBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_pixel_buffer_object.html</Path>
    <Anchor>a33cebdbe08cdd902f24d1677cb3d757a</Anchor>
    <Abstract>Initialize the pixel buffer object. </Abstract>
    <DeclaredIn>pixelBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_pixel_buffer_object.html</Path>
    <Anchor>ab72ac9d8cb4d671a77ccbd4a1c726fc4</Anchor>
    <Abstract>Unbind and de-initialize the pixel buffer object. </Abstract>
    <DeclaredIn>pixelBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_pixel_buffer_object.html</Path>
    <Anchor>ae4beae58a9f43506953f59b083f264f6</Anchor>
    <Abstract>Bind the PBO and map its data for reading. </Abstract>
    <DeclaredIn>pixelBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapWrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_pixel_buffer_object.html</Path>
    <Anchor>af16410e63a05d4c22cec65d310493266</Anchor>
    <Abstract>Bind the PBO and map its data for writing. </Abstract>
    <DeclaredIn>pixelBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_pixel_buffer_object.html</Path>
    <Anchor>a89de3be88002da963a63c40af9db5ec6</Anchor>
    <Abstract>Unmap and unbind the PBO. </Abstract>
    <DeclaredIn>pixelBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_pixel_buffer_object.html</Path>
    <Anchor>a2582a20490789f89e4a65cb5c630e5e1</Anchor>
    <Abstract>Bind the PBO. </Abstract>
    <DeclaredIn>pixelBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_pixel_buffer_object.html</Path>
    <Anchor>a1fb93bff528176c67eaf0c876f6f36aa</Anchor>
    <Abstract>Unbind the PBO. </Abstract>
    <DeclaredIn>pixelBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_pixel_buffer_object.html</Path>
    <Anchor>acbc0b232a41754527e7e96c182b6b5a4</Anchor>
    <DeclaredIn>pixelBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInitialized</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_pixel_buffer_object.html</Path>
    <Anchor>ad2f961f9f5aacc2e74af83e5edb3a3c0</Anchor>
    <DeclaredIn>pixelBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isThreadSafe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_pixel_buffer_object.html</Path>
    <Anchor>a442f54c188b4cfeda433184db242449a</Anchor>
    <DeclaredIn>pixelBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_pixel_buffer_object.html</Path>
    <Anchor>aa44661e15187cf34e1850aa4ac48fd14</Anchor>
    <DeclaredIn>pixelBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::util::Texture</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Abstract>A wrapper around OpenGL textures. </Abstract>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Texture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Anchor>a9555af8906e408f8a8c7286b4a170036</Anchor>
    <Abstract>Construct a new Texture. </Abstract>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Texture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Anchor>ad7ca81ca7d13aa5765b958d7d83c1245</Anchor>
    <Abstract>Destruct the texture. </Abstract>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Anchor>a421c0fd3cd9d95379a660bb50e25002e</Anchor>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInternalFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Anchor>a97cfef7b37b1c1f8db6837a3f14ba99d</Anchor>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExternalFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Anchor>afba1ad6bfceea4422185aec7c8a4641a</Anchor>
    <Abstract>Set the external data format and type. </Abstract>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Anchor>a8f1fb0b516371b814f44cb583a6dd680</Anchor>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Anchor>ae44ec2a3852873046319002bf94f87ae</Anchor>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Anchor>adc9d861b72b1447642d69afe80560dc1</Anchor>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Anchor>a67015ed3f87c8f7cf6e9104598517c41</Anchor>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Anchor>afe1d030590f4f310c58d0312a6a9397b</Anchor>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Anchor>ae56d26626d8211817029d34e4462a3f3</Anchor>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Anchor>a9b237bcb780b201997c85c7c386cc5a5</Anchor>
    <Abstract>Initialize an OpenGL texture. </Abstract>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Anchor>ae02ac1d5d5ab97761de268db60121391</Anchor>
    <Abstract>Clear the texture, including deleting the GL texture name. </Abstract>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFromFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Anchor>aa3bb3588666cfebca69cdd7d1aedef44</Anchor>
    <Abstract>Copy the specified area from the current read buffer to the texture at 0,0. </Abstract>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upload</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Anchor>a2645973e66856a8a2a5f551cf5294a20</Anchor>
    <Abstract>Copy the specified buffer to the texture at 0,0. </Abstract>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>download</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Anchor>a3a7db244703d9fbec085d7ec2d0d0b3a</Anchor>
    <Abstract>Copy the texture data from the GPU to the given memory address. </Abstract>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Anchor>af703d0cc44ae09b57ef2714ec1c941d9</Anchor>
    <Abstract>Bind the texture. </Abstract>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindToFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Anchor>a85c5af225f9a7590823a757858a9ac92</Anchor>
    <Abstract>Create and bind a texture to the current FBO. </Abstract>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Anchor>a589d7d9f8b0ee0cccedc2c958d6e51e6</Anchor>
    <Abstract>Resize the texture. </Abstract>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeRGB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Anchor>ac098cbbdd36025eca3689c27dd9f2b66</Anchor>
    <Abstract>Write the texture data as an rgb image file. </Abstract>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flushNoDelete</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Anchor>a45e130dc993818c03438f35df29996f1</Anchor>
    <Abstract>Flush the texture without deleting the GL texture name. </Abstract>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGLData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1_texture.html</Path>
    <Anchor>a75567e319b8b3a883d0f568029d33982</Anchor>
    <Abstract>Use an OpenGL texture created externally. </Abstract>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::wgl</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>eq::wgl</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1wgl.html</Path>
    <Abstract>The system abstraction layer for Windows OpenGL. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::wgl::EventHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::wgl::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_event_handler.html</Path>
    <Abstract>The event handler for WGL. </Abstract>
    <DeclaredIn>eventHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_event_handler.html</Path>
    <Anchor>a55277ceb979390c5794f3ef114c9e920</Anchor>
    <Abstract>Construct a new WGL event handler for the window. </Abstract>
    <DeclaredIn>wgl/eventHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~EventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_event_handler.html</Path>
    <Anchor>a91cdc51287c7f0a76d5ce6f24fa6501f</Anchor>
    <Abstract>Destruct the WGL event handler. </Abstract>
    <DeclaredIn>wgl/eventHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initMagellan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::wgl::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_event_handler.html</Path>
    <Anchor>af11bd29c175e04f8394fe0ff0a8b9223</Anchor>
    <Abstract>Initialize space mouse event handling for this process. </Abstract>
    <DeclaredIn>wgl/eventHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitMagellan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::wgl::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_event_handler.html</Path>
    <Anchor>ad1b96397f37ac6d33c2271506efba41a</Anchor>
    <Abstract>De-initialize space mouse event handling for this process. </Abstract>
    <DeclaredIn>wgl/eventHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_event_handler.html</Path>
    <Anchor>a0100480171a68e5bd914f81caa2abe6c</Anchor>
    <Abstract>Construct a new event handler. </Abstract>
    <DeclaredIn>eventHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::wgl::MessagePump</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::wgl::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_message_pump.html</Path>
    <Abstract>Processes OS messages on Win32 systems. </Abstract>
    <DeclaredIn>messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_message_pump.html</Path>
    <Anchor>a76bced1a1405d0afbe146b8421e10b48</Anchor>
    <Abstract>Construct a new WGL message pump. </Abstract>
    <DeclaredIn>wgl/messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_message_pump.html</Path>
    <Anchor>aa49e566b4bbdc10e0918de70dd670ba3</Anchor>
    <Abstract>Destruct this message pump. </Abstract>
    <DeclaredIn>wgl/messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postWakeup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_message_pump.html</Path>
    <Anchor>a6bda6a20ef2f618996c3bab400af740a</Anchor>
    <Abstract>Unblock dispatchOne(). </Abstract>
    <DeclaredIn>wgl/messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatchAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_message_pump.html</Path>
    <Anchor>a58aaa7e1fcc03b7d05c7b0c1d750e3b7</Anchor>
    <Abstract>Dispatch all pending system events, does not block. </Abstract>
    <DeclaredIn>wgl/messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatchOne</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_message_pump.html</Path>
    <Anchor>aa911915f34f25db09ff7d2ccc5ec7292</Anchor>
    <Abstract>Dispatch at least one pending system event, blocks potentially. </Abstract>
    <DeclaredIn>wgl/messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_message_pump.html</Path>
    <Anchor>a398cf554cf2a9d1a133348e403882dce</Anchor>
    <Abstract>Construct a new message pump. </Abstract>
    <DeclaredIn>messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>register_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_message_pump.html</Path>
    <Anchor>a457409c0585fd7123d253d9b395c63cc</Anchor>
    <Abstract>Register a new Deflect connection for event dispatch. </Abstract>
    <DeclaredIn>messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deregister</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_message_pump.html</Path>
    <Anchor>a38d1d96c00cb76b48f26a92389d50f85</Anchor>
    <Abstract>Deregister a Deflect connection from event dispatch. </Abstract>
    <DeclaredIn>messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::wgl::Pipe</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::wgl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_pipe.html</Path>
    <Abstract>Equalizer default implementation of a WGL GPU. </Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_pipe.html</Path>
    <Anchor>aa37ebd5ec3168f5cab84f83230c47620</Anchor>
    <Abstract>Construct a new WGL system pipe. </Abstract>
    <DeclaredIn>wgl/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_pipe.html</Path>
    <Anchor>a87b6ae8c26721b2caee41e7608b8801f</Anchor>
    <Abstract>Destruct this WGL system pipe. </Abstract>
    <DeclaredIn>wgl/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWGLAffinityDC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_pipe.html</Path>
    <Anchor>a66636acfa0433e982d372f8b8a5b2d6d</Anchor>
    <Abstract>Create a device context bound only to the display device of this pipe. </Abstract>
    <DeclaredIn>wgl/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWGLDisplayDC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_pipe.html</Path>
    <Anchor>aee86f788781a8abe1eb95198c6b13141</Anchor>
    <Abstract>Create a device context on the display device of this pipe. </Abstract>
    <DeclaredIn>wgl/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wglewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_pipe.html</Path>
    <Anchor>a46cc7d6721bef2cf00d77b745de97b27</Anchor>
    <DeclaredIn>wgl/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_pipe.html</Path>
    <Anchor>a0cdeaf71ef8c33a4ba3e5f63819f156f</Anchor>
    <Abstract>Initialize this pipe for the WGL window system. </Abstract>
    <DeclaredIn>wgl/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_pipe.html</Path>
    <Anchor>a76bd7d4c1d8014e8a88dc1620fef438d</Anchor>
    <Abstract>Deinitialize this pipe for the WGL window system. </Abstract>
    <DeclaredIn>wgl/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_pipe.html</Path>
    <Anchor>a30a85124f55b53b097a4473fa8dce23a</Anchor>
    <Abstract>Create a new SstemPipe for the given eq::Pipe. </Abstract>
    <DeclaredIn>systemPipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SystemPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_pipe.html</Path>
    <Anchor>a6cf63eb5a1250df9a174061471c3751e</Anchor>
    <Abstract>Destroy the SystemPipe. </Abstract>
    <DeclaredIn>systemPipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_pipe.html</Path>
    <Anchor>ac924f3e52d2ce6af3b843cb92a964720</Anchor>
    <DeclaredIn>systemPipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_pipe.html</Path>
    <Anchor>a7728a9d81f1794808c49d4fd360c38c8</Anchor>
    <DeclaredIn>systemPipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxOpenGLVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_pipe.html</Path>
    <Anchor>a66d8591964929773b8f10d20c1e35447</Anchor>
    <DeclaredIn>systemPipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_pipe.html</Path>
    <Anchor>a74cbb1df55f3a371bb87c60bf0513ae5</Anchor>
    <Abstract>Initialize this pipe for OpenGL. </Abstract>
    <DeclaredIn>wgl/pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_pipe.html</Path>
    <Anchor>ae71bcebd6ad62bece6a3d9f6d8ec6bfb</Anchor>
    <Abstract>Send a pipe error event to the application node. </Abstract>
    <DeclaredIn>systemPipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::wgl::Window</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Abstract>Equalizer default implementation of a WGL window. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>a36ffc1ceb933a2cd9a9d4375ad6172e2</Anchor>
    <Abstract>Create a new WGL window for the given eq::Window. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>aefd3e980f9326254a46f27855244acfc</Anchor>
    <Abstract>Destruct the WGL window. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWGLContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>a5dd0d8160c2090fb0a2836b12739f1bd</Anchor>
    <Abstract>Set the WGL rendering context for this window. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWGLWindowHandle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>a686bdd3859fb55e80750672ec404956b</Anchor>
    <Abstract>Set the Win32 window handle for this window. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWGLPBufferHandle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>adb12a01c592f079e31537384dd459b8a</Anchor>
    <Abstract>Set the Win32 off screen pbuffer handle for this window. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLWindowHandle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>acf1a85e22c53ef10b892203925d77658</Anchor>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLPBufferHandle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>ab4309017f8a6d331848c2507a616760d</Anchor>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLDC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>ae24d26e7f365169843e34b6209d919c4</Anchor>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>acdb64eb46adecd2c5f609582a7e2f078</Anchor>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLEventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>aed7f3a00cdfee03ce7b9ec98bcbab15c</Anchor>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>afa3935cf7251226da5f099cadeb71886</Anchor>
    <Abstract>Initialize this window for the WGL window system. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>a9431c6ac3da85d4f229617608a980754</Anchor>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWGLAffinityDC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>a48e405376f5ac5573a5884a69d00b292</Anchor>
    <Abstract>Create, if needed, an affinity device context for this window. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitWGLAffinityDC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>a67e479ea26faa2f58e0c10d283c58391</Anchor>
    <Abstract>Destroy the affinity device context. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLAffinityDC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>a1c372c09ecc4e58e6fb562e5e2f51ad0</Anchor>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWGLDisplayDC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>a74829863a1da1edc138109571739104f</Anchor>
    <Abstract>Create a device context for the display device of the window. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chooseWGLPixelFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>a1cae05e09c79dbfe99e3296b3762805e</Anchor>
    <Abstract>Choose a pixel format based on the window&amp;#39;s attributes. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitWGLDrawable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>ada94ef0df4679848a75a08f31f3993c3</Anchor>
    <Abstract>Initialize the window&amp;#39;s drawable (pbuffer or window) and bind the WGL context. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitWGLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>afa25257251aae335467acc1dc7c47ce8</Anchor>
    <Abstract>Initialize the window with an on-screen Win32 window. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitWGLPBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>a4ea76297ad77e0d510e889dbadb97134</Anchor>
    <Abstract>Initialize the window with an off-screen WGL PBuffer. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitWGLFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>a7cfad1e6f079e47dae35bdc150f51a86</Anchor>
    <Abstract>Initialize the window for an off-screen FBO. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWGLContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>a1e8bcad2b38c167c76ec5cf79923b636</Anchor>
    <Abstract>Create a WGL context. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyWGLContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>accb0dde5e1eb8694a60439d0622fd7b9</Anchor>
    <Abstract>Destroy the given WGL context. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initEventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>a04717b41b24aac6d89772846a0b7769e</Anchor>
    <Abstract>Set up an WGLEventHandler, called by setWGLWindowHandle(). </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitEventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>a89a3ed89cba0c79d744a3faf0fd5b2d7</Anchor>
    <Abstract>Destroy the WGLEventHandler, called by setWGLWindowHandle(). </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>a7763bb8e6d6f4fa8fa9904ce046deab7</Anchor>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doneCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>a84906f92db230d467ce471d639f17376</Anchor>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>a46d490837642ca85bb818b5d415a8054</Anchor>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinNVSwapBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>aa2a18c645dc59cecda56a87134451a79</Anchor>
    <Abstract>Join the WGL_NV_swap_group. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>leaveNVSwapBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>a6b09fcb86d0fa5763b9ecb423cf73c00</Anchor>
    <Abstract>Unbind a WGL_NV_swap_barrier. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>adf3ffcd43b318bfb11315876c8874462</Anchor>
    <Abstract>Process a mouse event. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>a405653a9a14eb97f9fe03c6b6a4ffe9b</Anchor>
    <Abstract>Process a stateless event. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WindowIF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window_i_f.html</Path>
    <Anchor>a2af0b7b42aeaefe19a2fa646f6d2734d</Anchor>
    <Abstract>Construct a new WGL window for the given eq::Window. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WindowIF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window_i_f.html</Path>
    <Anchor>a3acbac8c41ee6c64c9cbebb6dfc08f92</Anchor>
    <Abstract>Destruct the WGL window. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window_i_f.html</Path>
    <Anchor>acef7676ceb2fa3cffb5a990bc94d4aa3</Anchor>
    <Abstract>Process a (re)size event. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window_i_f.html</Path>
    <Anchor>a3b3913e201766460a0990714d811392d</Anchor>
    <Abstract>Process a keyboard event. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window_i_f.html</Path>
    <Anchor>a7f675e280f8aeecd9df29f126d748ff8</Anchor>
    <Abstract>Process an axis event. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window_i_f.html</Path>
    <Anchor>a94c5ecb827ed416be8def1176dcf93ca</Anchor>
    <Abstract>Process a button event. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a6da73c4a415f65d6cad80f3508cc8656</Anchor>
    <Abstract>Construct a new OpenGL window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~GLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a2f9f6dc22c4cb0fea9175984aa72287a</Anchor>
    <Abstract>Destruct a new OpenGL window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a87a95ddbe5a9993b4f8a36aaf17c22d4</Anchor>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initGLEW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>aac0da2da1f2e83bb9a7a487faec4ff6b</Anchor>
    <Abstract>Initialize the GLEW context for this window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitGLEW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>abda0f097fa517fd9a50ba9faa66c7389</Anchor>
    <Abstract>De-initialize the GLEW context. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a3e5c80aadda75dbb9499f670cca9909f</Anchor>
    <Abstract>Get the GLEW context for this window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queryDrawableConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>adde4544eb0954e33f3fdc7f5d1952fd4</Anchor>
    <Abstract>Set up the drawable config by querying the current context. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>aedeb6d0951040f6c04b84589e2f05a62</Anchor>
    <Abstract>Bind the window&amp;#39;s FBO, if it uses an FBO drawable. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindDrawFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a06dac44630e2182f9ad2370f66311e61</Anchor>
    <Abstract>Bind the window&amp;#39;s draw FBO, used for multisampling. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a232cea38218d73df847b22dc0cd8a788</Anchor>
    <Abstract>Update the window&amp;#39;s FBO from the multisampled FBO. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>af963818ae1cbf8068b271827a0f82b84</Anchor>
    <Abstract>Flush all command buffers. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a3a908be05acd4848f019d03bfb03de5a</Anchor>
    <Abstract>Finish execution of all commands. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a5ce659a130d10112591e800161f5b0ec</Anchor>
    <Abstract>Build and initialize the FBO. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExitFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a4cd57e391d3d71a692c47a6846ac1b6f</Anchor>
    <Abstract>Destroy the FBO. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>acbc764b3d553a4018734b81f5b25ebef</Anchor>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>ac060fbb5960861a5c00b9291cd7e07e6</Anchor>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a25c36c74f33badb21ca893833290b8d0</Anchor>
    <Abstract>Create a new SystemWindow for the given eq::Window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a3b6bb633ed4be1c8561ede26f2a6db35</Anchor>
    <Abstract>Destroy the SystemWindow. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>aa5e2cefc215d894e9ec370bdd18b5f5b</Anchor>
    <Abstract>Send a window error event to the application node. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a51f6af7c8cb42cff68f142751e1b45f3</Anchor>
    <Abstract>Process a stateless event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a6590cd0d52a15d877db81330156d8d41</Anchor>
    <Abstract>Process a (re)size event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a2ec0a58160afd109ae3e25d7d880e797</Anchor>
    <Abstract>Process a mouse event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ad1c42304a0c7890e216a4388a1d2373b</Anchor>
    <Abstract>Process a keyboard event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a16066f67716e151954e94756a4f37263</Anchor>
    <Abstract>Process an axis event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>aa8496fdc41099eacfb97b05bf8d1571d</Anchor>
    <Abstract>Process a button event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ab45ed6161cfacd3ae1b4a5bc7e24ca1c</Anchor>
    <Abstract>Set the window&amp;#39;s pixel viewport wrt its parent pipe. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a5542a45ce1eea5dafe7ec0d6a3589618</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a279a88dc1758222716c552305d5e9e90</Anchor>
    <Abstract>Set the window&amp;#39;s name. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a76359168d7109a57feb35d6d1d0877aa</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a0d782332f49d0ca59471f4ee106db118</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSharedContextWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a274123d370d12ba6acd5576640ea4f9f</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wglewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window.html</Path>
    <Anchor>a77fbcb8851dff727763d445bf9b99621</Anchor>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::wgl::WindowIF</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window_i_f.html</Path>
    <Abstract>The interface defining the minimum functionality for a WGL window. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WindowIF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window_i_f.html</Path>
    <Anchor>a2af0b7b42aeaefe19a2fa646f6d2734d</Anchor>
    <Abstract>Construct a new WGL window for the given eq::Window. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WindowIF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window_i_f.html</Path>
    <Anchor>a3acbac8c41ee6c64c9cbebb6dfc08f92</Anchor>
    <Abstract>Destruct the WGL window. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window_i_f.html</Path>
    <Anchor>a2a5f33d1ddcb8c41750710b822dafc83</Anchor>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLWindowHandle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window_i_f.html</Path>
    <Anchor>af0eae7a39da66da94876500a2c2b1597</Anchor>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLPBufferHandle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window_i_f.html</Path>
    <Anchor>a0f74f6f3a61ee0e5a2aae0b5ca065e51</Anchor>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLDC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window_i_f.html</Path>
    <Anchor>ae480279b0f9ba881f2df0bafe2e25586</Anchor>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLAffinityDC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window_i_f.html</Path>
    <Anchor>ae508312e8b85e721c1313e7aff5f5f1d</Anchor>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window_i_f.html</Path>
    <Anchor>acef7676ceb2fa3cffb5a990bc94d4aa3</Anchor>
    <Abstract>Process a (re)size event. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window_i_f.html</Path>
    <Anchor>af688fe128cb973ce090a61b922b9746c</Anchor>
    <Abstract>Process a mouse event. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window_i_f.html</Path>
    <Anchor>a3b3913e201766460a0990714d811392d</Anchor>
    <Abstract>Process a keyboard event. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window_i_f.html</Path>
    <Anchor>a7f675e280f8aeecd9df29f126d748ff8</Anchor>
    <Abstract>Process an axis event. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window_i_f.html</Path>
    <Anchor>a94c5ecb827ed416be8def1176dcf93ca</Anchor>
    <Abstract>Process a button event. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1_window_i_f.html</Path>
    <Anchor>ad4349b3f7f98d0096231a1368dd67d34</Anchor>
    <Abstract>Process a stateless event. </Abstract>
    <DeclaredIn>wgl/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a6da73c4a415f65d6cad80f3508cc8656</Anchor>
    <Abstract>Construct a new OpenGL window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~GLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a2f9f6dc22c4cb0fea9175984aa72287a</Anchor>
    <Abstract>Destruct a new OpenGL window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a37838c9aca2297d47603b18d1e953c0a</Anchor>
    <Abstract>Bind the FBO and update the current cache. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doneCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a7c1ddf60163144d6ec9fddfb845dada7</Anchor>
    <Abstract>Unbind the FBO and remove context from current cache. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a87a95ddbe5a9993b4f8a36aaf17c22d4</Anchor>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initGLEW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>aac0da2da1f2e83bb9a7a487faec4ff6b</Anchor>
    <Abstract>Initialize the GLEW context for this window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitGLEW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>abda0f097fa517fd9a50ba9faa66c7389</Anchor>
    <Abstract>De-initialize the GLEW context. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a3e5c80aadda75dbb9499f670cca9909f</Anchor>
    <Abstract>Get the GLEW context for this window. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queryDrawableConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>adde4544eb0954e33f3fdc7f5d1952fd4</Anchor>
    <Abstract>Set up the drawable config by querying the current context. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>aedeb6d0951040f6c04b84589e2f05a62</Anchor>
    <Abstract>Bind the window&amp;#39;s FBO, if it uses an FBO drawable. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindDrawFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a06dac44630e2182f9ad2370f66311e61</Anchor>
    <Abstract>Bind the window&amp;#39;s draw FBO, used for multisampling. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a232cea38218d73df847b22dc0cd8a788</Anchor>
    <Abstract>Update the window&amp;#39;s FBO from the multisampled FBO. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>af963818ae1cbf8068b271827a0f82b84</Anchor>
    <Abstract>Flush all command buffers. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a3a908be05acd4848f019d03bfb03de5a</Anchor>
    <Abstract>Finish execution of all commands. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a5ce659a130d10112591e800161f5b0ec</Anchor>
    <Abstract>Build and initialize the FBO. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExitFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>a4cd57e391d3d71a692c47a6846ac1b6f</Anchor>
    <Abstract>Destroy the FBO. </Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>acbc764b3d553a4018734b81f5b25ebef</Anchor>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_g_l_window.html</Path>
    <Anchor>ac060fbb5960861a5c00b9291cd7e07e6</Anchor>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a25c36c74f33badb21ca893833290b8d0</Anchor>
    <Abstract>Create a new SystemWindow for the given eq::Window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a3b6bb633ed4be1c8561ede26f2a6db35</Anchor>
    <Abstract>Destroy the SystemWindow. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>aa5e2cefc215d894e9ec370bdd18b5f5b</Anchor>
    <Abstract>Send a window error event to the application node. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a51f6af7c8cb42cff68f142751e1b45f3</Anchor>
    <Abstract>Process a stateless event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a6590cd0d52a15d877db81330156d8d41</Anchor>
    <Abstract>Process a (re)size event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a2ec0a58160afd109ae3e25d7d880e797</Anchor>
    <Abstract>Process a mouse event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ad1c42304a0c7890e216a4388a1d2373b</Anchor>
    <Abstract>Process a keyboard event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a16066f67716e151954e94756a4f37263</Anchor>
    <Abstract>Process an axis event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>aa8496fdc41099eacfb97b05bf8d1571d</Anchor>
    <Abstract>Process a button event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ab45ed6161cfacd3ae1b4a5bc7e24ca1c</Anchor>
    <Abstract>Set the window&amp;#39;s pixel viewport wrt its parent pipe. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a5542a45ce1eea5dafe7ec0d6a3589618</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a279a88dc1758222716c552305d5e9e90</Anchor>
    <Abstract>Set the window&amp;#39;s name. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a76359168d7109a57feb35d6d1d0877aa</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a0d782332f49d0ca59471f4ee106db118</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSharedContextWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a274123d370d12ba6acd5576640ea4f9f</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ac4931aa0dcd232b19680622a2e0d5dea</Anchor>
    <Abstract>Initialize this system window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ab0dac0408016b13d3e680706d19f3a14</Anchor>
    <Abstract>De-initialize this system window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a29e00bd15296b876bc63c267c07950a2</Anchor>
    <Abstract>Swap the front and back buffer. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinNVSwapBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a055ea5d409568f2177581a9283c8966e</Anchor>
    <Abstract>Join a NV_swap_group. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::x11</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>eq::x11</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1x11.html</Path>
    <Abstract>An abstraction layer for CPU-based rendering using X11. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::x11::Window</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::x11::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1x11_1_1_window.html</Path>
    <Abstract>A system window for CPU rendering on X11. </Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::x11::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1x11_1_1_window.html</Path>
    <Anchor>a96e2971a2b0163e744ce537225758e76</Anchor>
    <Abstract>Initialize this system window. </Abstract>
    <DeclaredIn>x11/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::x11::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1x11_1_1_window.html</Path>
    <Anchor>a2cf7f11c9a19c22f337291303f840e7b</Anchor>
    <Abstract>De-initialize this system window. </Abstract>
    <DeclaredIn>x11/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::x11::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1x11_1_1_window.html</Path>
    <Anchor>a62d85fcc0198f917b98f67e62a0a8867</Anchor>
    <Abstract>Make the system window rendering context and drawable current. </Abstract>
    <DeclaredIn>x11/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doneCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::x11::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1x11_1_1_window.html</Path>
    <Anchor>aa005124253d297dae3a30cc35a941150</Anchor>
    <Abstract>This results in no context being current in the current thread. </Abstract>
    <DeclaredIn>x11/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::x11::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1x11_1_1_window.html</Path>
    <Anchor>a2ff213a1f7fa048a5c1ea91f5c8979a7</Anchor>
    <Abstract>Bind the window&amp;#39;s FBO, if it uses an FBO drawable. </Abstract>
    <DeclaredIn>x11/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindDrawFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::x11::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1x11_1_1_window.html</Path>
    <Anchor>aafb8fa88dbfaca358a6744b9d07e0e47</Anchor>
    <Abstract>Bind the window&amp;#39;s draw FBO, used for multisampling. </Abstract>
    <DeclaredIn>x11/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::x11::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1x11_1_1_window.html</Path>
    <Anchor>aff5da0d64cea5cd92f9ed1a8e8fc403b</Anchor>
    <Abstract>Update the window&amp;#39;s FBO from the multisampled FBO. </Abstract>
    <DeclaredIn>x11/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::x11::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1x11_1_1_window.html</Path>
    <Anchor>ae1f09e6a59b827b19cbc708731c55eca</Anchor>
    <Abstract>Swap the front and back buffer. </Abstract>
    <DeclaredIn>x11/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinNVSwapBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::x11::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1x11_1_1_window.html</Path>
    <Anchor>a7b262b294de84bdbf3bdc8c64839b3de</Anchor>
    <Abstract>Join a NV_swap_group. </Abstract>
    <DeclaredIn>x11/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queryDrawableConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::x11::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1x11_1_1_window.html</Path>
    <Anchor>a074ce48d9c7e80823f3525bd29e6e74c</Anchor>
    <Abstract>Set up the given drawable based on the current context. </Abstract>
    <DeclaredIn>x11/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::x11::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1x11_1_1_window.html</Path>
    <Anchor>acc18fa82b571edcdc392ab20f362bee2</Anchor>
    <Abstract>Flush all command buffers. </Abstract>
    <DeclaredIn>x11/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::x11::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1x11_1_1_window.html</Path>
    <Anchor>a812459f10cdd272b50f5578ef040c5fe</Anchor>
    <Abstract>Finish execution of all commands. </Abstract>
    <DeclaredIn>x11/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getXDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::x11::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1x11_1_1_window.html</Path>
    <Anchor>af4be7dd8df4de6e07922d11dba60c755</Anchor>
    <DeclaredIn>x11/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getXDrawable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::x11::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1x11_1_1_window.html</Path>
    <Anchor>a60571c27bedc4b38a6983ed0de2e5ad7</Anchor>
    <DeclaredIn>x11/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a25c36c74f33badb21ca893833290b8d0</Anchor>
    <Abstract>Create a new SystemWindow for the given eq::Window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a3b6bb633ed4be1c8561ede26f2a6db35</Anchor>
    <Abstract>Destroy the SystemWindow. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a959906fe6a57bcdbe67656f70bace67f</Anchor>
    <Abstract>Get the GLEW context for this window. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>aa5e2cefc215d894e9ec370bdd18b5f5b</Anchor>
    <Abstract>Send a window error event to the application node. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a51f6af7c8cb42cff68f142751e1b45f3</Anchor>
    <Abstract>Process a stateless event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a6590cd0d52a15d877db81330156d8d41</Anchor>
    <Abstract>Process a (re)size event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a2ec0a58160afd109ae3e25d7d880e797</Anchor>
    <Abstract>Process a mouse event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ad1c42304a0c7890e216a4388a1d2373b</Anchor>
    <Abstract>Process a keyboard event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a16066f67716e151954e94756a4f37263</Anchor>
    <Abstract>Process an axis event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>aa8496fdc41099eacfb97b05bf8d1571d</Anchor>
    <Abstract>Process a button event. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ab45ed6161cfacd3ae1b4a5bc7e24ca1c</Anchor>
    <Abstract>Set the window&amp;#39;s pixel viewport wrt its parent pipe. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a5542a45ce1eea5dafe7ec0d6a3589618</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a279a88dc1758222716c552305d5e9e90</Anchor>
    <Abstract>Set the window&amp;#39;s name. </Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a76359168d7109a57feb35d6d1d0877aa</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a0d782332f49d0ca59471f4ee106db118</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSharedContextWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a274123d370d12ba6acd5576640ea4f9f</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>ae8d031bd946e14d7bbc9445d4e3b06d9</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_system_window.html</Path>
    <Anchor>a3c9cea8825e239899ccd453b8f1299ea</Anchor>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setXDrawable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::x11::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1x11_1_1_window.html</Path>
    <Anchor>a7afba3868fd4f52e91b9f20dc0805634</Anchor>
    <Abstract>Set the X11 drawable ID for this window. </Abstract>
    <DeclaredIn>x11/window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqfabric::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqfabric::Version</Scope>
    </TokenIdentifier>
    <Path>classeqfabric_1_1_version.html</Path>
    <Abstract>Information about the current EqualizerFabric version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eqfabric::Version</Scope>
    </TokenIdentifier>
    <Path>classeqfabric_1_1_version.html</Path>
    <Anchor>a959d1572b05b215a396339e77f875e1e</Anchor>
    <DeclaredIn>eq/fabric/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eqfabric::Version</Scope>
    </TokenIdentifier>
    <Path>classeqfabric_1_1_version.html</Path>
    <Anchor>ab03661e66ccd1e32fdc26b26ab71207e</Anchor>
    <DeclaredIn>eq/fabric/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eqfabric::Version</Scope>
    </TokenIdentifier>
    <Path>classeqfabric_1_1_version.html</Path>
    <Anchor>ac2fb7329699f404eacdd4765dfc035c8</Anchor>
    <DeclaredIn>eq/fabric/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eqfabric::Version</Scope>
    </TokenIdentifier>
    <Path>classeqfabric_1_1_version.html</Path>
    <Anchor>a83f27e47b9bf85ba7b878af053df84b0</Anchor>
    <DeclaredIn>eq/fabric/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eqfabric::Version</Scope>
    </TokenIdentifier>
    <Path>classeqfabric_1_1_version.html</Path>
    <Anchor>a3de5c7d9c45cf9b749cc6ea641923f7b</Anchor>
    <DeclaredIn>eq/fabric/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eqfabric::Version</Scope>
    </TokenIdentifier>
    <Path>classeqfabric_1_1_version.html</Path>
    <Anchor>aa155e5d5dd4b659fa9d60310c7d5bad4</Anchor>
    <DeclaredIn>eq/fabric/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eqfabric::Version</Scope>
    </TokenIdentifier>
    <Path>classeqfabric_1_1_version.html</Path>
    <Anchor>afb4187ef2e40d95f3f9d2ed371264bf6</Anchor>
    <DeclaredIn>eq/fabric/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eqfabric::Version</Scope>
    </TokenIdentifier>
    <Path>classeqfabric_1_1_version.html</Path>
    <Anchor>a7a04c3928233045e23114d239f39610b</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>eq/fabric/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eqfabric::Version</Scope>
    </TokenIdentifier>
    <Path>classeqfabric_1_1_version.html</Path>
    <Anchor>aa5ab31d26f886bbba80d997e226edc92</Anchor>
    <DeclaredIn>eq/fabric/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eqfabric::Version</Scope>
    </TokenIdentifier>
    <Path>classeqfabric_1_1_version.html</Path>
    <Anchor>a6d4d431cd0ef3d4823ca0578d703d377</Anchor>
    <DeclaredIn>eq/fabric/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqserver::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqserver::Version</Scope>
    </TokenIdentifier>
    <Path>classeqserver_1_1_version.html</Path>
    <Abstract>Information about the current EqualizerServer version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eqserver::Version</Scope>
    </TokenIdentifier>
    <Path>classeqserver_1_1_version.html</Path>
    <Anchor>a51f7c68093703bf92827238f9405181d</Anchor>
    <DeclaredIn>eq/server/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eqserver::Version</Scope>
    </TokenIdentifier>
    <Path>classeqserver_1_1_version.html</Path>
    <Anchor>aaecedb634afb1b5261e82c0fac09e98a</Anchor>
    <DeclaredIn>eq/server/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eqserver::Version</Scope>
    </TokenIdentifier>
    <Path>classeqserver_1_1_version.html</Path>
    <Anchor>a0a22ef9a6839277d74508f584e6928c9</Anchor>
    <DeclaredIn>eq/server/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eqserver::Version</Scope>
    </TokenIdentifier>
    <Path>classeqserver_1_1_version.html</Path>
    <Anchor>ac0800bdebffa86519031b0a2927605da</Anchor>
    <DeclaredIn>eq/server/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eqserver::Version</Scope>
    </TokenIdentifier>
    <Path>classeqserver_1_1_version.html</Path>
    <Anchor>a9510005fbfb55c6633e96740eed536a3</Anchor>
    <DeclaredIn>eq/server/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eqserver::Version</Scope>
    </TokenIdentifier>
    <Path>classeqserver_1_1_version.html</Path>
    <Anchor>a401d738ebd916d1fa579408721c79006</Anchor>
    <DeclaredIn>eq/server/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eqserver::Version</Scope>
    </TokenIdentifier>
    <Path>classeqserver_1_1_version.html</Path>
    <Anchor>ac9bfd5b34489df7259749296b754d7cb</Anchor>
    <DeclaredIn>eq/server/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eqserver::Version</Scope>
    </TokenIdentifier>
    <Path>classeqserver_1_1_version.html</Path>
    <Anchor>ae3ea92b405340567056d3f4a3e6d8c63</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>eq/server/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eqserver::Version</Scope>
    </TokenIdentifier>
    <Path>classeqserver_1_1_version.html</Path>
    <Anchor>ab99d92419922a315cb56bffe45ba89b9</Anchor>
    <DeclaredIn>eq/server/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eqserver::Version</Scope>
    </TokenIdentifier>
    <Path>classeqserver_1_1_version.html</Path>
    <Anchor>af38455a7a6418ea1d8a9efed606670e3</Anchor>
    <DeclaredIn>eq/server/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seq</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>seq</Scope>
    </TokenIdentifier>
    <Path>namespaceseq.html</Path>
    <Abstract>Sequel - A simple interface to the Equalizer parallel rendering framework. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initErrors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>seq</Scope>
    </TokenIdentifier>
    <Path>namespaceseq.html</Path>
    <Anchor>a722a06a537d8774394dd3c129f4872fd</Anchor>
    <Abstract>Set up Sequel-specific error codes. </Abstract>
    <DeclaredIn>seq/error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitErrors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>seq</Scope>
    </TokenIdentifier>
    <Path>namespaceseq.html</Path>
    <Anchor>a96de08e505674c076e156ad4f1a3abb0</Anchor>
    <Abstract>Clear Sequel-specific error codes. </Abstract>
    <DeclaredIn>seq/error.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OBJECTTYPE_INITDATA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>seq</Scope>
    </TokenIdentifier>
    <Path>namespaceseq.html</Path>
    <Anchor>a1c6086b05a1be12cfe02c8245b650ed4a0a434a5cd4d786278c0545e2decdb3cb</Anchor>
    <Abstract>The object passed to Application::init() </Abstract>
    <DeclaredIn>objectType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OBJECTTYPE_FRAMEDATA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>seq</Scope>
    </TokenIdentifier>
    <Path>namespaceseq.html</Path>
    <Anchor>a1c6086b05a1be12cfe02c8245b650ed4a50972212269b5e46e645fd119ba156cc</Anchor>
    <Abstract>The object passed to Application::run() </Abstract>
    <DeclaredIn>objectType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OBJECTTYPE_CUSTOM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>seq</Scope>
    </TokenIdentifier>
    <Path>namespaceseq.html</Path>
    <Anchor>a1c6086b05a1be12cfe02c8245b650ed4a769f13f53bdbea89a0cf0dcfc86e8c8f</Anchor>
    <Abstract>Application-specific objects. </Abstract>
    <DeclaredIn>objectType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seq::Application</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_application.html</Path>
    <Abstract>The main application object. </Abstract>
    <DeclaredIn>application.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Application</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_application.html</Path>
    <Anchor>ae078620c48c22d0eb376f0574ec32b83</Anchor>
    <Abstract>Construct a new application instance. </Abstract>
    <DeclaredIn>application.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMasterNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_application.html</Path>
    <Anchor>a2ff66cd5f538a722a33c44cc0680c8a7</Anchor>
    <DeclaredIn>application.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_application.html</Path>
    <Anchor>a20b41f9fea9352f9be69bcd96ac3cde0</Anchor>
    <Abstract>Initialize the application instance. </Abstract>
    <DeclaredIn>application.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_application.html</Path>
    <Anchor>a344baa03b6934f099522f8c20c1267c7</Anchor>
    <Abstract>Run the application main loop. </Abstract>
    <DeclaredIn>application.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_application.html</Path>
    <Anchor>a19f55a695d570d3dffdf28f3ee0faf2c</Anchor>
    <Abstract>Exit this application instance. </Abstract>
    <DeclaredIn>application.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_application.html</Path>
    <Anchor>a698077ba9bf9c11279cb27de9f3d9866</Anchor>
    <Abstract>Request that the application leaves its run loop. </Abstract>
    <DeclaredIn>application.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clientInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_application.html</Path>
    <Anchor>ae0df51932e99913e2a2e09ca6d133899</Anchor>
    <Abstract>Initialize a render client. </Abstract>
    <DeclaredIn>application.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clientExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_application.html</Path>
    <Anchor>ad6bc75f9f678e74f1bfa07ecf3cb2344</Anchor>
    <Abstract>Exit a render client. </Abstract>
    <DeclaredIn>application.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_application.html</Path>
    <Anchor>a5db9b1bc45dcba01af2e9ade3e4f7d63</Anchor>
    <Abstract>Create a new renderer instance. </Abstract>
    <DeclaredIn>application.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_application.html</Path>
    <Anchor>ad96a15604b66780b21900521a2ded915</Anchor>
    <Abstract>Delete the given renderer. </Abstract>
    <DeclaredIn>application.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createViewData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_application.html</Path>
    <Anchor>a4239a9d55b04ba2b4dd63474d208e0b8</Anchor>
    <Abstract>Create a new per-view data instance. </Abstract>
    <DeclaredIn>application.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyViewData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_application.html</Path>
    <Anchor>a64d5e3b4d0e21f1e68bde7c37e25139a</Anchor>
    <Abstract>Delete the given view data. </Abstract>
    <DeclaredIn>application.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_application.html</Path>
    <Anchor>a68df6590d819aa93c27ece2724899e35</Anchor>
    <Abstract>Add and register a new object as master instance. </Abstract>
    <DeclaredIn>application.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deregister</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_application.html</Path>
    <Anchor>afce516c52d2d514ad34f57261de6cabd</Anchor>
    <Abstract>Remove and deregister an object. </Abstract>
    <DeclaredIn>application.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Client</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>a7468c5b117ccb496cc70f4f7211ef383</Anchor>
    <Abstract>Construct a new client. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>connectServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>a9234061232438c2429e1af9497b10fe6</Anchor>
    <Abstract>Open and connect an Equalizer server to the local client. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disconnectServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>a34ce1903c384050e0612e31b273fc9d4</Anchor>
    <Abstract>Disconnect and close the connection to an Equalizer server. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>ab9bc95e0088775873ab92dafe6b4f17c</Anchor>
    <Abstract>Initialize a local, listening node. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>aa0dde520d14f5ff0691b1063c5cd9d97</Anchor>
    <Abstract>De-initialize a local, listening node. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasCommands</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>afd626fef71059a004eaf14098d963d0e</Anchor>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>ab7bab87ac3a32af25ad93600b8eab73c</Anchor>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMainThreadQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>ac590187edae4f1e11c5009fac8d7e397</Anchor>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interruptMainThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>a58190dc71ad723e38dcd925dc857ef60</Anchor>
    <Abstract>Experimental: interrupt main thread queue. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>a2ad720e9fd9040d18e9b6f35dac8d004</Anchor>
    <Abstract>Set the name of the configuration. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>a382b68304cb9aa4cb032c6dce137d3a0</Anchor>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addActiveLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>acd55cbbe34673ad4fc65f0d55b8d38f2</Anchor>
    <Abstract>Add an active layout programmatically, like –eq-layout does. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>connectServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_client.html</Path>
    <Anchor>ac30bf80085992ca2f13b0999f6a2fe38</Anchor>
    <Abstract>Open and connect an Equalizer server to the local client. </Abstract>
    <DeclaredIn>fabric/client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disconnectServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_client.html</Path>
    <Anchor>a980e2993575a605df5d80b1c9e0eee5d</Anchor>
    <Abstract>Disconnect and close the connection to an Equalizer server. </Abstract>
    <DeclaredIn>fabric/client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processCommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_client.html</Path>
    <Anchor>a0d4f70786d5d43eef636d56ee3680fef</Anchor>
    <Abstract>Get and process one pending command from the node command queue. </Abstract>
    <DeclaredIn>fabric/client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Application</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_application.html</Path>
    <Anchor>a2a8196f420e47e09becaa3b99591f8d5</Anchor>
    <Abstract>Destruct this application instance. </Abstract>
    <DeclaredIn>application.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Client</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>ac4fa3ba5faa5170e5929dc48787f36a1</Anchor>
    <Abstract>Destruct the client. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clientLoop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>acc985156e76c880bfe65c86c6a913290</Anchor>
    <Abstract>Implements the processing loop for render clients. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitClient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1_client.html</Path>
    <Anchor>ac4044ff611e919dfabb9a72b17501f5e</Anchor>
    <Abstract>Exit the process cleanly on render clients. </Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Client</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1_client.html</Path>
    <Anchor>a09455052d367d050474cc28a07837b18</Anchor>
    <Abstract>Construct a new client. </Abstract>
    <DeclaredIn>fabric/client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seq::Renderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Abstract>A renderer instance. </Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Renderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>aaa2b9e1dd9d262d0ae0d5fe8a2e74f7a</Anchor>
    <Abstract>Construct a new renderer. </Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Renderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>aa7a6c0ffbc4afeb68cf7de411bf90396</Anchor>
    <Abstract>Destruct this renderer. </Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>a73947e7a0b5d9e73fd2968bd82618da7</Anchor>
    <Abstract>Initialize the renderer. </Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>a8eb98e33d1c908ae282909d67b3d1120</Anchor>
    <Abstract>De-initialize the renderer. </Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>a2c690b20cf1795e5e569e3b7b77a42b4</Anchor>
    <Abstract>Initialize a rendering context. </Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>ad161d31256f2a4cfaee8f31ba13c35e1</Anchor>
    <Abstract>De-initialize a rendering context. </Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>ad34ee89efd5ce5c7313a15774bb62a31</Anchor>
    <Abstract>Clear the frame buffer. </Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>draw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>a2b111a25986bb48f35a1e9cd3afa664b</Anchor>
    <Abstract>Render the scene. </Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestRedraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>ab48de49361de7aaa3a399d043cc99acd</Anchor>
    <Abstract>Request another call to draw(). </Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateNearFar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>a9089eddd7261305b3b4f689403cc6aae</Anchor>
    <Abstract>Update the near and far planes to tightly enclose the given sphere. </Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNearFar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>a4801c63871c2f3cc76469f18674225dd</Anchor>
    <Abstract>Set the near and far planes. </Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyRenderContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>af2ce2dfe24fdaaa4b1a1a5977a564774</Anchor>
    <Abstract>Apply the current rendering parameters to the rendering context. </Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindDrawFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>a7b6239c8a8c5cb5a17f829ee7c38851b</Anchor>
    <Abstract>Bind the window draw buffer, which can be (multisampled) FBO or window buffer. </Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>a50a72a2898972c43c9cd482ef1ee3a6b</Anchor>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyModelMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>abd66da8d3b89fbdd7d6ac0d3a1a17543</Anchor>
    <Abstract>Apply the current model matrix to the rendering context. </Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyScreenFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>a79c01b78a7831ce94bbdbf66a72b5ddc</Anchor>
    <Abstract>Apply an orthographic frustum for pixel-based 2D operations. </Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyPerspectiveFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>ad0af81a6f3a7a35b1ccd36dd4202fec5</Anchor>
    <Abstract>Apply the perspective frustum matrix for the current rendering task. </Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>aa1216168885941d5b549c79e4101bab3</Anchor>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>a67e0457605015c279ea45155fd08801b</Anchor>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getApplication</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>a85dbac178ee40b8ecc666fc563bdd6c6</Anchor>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getApplication</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>aef35309931a8e72baf9e034d37a0d693</Anchor>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getObjectManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>a2ea1ca0e78783922062b1a0ade62965e</Anchor>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getObjectManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>afb36280892c09fb90094dfc93144ca7f</Anchor>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createViewData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>a3d040cf666212e1ac7933e2db1eab9d8</Anchor>
    <Abstract>Create a new per-view data instance. </Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyViewData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>ae33ac3400f1db183564818d2bdce1f52</Anchor>
    <Abstract>Delete the given view data. </Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViewData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>ac0d9afba9dd8fc262e5f10bc22ee6d5b</Anchor>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>a2a252088b09d2cb1f327f5de03d48e79</Anchor>
    <Abstract>Get the GLEW context for this renderer. </Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>ade718dd1bac15c65fbb84729be2e222b</Anchor>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViewMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>af3ef4e22c58d0664b43e86b8c3959fa4</Anchor>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getModelMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>ac57100cb229d649ee6785676dce6b8fb</Anchor>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>a9d62973c0bbeac982ace800bf54874a8</Anchor>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindowID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>a7e17a321b7c7e49312967f152961bcda</Anchor>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>a7ae20c87938496e62bf9c10dedc4d571</Anchor>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>a0edc0d6f64b8e9552c8bdbff3c9ce94f</Anchor>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>a68364f5538c829e70b3ccd9d73f41ff5</Anchor>
    <Abstract>Map and return an object. </Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_renderer.html</Path>
    <Anchor>a667ad6b45ef6d48e1b088dc7599adb5e</Anchor>
    <Abstract>Unmap an object from the object map. </Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seq::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>seq::Version</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_version.html</Path>
    <Abstract>Information about the current Sequel version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>seq::Version</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_version.html</Path>
    <Anchor>a42f1a66a9872ae45bb3dbad57b0ad073</Anchor>
    <DeclaredIn>seq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>seq::Version</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_version.html</Path>
    <Anchor>a4eaebd5532da86d71dde25e312db9597</Anchor>
    <DeclaredIn>seq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>seq::Version</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_version.html</Path>
    <Anchor>afaf06de34ffb35d14357072c6370b656</Anchor>
    <DeclaredIn>seq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>seq::Version</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_version.html</Path>
    <Anchor>a0b75e71525205b8490efe4c273d7c0bb</Anchor>
    <DeclaredIn>seq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>seq::Version</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_version.html</Path>
    <Anchor>a4d78ea1ffacead149ec7c41103a2341e</Anchor>
    <DeclaredIn>seq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>seq::Version</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_version.html</Path>
    <Anchor>a38e1b41fa0c0874c7aae67c1d3251bd2</Anchor>
    <DeclaredIn>seq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>seq::Version</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_version.html</Path>
    <Anchor>ab70d7c6990879c65c3acb1e05408139e</Anchor>
    <DeclaredIn>seq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>seq::Version</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_version.html</Path>
    <Anchor>a6913cfb804038c9f87a4629ea22423b0</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>seq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>seq::Version</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_version.html</Path>
    <Anchor>a416cdf90cf2109d6141559ba42fc4d5c</Anchor>
    <DeclaredIn>seq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>seq::Version</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_version.html</Path>
    <Anchor>a5eeefd8e69b9e25d6bb9da0ab1ddef27</Anchor>
    <DeclaredIn>seq/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seq::ViewData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_view_data.html</Path>
    <Abstract>Stores per-view data. </Abstract>
    <DeclaredIn>viewData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ViewData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_view_data.html</Path>
    <Anchor>aae3b129e2d53b2374bdb4904b0e998c2</Anchor>
    <Abstract>Construct a new view data. </Abstract>
    <DeclaredIn>viewData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ViewData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_view_data.html</Path>
    <Anchor>af5f7ea55488e0ef7d70ca38942c3fc9b</Anchor>
    <Abstract>Destruct this view data. </Abstract>
    <DeclaredIn>viewData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useOrtho</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_view_data.html</Path>
    <Anchor>a1ed2238e07405faf0f0c1dfe9c5290e2</Anchor>
    <DeclaredIn>viewData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_view_data.html</Path>
    <Anchor>a903bd28e15a820bd444ee78cc38ad96d</Anchor>
    <Abstract>Handle the given event command. </Abstract>
    <DeclaredIn>viewData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spinModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_view_data.html</Path>
    <Anchor>ac9614bcf99406bd1f8b4b84e4eec1e2d</Anchor>
    <Abstract>Rotate the model matrix by the given increments. </Abstract>
    <DeclaredIn>viewData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_view_data.html</Path>
    <Anchor>ac1a0122d8d3fdc3b7c8a9e0c4753b619</Anchor>
    <Abstract>Move the model matrix by the given increments. </Abstract>
    <DeclaredIn>viewData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_view_data.html</Path>
    <Anchor>a9e95ed0ad52a631e457e7e11adcaa9b8</Anchor>
    <Abstract>Enable or disable statistics rendering. </Abstract>
    <DeclaredIn>viewData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrtho</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_view_data.html</Path>
    <Anchor>a24209c2916a495ee5ef06a65c84f8472</Anchor>
    <Abstract>Enable or disable orthographic rendering. </Abstract>
    <DeclaredIn>viewData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_view_data.html</Path>
    <Anchor>a014ad2f175db7d8b1ba3353dc72ac9b6</Anchor>
    <Abstract>Update the view data. </Abstract>
    <DeclaredIn>viewData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setModelMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_view_data.html</Path>
    <Anchor>a0ee31f850491809f538053f7fcb26656</Anchor>
    <Abstract>Set the current model matrix (global camera). </Abstract>
    <DeclaredIn>viewData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getModelMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_view_data.html</Path>
    <Anchor>a0f20719cd3ad2d0044fb3eebdb865ed5</Anchor>
    <DeclaredIn>viewData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1_view_data.html</Path>
    <Anchor>a8a06911cc821586fee8d4a83e10f4c61</Anchor>
    <DeclaredIn>viewData.h</DeclaredIn>
  </Token>
</Tokens>
