<map id="eqAsync::Pipe" name="eqAsync::Pipe">
<area shape="rect" id="node2" href="$classeq_1_1Pipe.html" title="A Pipe represents a graphics card (GPU) on a Node. " alt="" coords="5,1630,227,2778"/>
<area shape="rect" id="node3" href="$classeq_1_1fabric_1_1Pipe.html" title="{eq::fabric::Pipe\&lt; Node,\l Pipe, eq::Window, PipeVisitor \&gt;\n||+ getNode()\l+ getNode()\l+ getWindows()\l+ getPort()\l+ setPort()\l+ getDevice()\l+ setDevice()\l+ getPixelViewport()\l+ setPixelViewport()\l+ notifyPixelViewportChanged()\l+ getPath()\l+ accept()\l+ accept()\l+ backup()\l+ restore()\l+ create()\l+ release()\l+ output()\l+ commit()\l# Pipe()\l# ~Pipe()\l# attach()\l# serialize()\l# deserialize()\l# notifyDetach()\l# setDirty()\l# getChangeType()\l# _findWindow()\l# getRedistributableBits()\l* IAttribute\l* setIAttribute()\l* getIAttribute()\l* isThreaded()\l* getIAttributeString()\l* getNode()\l* getNode()\l* getWindows()\l* getPort()\l* setPort()\l* getDevice()\l* setDevice()\l* getPixelViewport()\l* setPixelViewport()\l* notifyPixelViewportChanged()\l* getPath()\l* accept()\l* accept()\l* backup()\l* restore()\l* create()\l* release()\l* output()\l* commit()\l}" alt="" coords="5,726,227,1581"/>
<area shape="rect" id="node4" href="$classeq_1_1fabric_1_1Object.html" title="Internal base class for all distributed, inheritable Equalizer objects. " alt="" coords="23,131,209,677"/>
</map>
