<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_VERSION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a1d51ce5f0244528aa917bc49d6028dec</Anchor>
    <Abstract>The version of the Compressor API described by this header.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_VERSION_1</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a73e3544bef283514b5404cfd8504c9b7</Anchor>
    <Abstract>At least version 1 of the Compressor API is described by this header.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_VERSION_2</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>ac88609b538391219e61844e3ecc70ce2</Anchor>
    <Abstract>At least version 2 of the Compressor API is described by this header.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_VERSION_3</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>ab04beacee20a7cf909636b812b30636e</Anchor>
    <Abstract>At least version 3 of the Compressor API is described by this header.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_VERSION_4</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a3c26ccbaebc9e79490f1ec459051cd39</Anchor>
    <Abstract>At least version 4 of the Compressor API is described by this header.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_INPLACE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a173cd0cc6074e479774efaf9866764c7</Anchor>
    <Abstract>The compressor can (query time) or should (compress) write the compressed data in the same place as t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATA_1D</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a236e333245c13d38f69f04f3d8c576f8</Anchor>
    <Abstract>The compressor can handle linear data (query time), or the input data is linear (compress, decompress).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATA_2D</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>af91c63c27e93c17d87ab66e9242cc6ed</Anchor>
    <Abstract>The compressor can handle two-dimensional data (query time), or the input data is two-dimensional (co...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_IGNORE_ALPHA</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a41f698f99a730b71794407af791425d1</Anchor>
    <Abstract>The compressor can, does or should drop the alpha channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_IGNORE_MSE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>ac1e582b8b405b1d441c94077899cb587</Anchor>
    <Abstract>Deprecated.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CPU</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a311a438e742d0a2c6863d52e3d3918ea</Anchor>
    <Abstract>The compressor is a CPU compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_TRANSFER</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>ab9cdfbb7d31237c83b4faeae6a11bb0d</Anchor>
    <Abstract>The compressor is a CPU-GPU transfer engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_USE_TEXTURE_RECT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a95c653f27f6f6ce1501f3362bb81ccf1</Anchor>
    <Abstract>Capability to use a GL_TEXTURE_RECTANGLE_ARB texture as source or destination.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_USE_TEXTURE_2D</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a631f4e55fc0fd01586027dd03d898c4c</Anchor>
    <Abstract>Capability to use a GL_TEXTURE_2D texture as source or destination.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_USE_FRAMEBUFFER</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>af38c4f877c9393e7bcaa3a4e04eb54a8</Anchor>
    <Abstract>Capability to use the frame buffer as source or destination.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_USE_ASYNC_DOWNLOAD</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>ae99a5deb5d129f5cdc4839f5543d5510</Anchor>
    <Abstract>Capability to use asynchronous downloads.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorGetNumCompressors</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>ae52553ae282ce687cca471bbdfb233fb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorGetInfo</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a777d0298b72d8aa6838607dc2144eb07</Anchor>
    <Abstract>Query information of the nth compressor in the DSO.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorNewCompressor</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a5e7c2180cffa2dd75bbbf337315629dc</Anchor>
    <Abstract>Instantiate a new compressor or a new downloader.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorDeleteCompressor</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a4af897a56b806583b5c4b093446e07c5</Anchor>
    <Abstract>Release a compressor or downloader instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorNewDecompressor</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a3bdbfcd8f109347cfb600ad6df36f5bf</Anchor>
    <Abstract>Instantiate a new decompressor or a new uploader.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorDeleteDecompressor</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>ab34434eafc0cb92b0b898e9381593c09</Anchor>
    <Abstract>Release a decompressor instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorCompress</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a9b57dfdccdb79bc01a3ca7c6d6cfff1a</Anchor>
    <Abstract>Compress data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorGetNumResults</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a3646188a0b27e50620ea1bf2ff2cfe87</Anchor>
    <Abstract>Return the number of results produced by the last compression.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorGetResult</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>ad1ffb6ee7db430b05413be0e8b920e07</Anchor>
    <Abstract>Return the ith result of the last compression.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorDecompress</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a033a5642aec0832c6a603f9ed1b35520</Anchor>
    <Abstract>Decompress data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorIsCompatible</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a80ac98b11fc3a146c758871c024fda59</Anchor>
    <Abstract>Check if the compressor may be used with the current OpenGL context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorDownload</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a529e9fbf75442ee8d62c406898c1c8d1</Anchor>
    <Abstract>Transfer frame buffer data into main memory.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorStartDownload</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a6ee01b34d4af891256d259ddf135fd5f</Anchor>
    <Abstract>Start transferring frame buffer data into main memory.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorFinishDownload</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a60e5f2e0a8115dc01a19f0a14d7f5d85</Anchor>
    <Abstract>Finish transferring frame buffer data into main memory.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorUpload</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a60382962fabfbc0cc7180ff0c2f6f562</Anchor>
    <Abstract>Transfer data from main memory into GPU memory.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_NONE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>ada6cf176f24f340ee2fb086ea6811642</Anchor>
    <Abstract>Invalid data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BYTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a64b4e32b9fc704d69c31467eddc8305d</Anchor>
    <Abstract>Data is processed in one-byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_UNSIGNED</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a7bafbfaeb300e23b840698b0945dce1d</Anchor>
    <Abstract>Data is processed in four-byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_HALF_FLOAT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a1405308ea9271a4d699b3592e7003574</Anchor>
    <Abstract>Data is processed in float16 tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_FLOAT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a679b5eeb3c428c18de287fa8d37c0f37</Anchor>
    <Abstract>Data is processed in float32 tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_3_BYTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>afb5fa363942ff9d54e18ac22034e4ebe</Anchor>
    <Abstract>Data is processed in three interleaved streams of one-byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_4_BYTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a427ee2177eab3e19f2e6dc6584693a44</Anchor>
    <Abstract>Data is processed in four interleaved streams of one-byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_3_HALF_FLOAT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>aa9ac8ac07856eedfabb3f1ca0b2b6bd4</Anchor>
    <Abstract>Data is processed in four interleaved streams of float16 tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_4_HALF_FLOAT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a7c0e6c187471e75a9fb81d965fe657ba</Anchor>
    <Abstract>Data is processed in four interleaved streams of float16 tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_3_FLOAT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a5d903ca8019c270163935ac36416ff72</Anchor>
    <Abstract>Data is processed in four interleaved streams of three float32 tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_4_FLOAT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a741e423f0945b740a709886c8edec727</Anchor>
    <Abstract>Data is processed in four interleaved streams of four float32 tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_3BYTE_1BYTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a74fb96927efc499af24122309a0225d3</Anchor>
    <Abstract>Data is processed in one 24 bit and one 8 bit interleaved streams.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGR10_A2</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>ac807efbb79730b1308f0e65c77bea006</Anchor>
    <Abstract>Data is processed in three 10-bit color tokens and one 2-bit alpha token.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGBA</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>af973712fd1d87a41f63327b882d3d001</Anchor>
    <Abstract>Data is processed in four interleaved streams of RGBA color of unsigned Byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGBA_UINT_8_8_8_8_REV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a43d38ec44ec3454e8c4f58cfd113c12d</Anchor>
    <Abstract>Data is processed in four interleaved streams of RGBA color of unsigned byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGBA16F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>af36e12369d957f31f2aec05f05bd6509</Anchor>
    <Abstract>Data is processed in four interleaved streams of RGBA color of half float tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGBA32F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a4f00d0c46cee0db351b9df9e9c540aec</Anchor>
    <Abstract>Data is processed in four interleaved streams of RGBA color of float tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGRA</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>ac5d9264420ac6dc85460dda13be36752</Anchor>
    <Abstract>Data is processed in four interleaved streams of BGRA color of unsigned byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGRA_UINT_8_8_8_8_REV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>af6bdacb06b19f9f2e0104dab58067c70</Anchor>
    <Abstract>Data is processed in four interleaved streams of BGRA color of unsigned byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGRA16F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a80a0f25ea28ee20c11c89f0c6699f9fa</Anchor>
    <Abstract>Data is processed in four interleaved streams of BGRA color of half float tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGRA32F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a920dc0fc8060055e0698f0f19a2579e5</Anchor>
    <Abstract>Data is processed in four interleaved streams of BGRA color of float tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_DEPTH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a8270ad16682a229771fd36e794927a85</Anchor>
    <Abstract>Data is a (source) depth buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_DEPTH_FLOAT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a1e3de6802c69bc5b77e1ae81cc15316e</Anchor>
    <Abstract>Data is processed in one stream of depth of float tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_DEPTH_UNSIGNED_INT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>af57580a0b54c48dced48156442483840</Anchor>
    <Abstract>Data is processed in one stream of unsigned int depth tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGB</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a9cf922644e8de8ea1aa605a9266971fd</Anchor>
    <Abstract>Data is processed in three interleaved streams of RGB unsigned byte color tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGB16F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a0332606c3ed3428bca2be0dc0e591e9b</Anchor>
    <Abstract>Data is processed in three interleaved streams of RGB half float color tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGB32F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a1c985e33f96291d3082ff1b711ccd955</Anchor>
    <Abstract>Data is processed in three interleaved streams of RGB float color tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a4f4346088c2c271a2a7f992595d2caf3</Anchor>
    <Abstract>Data is processed in three interleaved streams of BGR unsigned byte color tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGR16F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a9bd9cbbea615db69c8ef521f57018457</Anchor>
    <Abstract>Data is processed in three interleaved streams of BGR half float color tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGR32F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>ad345388ba0ce33844b75b7f98174de9f</Anchor>
    <Abstract>Data is processed in three interleaved streams of BGR float color tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_YUVA_50P</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>aff4c54efd0a8c62e87bb063cb7257ccf</Anchor>
    <Abstract>Data is processed in four interleaved streams of YUVA components.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGB10_A2</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a5828ee3eb373d45ffac14317d4ef8242</Anchor>
    <Abstract>Data is processed in three 10-bit color tokens and one 2-bit alpha token.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_INVALID</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a805f2f33c74caeeecc9c264ba9d338ce</Anchor>
    <Abstract>Invalid data type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_PRIVATE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a032965521e2f4f650c3ba695833514a7</Anchor>
    <Abstract>Private token types -FOR DEVELOPMENT ONLY-.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_INVALID</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>aef61c477b34cce7af60e4f68547ecef6</Anchor>
    <Abstract>Invalid Compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_NONE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a22000e8d4a4f298ee39a7bb819eecd9f</Anchor>
    <Abstract>No Compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_UNSIGNED</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>aa22757fad44b0b5fb99ee7f965f26efd</Anchor>
    <Abstract>RLE Compression of 4-byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_BYTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>accfd6805535e3ab63279c5627a75bc5e</Anchor>
    <Abstract>RLE Compression of 1-byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_3_BYTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>ad11bfedd0116c7a2ba15cbb5058b952c</Anchor>
    <Abstract>RLE Compression of three 1-byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_4_BYTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>acdefb599af7363fe8667c3a7d19c14af</Anchor>
    <Abstract>RLE Compression of four 1-byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_4_FLOAT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a16ceec2bf512ac560feda7528e03b370</Anchor>
    <Abstract>RLE Compression of four float32 tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_4_HALF_FLOAT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a52e0dc735af1d6d223cc1038a440ddcb</Anchor>
    <Abstract>RLE Compression of four float16 tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DIFF_RLE_3_BYTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a0fd34429947d60c38b9942abe36d0c8b</Anchor>
    <Abstract>Differential RLE Compression of three 1-byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DIFF_RLE_4_BYTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a68cf94d8fe07f36661120d34b4b74695</Anchor>
    <Abstract>Differential RLE Compression of four 1-byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_4_BYTE_UNSIGNED</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a096face1d27d580098ce751e31381b43</Anchor>
    <Abstract>RLE Compression of one 4-byte token.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_565</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a1e55ef7016fed1a0a2f7f6ea1860fe90</Anchor>
    <Abstract>Lossy Differential RLE Compression.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_BGR10_A2</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>abad30f075e041679b6c88de59eb7a11c</Anchor>
    <Abstract>RLE Compression of three token of 10-bits and one toke of 2-bits.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_4_HALF_FLOAT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a8fabd93cb366e4eb5dd954c37d7a96d8</Anchor>
    <Abstract>RLE Compression of four float16 tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_YUVA_50P</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a0953ef6a5d11868f10cb1d194f38ebb4</Anchor>
    <Abstract>Differential RLE Compression of YUV tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_YUVA_50P</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>ab02f18cf4c9d69424dddaa015de7241d</Anchor>
    <Abstract>RLE Compression of YUV tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_RGBA</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a130550df2ede35efa9daa8e61e49c941</Anchor>
    <Abstract>Differential RLE Compression of RGBA bytes tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_BGRA</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a8c76871866dd2cf4f5ee31cd0a8d3298</Anchor>
    <Abstract>Differential RLE Compression of BGRA bytes tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_RGBA_UINT_8_8_8_8_REV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a31f04c45e86447fde26834005e21df9e</Anchor>
    <Abstract>Differential RLE Compression of RGBA UINT_8_8_8_8_REV tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_BGRA_UINT_8_8_8_8_REV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>aa313031f21df17573fdc4bd2efdce28f</Anchor>
    <Abstract>Differential RLE Compression of BGRA UINT_8_8_8_8_REV tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_DEPTH_UNSIGNED_INT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a0f751d4f135a07ef78a85953354e2349</Anchor>
    <Abstract>Differential RLE Compression of DEPTH UNSIGNED INT tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_RGBA16F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>ad6001916c3275515a21b84fd0fe9746e</Anchor>
    <Abstract>RLE Compression of RGBA half float tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_BGRA16F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a6999be62b1f4c742145964482a9ecbb1</Anchor>
    <Abstract>RLE Compression of BGRA half float tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_RGBA16F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>aa68a9db9d073bf4495bddaf5f8df20d5</Anchor>
    <Abstract>Differential RLE Compression of RGBA half float tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_BGRA16F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>aa9c9a90589a991025fcf11c8609ea802</Anchor>
    <Abstract>Differential RLE Compression of BGRA half float tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_565_RGBA</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a8b10016927ca23be31571be0cd51ee75</Anchor>
    <Abstract>Lossy Differential RLE Compression of RGBA bytes tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_565_BGRA</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a68024febd695710409ab4c0b575c299d</Anchor>
    <Abstract>Lossy Differential RLE Compression of RGBA bytes tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_565_RGBA_UINT_8_8_8_8_REV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a1c0ba3bd09f5e5f74822b3aa0abe29ca</Anchor>
    <Abstract>Lossy Differential RLE Compression of RGBA UINT_8_8_8_8_REV tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_565_BGRA_UINT_8_8_8_8_REV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a1c3c68bb2d33a5e46a0c5c72fc7c52d3</Anchor>
    <Abstract>Lossy Differential RLE Compression of BGRA UINT_8_8_8_8_REV tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_RGBA</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>ae288575133515166cf42f7817ddcf5f3</Anchor>
    <Abstract>RLE Compression of RGBA bytes tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_BGRA</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>ae8736c8c414998d9c2b3d59120d65718</Anchor>
    <Abstract>RLE Compression of BGRA bytes tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_RGBA_UINT_8_8_8_8_REV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>ad8fcbdde916c109b41b27b92c676094f</Anchor>
    <Abstract>RLE Compression of RGBA UINT_8_8_8_8_REV tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_BGRA_UINT_8_8_8_8_REV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>ae8d2bed2cfd3ed2a8ab2f5ba79911042</Anchor>
    <Abstract>RLE Compression of BGRA UINT_8_8_8_8_REV tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_RGB10_A2</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>abff56a1a521d5bc53f62fe2396c74a65</Anchor>
    <Abstract>RLE Compression of RGBA 10_10_10_2 tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_BGR10_A2</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a1d521b403a46f68dbba84f76b6815217</Anchor>
    <Abstract>RLE Compression of BGRA 10_10_10_2 tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DEPTH_UNSIGNED_INT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>aafceca2f5d9c36eb48c4579f449c2faa</Anchor>
    <Abstract>RLE Compression of depth unsigned int tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_UNSIGNED</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a01c73b3fbdb53e66ddbb5b095405c238</Anchor>
    <Abstract>RLE Compression of unsigned tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_AUTO</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a9288c949d72e5e76763cb12b1e141b1d</Anchor>
    <Abstract>Automatic selection of compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_AG_RTT_JPEG_HQ</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a9d31e6f66a6b4c29694f4aa0d1561c22</Anchor>
    <Abstract>Quasi-lossless CPU jpeg compressor from rtt.ag.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_AG_RTT_JPEG_MQ</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a3a3e25fc03848909b6486064e830d5cf</Anchor>
    <Abstract>Medium quality CPU jpeg compressor from rtt.ag.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_AG_RTT_JPEG_LQ</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a5730fcb20298e51e86e9e7920880a33e</Anchor>
    <Abstract>Low quality CPU jpeg compressor from rtt.ag.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_AG_RTT_JPEG_HQ_A</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a774b845b5be0b194a34a325b7c3af87d</Anchor>
    <Abstract>Quasi-lossless CPU jpeg compressor from rtt.ag retaining alpha.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_AG_RTT_JPEG_MQ_A</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>aa3238d3b3f5341b4f632627caa8ffe28</Anchor>
    <Abstract>Medium quality CPU jpeg compressor from rtt.ag retaining alpha.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_AG_RTT_JPEG_LQ_A</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a41eb32aeee2fba12f57f9b15a21bbd01</Anchor>
    <Abstract>Low quality CPU jpeg compressor from rtt.ag retaining alpha.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_RGBA100</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>aab04c57f8a75d0e79b11647a76d59fc7</Anchor>
    <Abstract>Eyescale quasi-lossless CPU jpeg RGBA compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_RGBA90</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a8cc0749e2ca57ddbc6262e761ef91681</Anchor>
    <Abstract>Eyescale 90% quality CPU jpeg RGBA compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_RGBA80</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a8b0c44ad9e4f2f0d61b2bb768f53f31d</Anchor>
    <Abstract>Eyescale 80% quality CPU jpeg RGBA compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_BGRA100</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a5ccaf11754c89210272c664a7fff088d</Anchor>
    <Abstract>Eyescale quasi-lossless CPU jpeg BGRA compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_BGRA90</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a0fbc14f882bd26a73325d3da6b6e8355</Anchor>
    <Abstract>Eyescale 90% quality CPU jpeg BGRA compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_BGRA80</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a7957c30c7f1d9cb2389f1aabc6ac76ea</Anchor>
    <Abstract>Eyescale 80% quality CPU jpeg BGRA compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_RGB100</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>ace11a52ad2781833928cdbdf33692c8f</Anchor>
    <Abstract>Eyescale quasi-lossless CPU jpeg RGB compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_RGB90</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a3923f4ae63969e4868ce6de39a8d078a</Anchor>
    <Abstract>Eyescale 90% quality CPU jpeg RGB compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_RGB80</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>aada794546f4932ee866c96ef8849639f</Anchor>
    <Abstract>Eyescale 80% quality CPU jpeg RGB compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_BGR100</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a85abdd7930d22535bb1699940d75ff57</Anchor>
    <Abstract>Eyescale quasi-lossless CPU jpeg BGR compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_BGR90</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>aee7f2d82ca8ec749936fd3ae619510f5</Anchor>
    <Abstract>Eyescale 90% quality CPU jpeg BGR compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_BGR80</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a4d483c33b8d0c52d24ae905838fa9a28</Anchor>
    <Abstract>Eyescale 80% quality CPU jpeg BGR compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_PRIVATE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a0f41c834aeb373f89f0a74760a44adde</Anchor>
    <Abstract>Private types -FOR DEVELOPMENT ONLY-.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>debugGLError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a2c88ebac255b00c867fcb631c210bb46</Anchor>
    <Abstract>Output an error OpenGL in a human-readable form to LBWARN.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a5e12771cfcd77224cfb4f79d7011d964</Anchor>
    <Abstract>Initialize the Equalizer fabric namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>aaf53c695f6b4b44f0f95a16d5a6ace4a</Anchor>
    <Abstract>De-initialize the Equalizer fabric namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deprecated</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>deprecated.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alist</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>alist</Scope>
    </TokenIdentifier>
    <Path>structalist.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cilist</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>cilist</Scope>
    </TokenIdentifier>
    <Path>structcilist.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cllist</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>cllist</Scope>
    </TokenIdentifier>
    <Path>structcllist.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>complex</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>complex</Scope>
    </TokenIdentifier>
    <Path>structcomplex.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doublecomplex</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>doublecomplex</Scope>
    </TokenIdentifier>
    <Path>structdoublecomplex.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorInfo</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>structEqCompressorInfo.html</Path>
    <Abstract>Information about one compressor.</Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>structEqCompressorInfo.html</Path>
    <Anchor>a53a85431bc9f0e9a5d60141dc6562136</Anchor>
    <Abstract>The compressor API version used.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>structEqCompressorInfo.html</Path>
    <Anchor>a3d2f2d44c8d175fc0791d2d058d899dd</Anchor>
    <Abstract>The type name of the compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tokenType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>structEqCompressorInfo.html</Path>
    <Anchor>ae848919427e79ef6073da9a483ebc793</Anchor>
    <Abstract>The input token type supported by the compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capabilities</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>structEqCompressorInfo.html</Path>
    <Anchor>ab0ddae05d1d45bab5d8db7962aac6302</Anchor>
    <Abstract>Capabilities supported by the compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>structEqCompressorInfo.html</Path>
    <Anchor>a0d21f4d6634b516c656a4f587a17d9e2</Anchor>
    <Abstract>Compression quality (1.0f: loss-less, &amp;lt;1.0f: lossy).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ratio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>structEqCompressorInfo.html</Path>
    <Anchor>a3ab85c8d8bf4485e4f129ef54e2bd9a0</Anchor>
    <Abstract>Approximate compression ratio (sizeCompressed/sizeIn).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>structEqCompressorInfo.html</Path>
    <Anchor>a5618cd8db6fca238c2f34d1fd6b64b32</Anchor>
    <Abstract>Approximate compression speed relative to BYTE_RLE.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputTokenType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>structEqCompressorInfo.html</Path>
    <Anchor>a57640c08fee57277c73aeb72c2bb44e5</Anchor>
    <Abstract>The output token type of a plugin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputTokenSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>structEqCompressorInfo.html</Path>
    <Anchor>a9123aced0d007768c496fc7108ca051d</Anchor>
    <Abstract>The size of one output token in bytes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash&lt; co::ObjectVersion &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>hash&lt; co::ObjectVersion &gt;</Scope>
    </TokenIdentifier>
    <Path>structhash_3_01co_1_1ObjectVersion_01_4.html</Path>
    <Abstract>ObjectVersion hash function.</Abstract>
    <DeclaredIn>objectVersion.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>icilist</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>icilist</Scope>
    </TokenIdentifier>
    <Path>structicilist.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inlist</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>inlist</Scope>
    </TokenIdentifier>
    <Path>structinlist.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::NonCopyable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NonCopyable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1NonCopyable.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Multitype</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Multitype</Scope>
    </TokenIdentifier>
    <Path>unionMultitype.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Namelist</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Namelist</Scope>
    </TokenIdentifier>
    <Path>structNamelist.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodeFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
    <Anchor>ad3d076b2f26a41b6343553605894adac</Anchor>
    <Abstract>Create a new pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
    <Anchor>a923f9fc8ed7730ef465b8b6306240f20</Anchor>
    <Abstract>Create a new window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
    <Anchor>af724a546ef0b9a81e7658393e321e8e6</Anchor>
    <Abstract>Create a new channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
    <Anchor>a4aa5b8e9d03ac685a86b9f752031248b</Anchor>
    <Abstract>Create a new config.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
    <Anchor>ad7d969b558322f62908e1aecabf534c3</Anchor>
    <Abstract>Create a new node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
    <Anchor>ad3d076b2f26a41b6343553605894adac</Anchor>
    <Abstract>Create a new pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
    <Anchor>a923f9fc8ed7730ef465b8b6306240f20</Anchor>
    <Abstract>Create a new window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
    <Anchor>af724a546ef0b9a81e7658393e321e8e6</Anchor>
    <Abstract>Create a new channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
    <Anchor>a4aa5b8e9d03ac685a86b9f752031248b</Anchor>
    <Abstract>Create a new config.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
    <Anchor>a923f9fc8ed7730ef465b8b6306240f20</Anchor>
    <Abstract>Create a new window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
    <Anchor>af724a546ef0b9a81e7658393e321e8e6</Anchor>
    <Abstract>Create a new channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
    <Anchor>a4aa5b8e9d03ac685a86b9f752031248b</Anchor>
    <Abstract>Create a new config.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
    <Anchor>ad7d969b558322f62908e1aecabf534c3</Anchor>
    <Abstract>Create a new node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
    <Anchor>ad3d076b2f26a41b6343553605894adac</Anchor>
    <Abstract>Create a new pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
    <Anchor>a923f9fc8ed7730ef465b8b6306240f20</Anchor>
    <Abstract>Create a new window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
    <Anchor>af724a546ef0b9a81e7658393e321e8e6</Anchor>
    <Abstract>Create a new channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
    <Anchor>ac80977684aeef5e866a26700598d4743</Anchor>
    <Abstract>Create a new view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
    <Anchor>a4aa5b8e9d03ac685a86b9f752031248b</Anchor>
    <Abstract>Create a new config.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
    <Anchor>ad7d969b558322f62908e1aecabf534c3</Anchor>
    <Abstract>Create a new node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
    <Anchor>ad3d076b2f26a41b6343553605894adac</Anchor>
    <Abstract>Create a new pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
    <Anchor>a923f9fc8ed7730ef465b8b6306240f20</Anchor>
    <Abstract>Create a new window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classNodeFactory.html</Path>
    <Anchor>af724a546ef0b9a81e7658393e321e8e6</Anchor>
    <Abstract>Create a new channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>olist</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>olist</Scope>
    </TokenIdentifier>
    <Path>structolist.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OtherData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>OtherData</Scope>
    </TokenIdentifier>
    <Path>structOtherData.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OtherElem</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>OtherElem</Scope>
    </TokenIdentifier>
    <Path>structOtherElem.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PlyElement</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PlyElement</Scope>
    </TokenIdentifier>
    <Path>structPlyElement.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PlyFile</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PlyFile</Scope>
    </TokenIdentifier>
    <Path>structPlyFile.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PlyOtherElems</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PlyOtherElems</Scope>
    </TokenIdentifier>
    <Path>structPlyOtherElems.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PlyOtherProp</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PlyOtherProp</Scope>
    </TokenIdentifier>
    <Path>structPlyOtherProp.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PlyProperty</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PlyProperty</Scope>
    </TokenIdentifier>
    <Path>structPlyProperty.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tracker</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tracker</Scope>
    </TokenIdentifier>
    <Path>classTracker.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tracker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tracker</Scope>
    </TokenIdentifier>
    <Path>classTracker.html</Path>
    <Anchor>adf214393a14e8bf23de2fc8231e239ec</Anchor>
    <Abstract>Constructs a new Tracker and sets it&amp;#39;s _running state to false.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tracker</Scope>
    </TokenIdentifier>
    <Path>classTracker.html</Path>
    <Anchor>af162d69b5592a16244d13a918131241f</Anchor>
    <Abstract>Configures the serial port and initialises the tracker.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWorldToEmitter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tracker</Scope>
    </TokenIdentifier>
    <Path>classTracker.html</Path>
    <Anchor>aad7b21cc4538c1bce27102ccfdc73191</Anchor>
    <Abstract>Set the matrix defining the transformation from world coordinates to emitter coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSensorToObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tracker</Scope>
    </TokenIdentifier>
    <Path>classTracker.html</Path>
    <Anchor>a28f61733e35896fe506a994c91580321</Anchor>
    <Abstract>Set the matrix defining the transformation from sensor coordinates to coordinates of the tracked obje...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tracker</Scope>
    </TokenIdentifier>
    <Path>classTracker.html</Path>
    <Anchor>adeaab8820045251bcf5a7b4f394eb568</Anchor>
    <Abstract>Checks if the tracker is running.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tracker</Scope>
    </TokenIdentifier>
    <Path>classTracker.html</Path>
    <Anchor>a852f3b8fa6fb2165bcb129c1dbf7f8be</Anchor>
    <Abstract>Gets new position and orientation data from the tracker and stores them in the _pos and _hpr arrays...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tracker</Scope>
    </TokenIdentifier>
    <Path>classTracker.html</Path>
    <Anchor>ae6fc473e1c8db5e249d712afa5f1d3a3</Anchor>
    <Abstract>Gets the transformation matrix with the position and orientation data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vardesc</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Vardesc</Scope>
    </TokenIdentifier>
    <Path>structVardesc.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Abstract>Object-oriented network library.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a3e7ec22e94baf2866b4fe2ffa2ed33ed</Anchor>
    <Abstract>Serialize a vector of connection descriptions to a string.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a5cc1b4bea0441a8bf8da7ac6f58c37f8</Anchor>
    <Abstract>Deserialize a vector or connection descriptions from a string.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>aedb300bef01f54711558d79b13efb6bf</Anchor>
    <Abstract>Print the error in a human-readable format.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a2bb1a932b6fd0d688383ceb8438c7b63</Anchor>
    <Abstract>Initialize the Collage network library.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a36f727b7884ef2481c11faa68ba78a6a</Anchor>
    <Abstract>De-initialize the Collage network library.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodeID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>ab4452293e17c53ce2ef182f1f2084134</Anchor>
    <Abstract>A unique identifier for nodes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodePtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a0d5cbee3c27bc2b84652efd3a525208e</Anchor>
    <Abstract>A reference pointer for Node pointers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstNodePtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a584499ed2997b6f9a3c8c717e8cc3f81</Anchor>
    <Abstract>A reference pointer for const Node pointers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LocalNodePtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a1845cd1464ebae2968b11cb6b2b532a9</Anchor>
    <Abstract>A reference pointer for LocalNode pointers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstLocalNodePtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a726fc6c344b4ec2669ec0058720f5d97</Anchor>
    <Abstract>A reference pointer for const LocalNode pointers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a94924a5b5332fbb2d6b96a0e3225448a</Anchor>
    <Abstract>A reference pointer for Connection pointers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionDescriptionPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a84eba8e89c4b672eae45c240cd40f56d</Anchor>
    <Abstract>A reference pointer for ConnectionDescription pointers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a01cebaaa8a6445eff1d5d521b4c3788c</Anchor>
    <Abstract>A vector of NodePtr&amp;#39;s.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodesIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>ae623fced422e6e9f4fd978e1a77a2855</Anchor>
    <Abstract>An iterator for a vector of nodes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodesCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a8651ffbf1aefecb60fe63172d16b3d1e</Anchor>
    <Abstract>A const iterator for a vector of nodes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Objects</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a90140aaf1b3530738fb58f45c1c339dd</Anchor>
    <Abstract>A vector of objects.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObjectsIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>aee4e2d2f8501ede87edb53453e0aa091</Anchor>
    <Abstract>A iterator for a vector of objects.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObjectsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a34bdfeaf4dfe360604293480e67c2f5d</Anchor>
    <Abstract>A const iterator for a vector of objects.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Barriers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>abdb8eca4372f1432c7790af99f78066a</Anchor>
    <Abstract>A vector of barriers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BarriersIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a5295e07e32537744403fab3552572024</Anchor>
    <Abstract>Barriers iterator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BarriersCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a98038ce96d10a5f42b540a1a3bde0f63</Anchor>
    <Abstract>Barriers const iterator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Connections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a33f9994b4ed5425f2f45f32fa41e3091</Anchor>
    <Abstract>A vector of ConnectionPtr&amp;#39;s.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a3062ad2d898b10a94311f82ee110229b</Anchor>
    <Abstract>A const iterator for a vector of ConnectionPtr&amp;#39;s.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionsIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>aa59fbe80f231aacaf06e7091387bc0fa</Anchor>
    <Abstract>An iterator for a vector of ConnectionPtr&amp;#39;s.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionDescriptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>aa7f4826fe6e31acc4e44b6f31b3fe572</Anchor>
    <Abstract>A vector of ConnectionDescriptionPtr&amp;#39;s.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionDescriptionsIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a79bbaa648ae2f68c00585491eba0183b</Anchor>
    <Abstract>An iterator for a vector of ConnectionDescriptionPtr&amp;#39;s.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionDescriptionsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>aae8dd29c48efa5a4fbebe82a001565a8</Anchor>
    <Abstract>A const iterator for a vector of ConnectionDescriptionPtr&amp;#39;s.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VERSION_NONE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>ad7106c2489284a841be4e90600ca3844</Anchor>
    <Abstract>Special object version values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONNECTIONTYPE_TCPIP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a65133c6a094c4df2f4d59562f82bdfdba3679bc9affad045bbb6b126d0cea4248</Anchor>
    <Abstract>TCP/IP sockets.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONNECTIONTYPE_SDP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a65133c6a094c4df2f4d59562f82bdfdbaaf478ea8d405467dd3b4937c75ac1c04</Anchor>
    <Abstract>SDP sockets (InfiniBand)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONNECTIONTYPE_PIPE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a65133c6a094c4df2f4d59562f82bdfdba9f9eeb3e30869888b2960b36c05a75ad</Anchor>
    <Abstract>pipe() based uni-directional connection</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONNECTIONTYPE_NAMEDPIPE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a65133c6a094c4df2f4d59562f82bdfdba84856bb2ccca579181438c03426df251</Anchor>
    <Abstract>Named pipe based bidirectional connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONNECTIONTYPE_IB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a65133c6a094c4df2f4d59562f82bdfdba98dbe0b6bf7d16e79c5ac5912b960c69</Anchor>
    <Abstract>Infiniband based RDMA.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONNECTIONTYPE_RDMA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a65133c6a094c4df2f4d59562f82bdfdba8514882a49fbc007188ce797b72444e3</Anchor>
    <Abstract>Infiniband RDMA CM.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONNECTIONTYPE_UDT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a65133c6a094c4df2f4d59562f82bdfdba27061e42355c2e23cdad501df680130e</Anchor>
    <Abstract>UDT connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONNECTIONTYPE_PGM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a65133c6a094c4df2f4d59562f82bdfdba70ad1067433167c187f12a92af344ccf</Anchor>
    <Abstract>IP-based multicast connection (PGM)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONNECTIONTYPE_RSP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a65133c6a094c4df2f4d59562f82bdfdba96cc6084d953a46bce53e1a8e437532c</Anchor>
    <Abstract>UDP-based reliable stream protocol.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NODETYPE_CO_INVALID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>ace4f054098ff777aa389698d2fc60004aff6ceeea922fc9d75917dbbe35cc91c1</Anchor>
    <Abstract>Invalid type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NODETYPE_CO_NODE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>ace4f054098ff777aa389698d2fc60004a048bfcce128b53e3a697203227791d5d</Anchor>
    <Abstract>A plain co::Node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NODETYPE_CO_USER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>ace4f054098ff777aa389698d2fc60004ac7c943cbd260cae1b17b8ab425a9064e</Anchor>
    <Abstract>Application-specific types.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::Barrier</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Abstract>A networked, versioned barrier.</Abstract>
    <DeclaredIn>barrier.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Barrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>aebdce4ac407014d2a68a941b07539f81</Anchor>
    <Abstract>Construct a new barrier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Barrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>a6e47858db16a78ae50a88eba26910a4a</Anchor>
    <Abstract>Construct a new barrier, to be mapped to the master version.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Barrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>ac248f41e9ef327a0c8d093d2ff4775ed</Anchor>
    <Abstract>Destruct the barrier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>ab5b3f36ed1b5de2c0860ce50d9995630</Anchor>
    <Abstract>Set the number of participants in the barrier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>increase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>aef620e87b9a238834c48e9e07d21bd8e</Anchor>
    <Abstract>Add one participant to the barrier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>abd6f00d2ba8edda8b27e882d72a5c90a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>ade53e6b9ab9d654eed420ea7d4e5b166</Anchor>
    <Abstract>Enter the barrier, blocks until the barrier has been reached.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChangeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>af62af3b831125b5fc05e9767cbca2d72</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>ae6e006c5f55c09c5ca1889ab391f2c92</Anchor>
    <Abstract>Serialize all instance information of this distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>ab1b08a3585d53ffd7ddae7a94b31752c</Anchor>
    <Abstract>Deserialize the instance data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>a235ecb9d239bb2c5429909745dc43da3</Anchor>
    <Abstract>Serialize the modifications since the last call to commit().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unpack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>ae50668367d38f99a371d4ef4660421c7</Anchor>
    <Abstract>Deserialize a change.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::BufferConnection</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::BufferConnection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1BufferConnection.html</Path>
    <Abstract>A proxy connection buffering outgoing data into a memory buffer.</Abstract>
    <DeclaredIn>bufferConnection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readNB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::BufferConnection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1BufferConnection.html</Path>
    <Anchor>a50f0c20955b166e912fec426c3e50cdc</Anchor>
    <Abstract>Start a read operation on the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::BufferConnection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1BufferConnection.html</Path>
    <Anchor>a8e2f52a08be7f835f757ec09a71ef3bb</Anchor>
    <Abstract>Finish reading data from the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::BufferConnection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1BufferConnection.html</Path>
    <Anchor>ae891a6ececc54b504170326a201758f9</Anchor>
    <Abstract>Write data to the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNotifier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::BufferConnection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1BufferConnection.html</Path>
    <Anchor>ac0e6c63ec1950be126e9610128621783</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::Command</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::Command</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Command.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Command</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Command.html</Path>
    <Anchor>a6f821cc583c17d12a38fd36f5a3e9f9a</Anchor>
    <Abstract>Invoke and clear the command function of a dispatched command.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::CommandCache</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::CommandCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandCache.html</Path>
    <Abstract>A command cache handles the reuse of allocated packets for a node.</Abstract>
    <DeclaredIn>commandCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alloc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::CommandCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandCache.html</Path>
    <Anchor>a4ead420dfb9accf89d8240a35adc824f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::CommandCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandCache.html</Path>
    <Anchor>aa24f5ee2d4bf2bfcef13eb0d25a21807</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::CommandCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandCache.html</Path>
    <Anchor>a618b89ba709a07a7b0897ed2884141a3</Anchor>
    <Abstract>Flush all allocated commands.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::CommandFunc</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>co::CommandFunc</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandFunc.html</Path>
    <Abstract>A wrapper to register a function callback on an object instance.</Abstract>
    <DeclaredIn>commandFunc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::CommandQueue</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandQueue.html</Path>
    <Abstract>A CommandQueue is a thread-safe queue for command packets.</Abstract>
    <DeclaredIn>commandQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandQueue.html</Path>
    <Anchor>a6e7e4e6e504262d02205b614188c3a25</Anchor>
    <Abstract>Push a command to the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pushFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandQueue.html</Path>
    <Anchor>abbcde3e81afc31176d118d43c89b6dbf</Anchor>
    <Abstract>Push a command to the front of the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wakeup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandQueue.html</Path>
    <Anchor>af9efbfbc89bceab517d117631da07575</Anchor>
    <Abstract>Wake up the command queue, pop() will return 0.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandQueue.html</Path>
    <Anchor>a0a783b57d5b53d4e28202808a2d89237</Anchor>
    <Abstract>Pop a command from the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tryPop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandQueue.html</Path>
    <Anchor>afe556aaa535e334ac9bb6c025574237b</Anchor>
    <Abstract>Try to pop a command from the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandQueue.html</Path>
    <Anchor>a7f4e116ea0c3097646e37036673a1d06</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandQueue.html</Path>
    <Anchor>a71442462d1dedd8763ce26e906e0719f</Anchor>
    <Abstract>Flush all cached commands.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandQueue.html</Path>
    <Anchor>a4cf639cffa1b887bd0ad26f80a4c96c3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::Connection</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Abstract>An interface definition for communication between hosts.</Abstract>
    <DeclaredIn>connection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNotifier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a55c29bda54df50cb4bac0ce35b08db61</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>abb14cb3ff5222062a7d2e68ac8a38c0a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isClosed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>ae8aa84a77b1b7288d686b4b4a58bc611</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConnected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>aa3467ce39ac68d2add5b9168676d66db</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isListening</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a340c6fb3736456cb1f344da26588caae</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDescription</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>ab7dfa315b0f95e19732cad4f23f678e9</Anchor>
    <Abstract>Set the connection parameter description.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDescription</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a58edf5d69591594aa8826c2aad2a59db</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>connect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a86dbe1ac7ecbc4baf1aa0427a9da1184</Anchor>
    <Abstract>Connect to the remote peer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>listen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a4d0c190e88d3763666bbd9f6ffdc320b</Anchor>
    <Abstract>Put the connection into the listening state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a539fe42f7056fb3932139f3e95b050fb</Anchor>
    <Abstract>Close a connected or listening connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a0b73910e1ab5eb1eb4bba6f93cf42a17</Anchor>
    <Abstract>Add a listener for connection state changes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a340d6578ed0dd9c4462575b78e8b53e3</Anchor>
    <Abstract>Remove a listener for connection state changes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>acceptNB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>aa770ca400361be45e38fe49c220df3fd</Anchor>
    <Abstract>Start an accept operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>acceptSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a8d6d5b7070d58f849e2d875ff692455a</Anchor>
    <Abstract>Complete an accept operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recvNB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>aa108aa861672f7016a4abf0d8a365a30</Anchor>
    <Abstract>Start a read operation on the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recvSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a5ab2ef4b6d2a9af3c1af839b636bb2af</Anchor>
    <Abstract>Finish reading data from the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readNB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a9d51b4f926adc20c850ead432f8715c3</Anchor>
    <Abstract>Start a read operation on the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a56c11cedd911361f2a3a4b989ddd08a7</Anchor>
    <Abstract>Finish reading data from the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a1878e46b53111fe973c7f1c568024084</Anchor>
    <Abstract>Create a new connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Notifier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a85ae0b69f0dc3996ae79809fa21703f6</Anchor>
    <Abstract>The Notifier used by the ConnectionSet to detect readiness of a Connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_state</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>aa81510c900a1eba047d62d58f8f38fef</Anchor>
    <Abstract>The connection state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_description</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>acacd948150751c56d4f3ca21ff344c94</Anchor>
    <Abstract>The connection parameters.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_sendLock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a8b8c5a272672f90ae4172f208fb75a72</Anchor>
    <Abstract>The lock used to protect multiple write calls.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a875aaa521f4360c51a9ababc392865bf</Anchor>
    <Abstract>Sends a packaged message to multiple connections.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>af7161e0a18de1835b5e5ad89ee2aaa90</Anchor>
    <Abstract>Sends a packaged message including additional data to multiple connections.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a7b156825ea3c4a5d5f97f7b3ed8fc7b2</Anchor>
    <Abstract>Sends a packaged message including additional, multiple data items to multiple connections.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a1d29eeca302db9b2b6dec50a50da9eb5</Anchor>
    <Abstract>Send data using the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lockSend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a418aa2153555ac4c03ca274e2b5cf965</Anchor>
    <Abstract>Lock the connection, no other thread can send data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unlockSend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a7a12a19846a614d352f2fd8868194db6</Anchor>
    <Abstract>Unlock the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>ac317067fca1e4fa7cc769849312f74ea</Anchor>
    <Abstract>Sends a packaged message using the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a905d882795668cc6ab8c509dd98ffe93</Anchor>
    <Abstract>Sends a packaged message including a string using the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a4ca35b8c5eefcdfb21a6f400bcd8dde1</Anchor>
    <Abstract>Sends a packaged message including additional data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a308a375e24ed11ad81cf61b5076f042d</Anchor>
    <Abstract>Sends a packaged message including additional data using the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a19d0c9df49e4466b1599f3f22e16bf74</Anchor>
    <Abstract>Write data to the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STATE_CLOSED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>ad6263ab2bfaa081884dd0a7d34a4df43a58fa21b18ae8fbb4c9b0425ffe41646c</Anchor>
    <Abstract>Closed, initial state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STATE_CONNECTING</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>ad6263ab2bfaa081884dd0a7d34a4df43ad3c63eb66f6623ff2d5f460db6e08259</Anchor>
    <Abstract>A connect() or listen() is in progress.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STATE_CONNECTED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>ad6263ab2bfaa081884dd0a7d34a4df43abd4a6387bed8dc64c3f0a5c4238a25e3</Anchor>
    <Abstract>The connection has been connected and is open.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STATE_LISTENING</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>ad6263ab2bfaa081884dd0a7d34a4df43aa9d1cc97507d378290e64f916badb694</Anchor>
    <Abstract>The connection is listening for connects.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STATE_CLOSING</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>ad6263ab2bfaa081884dd0a7d34a4df43a8a128bf2c7c80c0d64c77c46021ef2d5</Anchor>
    <Abstract>A close() is in progress.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::ConnectionDescription</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::ConnectionDescription</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionDescription.html</Path>
    <Abstract>Describes Connection parameters.</Abstract>
    <DeclaredIn>connectionDescription.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ConnectionDescription</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionDescription.html</Path>
    <Anchor>ad97d018428e714c48e8fe1068b2b9253</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ConnectionDescription</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionDescription.html</Path>
    <Anchor>a93229874ced3b5a4d567eb99cd11cf1e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ConnectionDescription</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionDescription.html</Path>
    <Anchor>a116b2194f2fb3dd329304dea10b0c944</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ConnectionDescription</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionDescription.html</Path>
    <Anchor>ae47626eef330573e75a2ead60b79811c</Anchor>
    <Abstract>Reads the connection description from a string.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::ConnectionDescription</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionDescription.html</Path>
    <Anchor>a09a58e93a477bb31806d0d972506b980</Anchor>
    <Abstract>The network protocol for the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bandwidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::ConnectionDescription</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionDescription.html</Path>
    <Anchor>a57bde83f437f4a04b5dcf74046c441d8</Anchor>
    <Abstract>The bandwidth in kilobyte per second for this connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>port</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::ConnectionDescription</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionDescription.html</Path>
    <Anchor>a7063d28b28ab1753a33564d92bdc92b3</Anchor>
    <Abstract>The listening port (TCPIP, SDP, IB, MCIP, RDMA).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::ConnectionListener</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::ConnectionListener</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionListener.html</Path>
    <Abstract>A listener interface to connection changes.</Abstract>
    <DeclaredIn>connectionListener.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::ConnectionSet</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Abstract>Handles events on a set of connections.</Abstract>
    <DeclaredIn>connectionSet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>select</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Anchor>a7844b561c07bae2309df37e9243c5859</Anchor>
    <Abstract>Selects a Connection which is ready for I/O.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interrupt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Anchor>ae3c0812fc0651efdd4908354058cd607</Anchor>
    <Abstract>Interrupt the current or next select call.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EVENT_NONE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Anchor>a160c9d1faea8c6a1079fd491baa20182af88bb8d3f777c44578ce498f8f36dbff</Anchor>
    <Abstract>No event has occurred.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EVENT_CONNECT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Anchor>a160c9d1faea8c6a1079fd491baa20182a82c7ed39e0604f8549e8c1a64d4e8899</Anchor>
    <Abstract>A new connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EVENT_DISCONNECT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Anchor>a160c9d1faea8c6a1079fd491baa20182a3a1e404e5dc37f529d74721ccd696ac6</Anchor>
    <Abstract>A disconnect.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EVENT_DATA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Anchor>a160c9d1faea8c6a1079fd491baa20182a4381cedcb23749fe913527f8fdb4b624</Anchor>
    <Abstract>Data can be read.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EVENT_TIMEOUT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Anchor>a160c9d1faea8c6a1079fd491baa20182a88d0630ad6bb46f4bcfbb4b019dbd3d7</Anchor>
    <Abstract>The selection request timed out.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EVENT_INTERRUPT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Anchor>a160c9d1faea8c6a1079fd491baa20182ae698d5c9c0ed8cfbe1c2001fe1d03a54</Anchor>
    <Abstract>ConnectionSet::interrupt was called.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EVENT_ERROR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Anchor>a160c9d1faea8c6a1079fd491baa20182adb18d95a1a2cc46a92ff719233d9b435</Anchor>
    <Abstract>A connection signaled an error.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EVENT_SELECT_ERROR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Anchor>a160c9d1faea8c6a1079fd491baa20182a6fe96068efc89c9c12178570353c31b4</Anchor>
    <Abstract>An error occurred during select()</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EVENT_INVALID_HANDLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Anchor>a160c9d1faea8c6a1079fd491baa20182ae2efc842b9f07e4e4186be0c0628e50a</Anchor>
    <Abstract>A connection is not select&amp;#39;able.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::DataIStream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Abstract>A std::istream-like input data stream for binary data.</Abstract>
    <DeclaredIn>dataIStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaster</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a0f1bfebd540a98fa0827c483b0c22001</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nRemainingBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a18cd18cc1e4dd263e6748a5d144a2578</Anchor>
    <Abstract>Get the number of remaining buffers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a848f4f30bbc3327ef78df16a216fff0b</Anchor>
    <Abstract>Read a plain data item.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a9cd9afbed8088e9066dd9a470df26f1c</Anchor>
    <Abstract>Read a std::vector of serializable items.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserializeChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>aa7176a552bc9593ae6cc071697098204</Anchor>
    <Abstract>Deserialize child objects.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>aa67337802302e5c77b3c2a0a3a7e52b9</Anchor>
    <Abstract>Read a number of bytes from the stream into a buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRemainingBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>ac547306f7dca41d1dbf6e593a8e95de0</Anchor>
    <Abstract>Get the pointer to the remaining data in the current buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRemainingBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>ac9403b531f7d38ed2bfa7e64603006d9</Anchor>
    <Abstract>Get the size of the remaining data in the current buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>advanceBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a5e8803e654564de272f1efc74d674947</Anchor>
    <Abstract>Advance the current buffer by a number of bytes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a278623aa120f2327dd1076e930dbd242</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>adedd76e0bbec398415b0c3127252d1b1</Anchor>
    <Abstract>Read a std::string.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a2fc35335cfc12e127d23891a27e1ed74</Anchor>
    <Abstract>Deserialize an object (id+version).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>aa191b4012365f0bbbba93169830194ab</Anchor>
    <Abstract>Optimized specialization to read a std::vector of uint8_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>ad6a0fafef9e81959ff60ef144740d049</Anchor>
    <Abstract>Optimized specialization to read a std::vector of uint16_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a422bec6a4adf31944609b2015a0b5a5f</Anchor>
    <Abstract>Optimized specialization to read a std::vector of int16_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>aaa63a8d51ba93414f626e430d96d2148</Anchor>
    <Abstract>Optimized specialization to read a std::vector of uint32_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a408b3793e09a559ab9cb16bca44eac87</Anchor>
    <Abstract>Optimized specialization to read a std::vector of int32_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>ab7d9eafb600e7897f657ceff9f283d2e</Anchor>
    <Abstract>Optimized specialization to read a std::vector of uint64_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a4454eac26b56ff212d9d36e34030ba57</Anchor>
    <Abstract>Optimized specialization to read a std::vector of int64_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>aaadd00007c9fd06597a2c394fde3ad57</Anchor>
    <Abstract>Optimized specialization to read a std::vector of float.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>ae91a44a32bfd928152baead0159af829</Anchor>
    <Abstract>Optimized specialization to read a std::vector of double.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a97d3f673a9b3b0ce35c9be47106475c1</Anchor>
    <Abstract>Optimized specialization to read a std::vector of ObjectVersion.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::DataOStream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Abstract>A std::ostream buffering and/or retaining data in a binary format.</Abstract>
    <DeclaredIn>dataOStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>af352084cc8a2e48f9281551841d24b87</Anchor>
    <Abstract>Disable and flush the output to the current receivers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a3c4085aeb8808e6ec35d40470d22310a</Anchor>
    <Abstract>Disable, then send the packet to the current receivers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableSave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a4069e5b260f27551fa06ec66475fc1a1</Anchor>
    <Abstract>Enable copying of all data into a saved buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableSave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a2f2c618813dcd6bda9357d5d9fb5b0a4</Anchor>
    <Abstract>Disable copying of all data into a saved buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasSentData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>afa37ce2c0001740515bb03667bac136b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>af892e90afccf01cad093560473d270c6</Anchor>
    <Abstract>Write a plain data item by copying it to the stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>aa11b688b0fe45b88b455eb13a3f7e2a1</Anchor>
    <Abstract>Write a std::vector of serializable items.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a038ca1ac28ce87779cfc30214e6661a9</Anchor>
    <Abstract>Write a number of bytes from data into the stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serializeChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>ab29e26c1160b772fab6e861f8331e0ea</Anchor>
    <Abstract>Serialize child objects.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a3699afc7d971aa9b0009ff985701a376</Anchor>
    <Abstract>Write a std::string.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a5c6655fc51b18ad4946d85db679bf4c9</Anchor>
    <Abstract>Write an object identifier and version.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a205dc351844f462c012f74a1ece648d4</Anchor>
    <Abstract>Optimized specialization to write a std::vector of uint8_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>ad8bd37ebab9fa6319721f4b64d801f92</Anchor>
    <Abstract>Optimized specialization to write a std::vector of uint16_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a0779d7b25cb5e3181ac8d97a8f91be8c</Anchor>
    <Abstract>Optimized specialization to write a std::vector of int16_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a8631974a1b41d6a15a03fc8158c5b281</Anchor>
    <Abstract>Optimized specialization to write a std::vector of uint32_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>affab47ca166ec96e8376c1bb1eda045c</Anchor>
    <Abstract>Optimized specialization to write a std::vector of int32_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a4dc4063837be6453ed06146bddbd53ae</Anchor>
    <Abstract>Optimized specialization to write a std::vector of uint64_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>abbe64aeb56843c78188ddfc08a76b19d</Anchor>
    <Abstract>Optimized specialization to write a std::vector of int64_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>aed38a6b7adc4fc5714ce23f7c7c79ff0</Anchor>
    <Abstract>Optimized specialization to write a std::vector of float.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a0fb414a215d4fd37768435af5a4fd736</Anchor>
    <Abstract>Optimized specialization to write a std::vector of double.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a039f4e81b084b95691e36ca540f910e4</Anchor>
    <Abstract>Optimized specialization to write a std::vector of ObjectVersion.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_initCompressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>af156b658638f161d6a842b679d960ceb</Anchor>
    <Abstract>Initialize the given compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_enable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a9a4a7c33bc77db654f3cb9d0365230a4</Anchor>
    <Abstract>Enable output.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>aef8b502f8a2b21ef1ed414e62aaf1b76</Anchor>
    <Abstract>Flush remaining data in the buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_setupConnections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a9bd23e9ce3473d1a7fa7485a74a1e20e</Anchor>
    <Abstract>Set up the connection list for a group of nodes, using multicast where possible.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_setupConnection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>ad4eea48a07238b49178b7e7e4a5b09e9</Anchor>
    <Abstract>Set up the connection (list) for one node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_resend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>aded4453ac92ac728d95233832ff5fb1f</Anchor>
    <Abstract>Resend the saved buffer to all enabled connections.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a1f17f2243c5866400d80e658e91b8902</Anchor>
    <Abstract>Reset the whole stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>accc955744a11f5a6058aee355c0bf512</Anchor>
    <Abstract>Send a data buffer (packet) to the receivers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::Dispatcher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::Dispatcher</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Dispatcher.html</Path>
    <Abstract>A helper class providing command packet dispatch functionality to networked objects.</Abstract>
    <DeclaredIn>dispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Dispatcher</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Dispatcher.html</Path>
    <Anchor>ad8ace4a8ae225dacb2a8cb178263cc11</Anchor>
    <Abstract>NOP assignment operator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatchCommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Dispatcher</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Dispatcher.html</Path>
    <Anchor>ac1980943f3d0fbb6e2d7cb0de89b7d7b</Anchor>
    <Abstract>Dispatch a command from the receiver thread to the registered queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerCommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Dispatcher</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Dispatcher.html</Path>
    <Anchor>a7e2578d1e1b3875da1eeaa45b09b1cc9</Anchor>
    <Abstract>Registers a command member function for a command.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_cmdUnknown</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Dispatcher</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Dispatcher.html</Path>
    <Anchor>aab10ccfcd438a5db32ac237bd6e89bf5</Anchor>
    <Abstract>The default handler for handling commands.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::ErrorRegistry</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::ErrorRegistry</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ErrorRegistry.html</Path>
    <Abstract>The registry translating error codes to strings.</Abstract>
    <DeclaredIn>errorRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ErrorRegistry</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ErrorRegistry.html</Path>
    <Anchor>afc0947572fdd52bf1f26126352a5744f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ErrorRegistry</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ErrorRegistry.html</Path>
    <Anchor>a6ddf8960d67ca19876c0f1fa3bfcaced</Anchor>
    <Abstract>Set an error string for the given error code.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eraseString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ErrorRegistry</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ErrorRegistry.html</Path>
    <Anchor>a4ea14e13cd3f5ca7402e30d2279bed25</Anchor>
    <Abstract>Clear a given error code string.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::Exception</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::Exception</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Exception.html</Path>
    <Abstract>A base Exception for Collage operations.</Abstract>
    <DeclaredIn>exception.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Exception</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Exception</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Exception.html</Path>
    <Anchor>a2685c68d527852dc9b78dbf592ea39e8</Anchor>
    <Abstract>Construct a new Exception.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Exception</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Exception</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Exception.html</Path>
    <Anchor>a23be275a48dee16a2dcb90dfcda4a782</Anchor>
    <Abstract>Destruct this exception.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Exception</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Exception.html</Path>
    <Anchor>a54614917d402585194278828dd3a79a5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIMEOUT_WRITE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::Exception</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Exception.html</Path>
    <Anchor>a77095f782590a447d158bde1408c5c40a6fb40eb5579cde84d92e2407c5084a6e</Anchor>
    <Abstract>A write timeout operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIMEOUT_READ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::Exception</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Exception.html</Path>
    <Anchor>a77095f782590a447d158bde1408c5c40a281aba0ed031afae349a02833c9019af</Anchor>
    <Abstract>A read timeout operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIMEOUT_BARRIER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::Exception</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Exception.html</Path>
    <Anchor>a77095f782590a447d158bde1408c5c40a09dd8de6c5a0413c5f5a38dee1f6c674</Anchor>
    <Abstract>A barrier timeout operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIMEOUT_COMMANDQUEUE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::Exception</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Exception.html</Path>
    <Anchor>a77095f782590a447d158bde1408c5c40ac713d4fbf59d5c2910c615569018df48</Anchor>
    <Abstract>A timeout on a cmd queue operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::Global</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Abstract>Global parameter handling for the Collage library.</Abstract>
    <DeclaredIn>global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProgramName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>a731ea77fb13042343b26b8f3b41aff31</Anchor>
    <Abstract>Sets the name of the program.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProgramName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>aa7f9a3aaef8d82355291d545b95aa76c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWorkDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>a054f9e722a267bb4b5c72521dea627ee</Anchor>
    <Abstract>Sets the working directory of the program.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWorkDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>ae8fc2242f274ece53c6a68b0fa01349f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>a08c32db858f6d07cbe1c28f7f0d70316</Anchor>
    <Abstract>Sets the default listening port.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDefaultPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>a3103c106b2d3f16bd1192bb736a6c167</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setObjectBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>aa19d31a25f55b566051fa0eb5a86d252</Anchor>
    <Abstract>Set the minimum buffer size for Object serialization.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getObjectBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>abab9d172b0927d79733a28af60a2d9f0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>adf2a2b0a867c523fe1cf9a4daa0ae708</Anchor>
    <Abstract>Set the global variables.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>ac90d16f17bd7953c1eb51d4e87b95f05</Anchor>
    <Abstract>Write global variables to data in the format for fromString().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPluginRegistry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>a70826162bc067300a7aa8fd432db3577</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getErrorRegistry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>a6ce4de3c3d13c9eef19207a9ad4ed3c4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeepaliveTimeout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>aa1cf3b3c39fe76fcf4ee233175957634</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>ab4f059502046665a74f30bd09d3bfc07</Anchor>
    <Abstract>Set an integer attribute.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>a2e6a343853761d6277ce6efde3ebf23c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimeout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>aeb60db7d2907e544494fddfb98bd4c0e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::InstanceCache</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::InstanceCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1InstanceCache.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InstanceCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::InstanceCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1InstanceCache.html</Path>
    <Anchor>a7c9a37ba9306e54a1f0b2a2d9db3a2b8</Anchor>
    <Abstract>Construct a new instance cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~InstanceCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::InstanceCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1InstanceCache.html</Path>
    <Anchor>aabdb4b8561263db31fa17352f612c3ac</Anchor>
    <Abstract>Destruct this instance cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::InstanceCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1InstanceCache.html</Path>
    <Anchor>ab686b107afbdb948a76a2602e68c7ef5</Anchor>
    <Abstract>Add a new command to the instance cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::InstanceCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1InstanceCache.html</Path>
    <Anchor>ab5ba11011e11e7c10e425e5c9d2f0f18</Anchor>
    <Abstract>Remove all items from the given node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::InstanceCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1InstanceCache.html</Path>
    <Anchor>a339d3e3d65fbb2212b7f465d1667cdea</Anchor>
    <Abstract>Direct access to the cached instance data for the given object id.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::InstanceCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1InstanceCache.html</Path>
    <Anchor>a7be507eb35fc7a5e9ca1476b22792a0e</Anchor>
    <Abstract>Release the retrieved instance data of the given object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>erase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::InstanceCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1InstanceCache.html</Path>
    <Anchor>a982ca3c76ec4cb25a7cf4095d49fe72f</Anchor>
    <Abstract>Erase all the data for the given object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::InstanceCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1InstanceCache.html</Path>
    <Anchor>a623220441cc4485052292ae7797d2d30</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::InstanceCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1InstanceCache.html</Path>
    <Anchor>a654c16828234fe3a3b8945eb41e27b41</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>expire</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::InstanceCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1InstanceCache.html</Path>
    <Anchor>a50999455d7e9f31061087006dbc9c1e6</Anchor>
    <Abstract>Remove all items which are older than the given time.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::InstanceCache::Data</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::InstanceCache::Data</Scope>
    </TokenIdentifier>
    <Path>structco_1_1InstanceCache_1_1Data.html</Path>
    <Abstract>One cache entry.</Abstract>
    <DeclaredIn>instanceCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>masterInstanceID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::InstanceCache::Data</Scope>
    </TokenIdentifier>
    <Path>structco_1_1InstanceCache_1_1Data.html</Path>
    <Anchor>a62c9d2a0c81f26ba79363a804f8cda6e</Anchor>
    <Abstract>The instance ID of the master object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>versions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::InstanceCache::Data</Scope>
    </TokenIdentifier>
    <Path>structco_1_1InstanceCache_1_1Data.html</Path>
    <Anchor>a82378ebdce0daf98ddd42bc5d2df3e0a</Anchor>
    <Abstract>all cached data</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NONE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::InstanceCache::Data</Scope>
    </TokenIdentifier>
    <Path>structco_1_1InstanceCache_1_1Data.html</Path>
    <Anchor>a57d8d5299e70ce3710d4b7a1c75c946e</Anchor>
    <Abstract>&amp;#39;0&amp;#39; return value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::LocalNode</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Abstract>Specialization of a local node.</Abstract>
    <DeclaredIn>localNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a93e8bc1721bd9c24a18f38fb12a565a7</Anchor>
    <Abstract>Request keep-alive update from the remote node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pingIdleNodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a019fcba8b818b8bcd6f7d41d2604ef72</Anchor>
    <Abstract>Request updates from all nodes above keep-alive timeout.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAffinity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a5cac69b3dac9b129603f48d1c60443bc</Anchor>
    <Abstract>Set the affinity for this, the receiver and the command thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a86faec9ee143e8f5e33e6794405ecf7b</Anchor>
    <Abstract>Initialize the node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>listen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a32f39c19067df54010ff15bdf081a48f</Anchor>
    <Abstract>Open all connections and put this node into the listening state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a40df2d93c9d4551f6243fde90825c25f</Anchor>
    <Abstract>Close a listening node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>affc726d4898efc6a9bd38cb17379cd3f</Anchor>
    <Abstract>Close a listening node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>connect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>ad86c386a14c7c57ce55f38a2988eff61</Anchor>
    <Abstract>Connect a proxy node to this listening node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>connect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a34d4fb6f2ceb5578daa9a1e9dca0bf05</Anchor>
    <Abstract>Create and connect a node given by an identifier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disconnect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>acef4dc0c6271e5af3cfb1cd1d951ded2</Anchor>
    <Abstract>Disconnects a connected node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableInstanceCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a3ff22f4938a755eeda411d9bea3b4bf6</Anchor>
    <Abstract>Disable the instance cache of a stopped local node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableSendOnRegister</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a7a516662ed06e068b93253667eb56cb7</Anchor>
    <Abstract>Enable sending instance data after registration.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableSendOnRegister</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a9ea86ca7b7644f8f318200aedc459aec</Anchor>
    <Abstract>Disable sending data of newly registered objects when idle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a562a1e12e8de0da3b03569f5732af9b2</Anchor>
    <Abstract>Register a distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deregisterObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>af18a5bfeb64f54d08cdd9c5737d1af27</Anchor>
    <Abstract>Deregister a distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>af1bc154890bdd61b20d0cbaf0ed02ec0</Anchor>
    <Abstract>Map a distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>af4c1977afa5ad1cff5cd9b39a0866293</Anchor>
    <Abstract>Convenience wrapper for mapObject().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObjectNB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a7901e3a7ecbde88fabca7a0c988d4299</Anchor>
    <Abstract>Start mapping a distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObjectNB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a9271a1478d413feb201554d29b3680c7</Anchor>
    <Abstract>Start mapping a distributed object from a known master.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObjectSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a778c6a4d4d4ff6b819b55a4b5586100c</Anchor>
    <Abstract>Finalize the mapping of a distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmapObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>aa731bd1d6669564026bb69e0a993fc0a</Anchor>
    <Abstract>Unmap a mapped object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a392032264ab66a90389a3e0081ad4fbc</Anchor>
    <Abstract>Convenience method to deregister or unmap an object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectPush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a948881412e30d835cb7bf3cff59f51bf</Anchor>
    <Abstract>Handler for an Object::push operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerPushHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a2b3abec07981fab7883d37d7a460bd01</Anchor>
    <Abstract>Register a custom handler for Object::push operations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerCommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>afb50431eb02237b930c5f9cf9d245810</Anchor>
    <Abstract>Register a custom command handler handled by this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a185cbe3b22d6a78c8c25d04096274406</Anchor>
    <Abstract>Get a node by identifier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a11b1cbc62d1f986eb1d4bd1c811a4f3a</Anchor>
    <Abstract>Assemble a vector of the currently connected nodes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCommandThreadQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>adad89727587d2d2a9b6102bbd82f9256</Anchor>
    <Abstract>Return the command queue to the command thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inCommandThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a2be5b7dbfbe43ec0a31bfb6d785a7d6e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a2e8984099562d1befdf9575ea63626b1</Anchor>
    <Abstract>Add a listening connection to this listening node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>aeda95d8c3a32e00b275568087c8494d6</Anchor>
    <Abstract>Add a listening connection to this listening node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeListeners</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a9ed9f883e7b2f51bc27a173dc04a3093</Anchor>
    <Abstract>Remove listening connections from this listening node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flushCommands</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>aad1465eaca2d1caf5d0d9c7ae419a200</Anchor>
    <Abstract>Flush all pending commands on this listening node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatchCommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a382a32d6d931bd152184e9150e6211cd</Anchor>
    <Abstract>Dispatches a packet to the registered command queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>acquireSendToken</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a7139e595fe6168ef99a728cb5d9a65ad</Anchor>
    <Abstract>Acquire a singular send token from the given node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZeroconf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>ac14e0dc6a4e62d7c5cba2755fbae25ea</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SendToken</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>abe2670814abb5ee890f900c9cfb56f33</Anchor>
    <Abstract>An acquired send token.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PushHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a3054d458c61230905ac2c468d03508b3</Anchor>
    <Abstract>Function signature for push handlers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>af330fd1a39b2f1f7ba4a2dedb9c2b129</Anchor>
    <Abstract>Function signature for custom command handlers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyDisconnect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a30adcde933e4e967680100a9ce1ea5b0</Anchor>
    <Abstract>Notify remote node disconnection from the receiver thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::Node</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Abstract>Manages a node.</Abstract>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>abe2a8ce2b1387ece163995c0187940b1</Anchor>
    <Abstract>Construct a new Node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>af9d951e9872b1aacb700d3a12861e844</Anchor>
    <Abstract>Serialize the node&amp;#39;s information.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>af7cea5c5934aaf1f9f06c50b16d0a3b5</Anchor>
    <Abstract>Deserialize the node information, consumes given data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastReceiveTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>acfbb33a9850c21da77247266b8685e9c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>adf17936215b867c44cf5e85097f0fd60</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>a243668926eb442f8ff0a42eda94fc75b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addConnectionDescription</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>ae7709b31c664bb82d8fcc48dd73241b6</Anchor>
    <Abstract>Adds a new description how this node can be reached.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeConnectionDescription</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>a456b8b13f5d0bc765dc0143a9966d6e3</Anchor>
    <Abstract>Removes a connection description.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConnectionDescriptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>a66004e9f3587dee643b2cc1919c5d660</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConnection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>a40972a301d345d1625b82ecbe29c9933</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useMulticast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>a72b27b90271c6f3a312bdcb320b5bb08</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>a715a9c1589249b567a0e4f8977ca2c29</Anchor>
    <Abstract>Sends a packet to this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>a0317a4f3d43255de7de76fe92d0c6a7e</Anchor>
    <Abstract>Sends a packet with a string to the node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>abed101efe374d5c63e232f8775deec32</Anchor>
    <Abstract>Sends a packet with additional data to the node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>a04a25bf2a78e06911c5dc0bffc576aee</Anchor>
    <Abstract>Sends a packet with additional data to the node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multicast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>ac0e063fb45caad8d30a96563cb197c72</Anchor>
    <Abstract>Multicasts a packet to the multicast group of this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>a4fc6fbcc0cdc88b6c50c058f7b358e4d</Anchor>
    <Abstract>Destructs this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>adb3fd83cc7f0d973a9d3dc5e11e50406</Anchor>
    <Abstract>Factory method to create a new node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::Object</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Abstract>A generic, distributed object.</Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a62698acaa2b516590684a53d9b062bee</Anchor>
    <Abstract>Construct a new distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a5d43aacaf2328cebd2051364f28965b0</Anchor>
    <Abstract>Destruct the distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAttached</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a9352a2b0bdfc5e6551ebd831d42ad6fc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLocalNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a5b76afac372bbe1f4c2940a6497351a5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>aa36fc424283e2960c7906c74144b9a17</Anchor>
    <Abstract>Set the object&amp;#39;s unique identifier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a12637ae54e90db08fedfdd0e5d3a5a9a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInstanceID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>aa09eabedfe256d605af204358283b2d3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMaster</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a01dd9f1747fc1cdb162f737936d09205</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChangeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a10ba549521822bf9401319e1d15c94bd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxVersions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>af66156904486a0e3df1ede99591f11a7</Anchor>
    <Abstract>Limit the number of queued versions of slave instances.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chooseCompressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>ac5c35d27fb9c4149924abefca4a610f2</Anchor>
    <Abstract>Return the compressor to be used for data transmission.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>ae437c5c262ccfbb1dddb4ac38aa3e0f9</Anchor>
    <Abstract>Return if this object needs a commit.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a48b7f80995c06e49cc2f7fe333666ead</Anchor>
    <Abstract>Push the instance data of the object to the given nodes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a26fdea3d3f02b204b3d129a429412445</Anchor>
    <Abstract>Commit a new version of this object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutoObsolete</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>aebcd51f44793e5e17ea2fd03a629661a</Anchor>
    <Abstract>Automatically obsolete old versions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAutoObsolete</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>aa0abbb623bfad9d2f3e0b3d72ccbbba6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a5eb3261859f4be179e9c68ca4ca52384</Anchor>
    <Abstract>Sync to a given version.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeadVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a0ecd810a8b443ef4d1404162d9ba73c1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a00a8f6a69e9599371bb2105ea3f82fe0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyNewHeadVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a3bb8ca350f2bce94912a8142f9427242</Anchor>
    <Abstract>Notification that a new head version was received by a slave object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyNewVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>ac86523c3143a409558cc383fbeb09359</Anchor>
    <Abstract>Notification that a new version was received by a master object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>aacac279363ecc549cac67e715ab49864</Anchor>
    <Abstract>Serialize all instance information of this distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>ad5d185282f6677499100df40e462e1b1</Anchor>
    <Abstract>Deserialize the instance data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>ac98e060ef02dd0e670cc058590e22c00</Anchor>
    <Abstract>Serialize the modifications since the last call to commit().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unpack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a94778929cb6d88643727be222d305671</Anchor>
    <Abstract>Deserialize a change.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a57a7bda6eb752c11d7834352448853a9</Anchor>
    <Abstract>Send a packet to peer object instance(s) on another node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>ae054c920159a4580af2e6ddc55b47b9a</Anchor>
    <Abstract>Send a packet to peer object instance(s) on another node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>abd1d911628c62570b11e47e9975bcf7f</Anchor>
    <Abstract>Send a packet to peer object instance(s) on another node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a645a00d7f427a454cee50862d2719def</Anchor>
    <Abstract>Send a packet to peer object instance(s) on another node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyAttach</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>aad62af10dc486704567801216b771399</Anchor>
    <Abstract>Notify that this object will be registered or mapped.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyAttached</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>adea849be34cf83a2809075c16d16685b</Anchor>
    <Abstract>Notify that this object has been registered or mapped.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyDetach</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a0533209c42d646b4aefe0f62074e4fc9</Anchor>
    <Abstract>Notify that this object will be deregistered or unmapped.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyDetached</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>aa7777fd972f129edc5d6121c9426de7f</Anchor>
    <Abstract>Notify that this object has been deregistered or unmapped.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a2cfda48d66c0a0db146dcec338aebcda</Anchor>
    <Abstract>Copy constructor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a5f5ce1eac8bd5f58e395344907063b19</Anchor>
    <Abstract>NOP assignment operator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STATIC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>aaae58400a7f8d052bfa2b5392a5fbfe8abffa92dfe324266d5363ea52e6d28eff</Anchor>
    <Abstract>non-versioned, static object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INSTANCE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>aaae58400a7f8d052bfa2b5392a5fbfe8afc5de780b268580c941aa751a7dcd4dd</Anchor>
    <Abstract>use only instance data</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DELTA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>aaae58400a7f8d052bfa2b5392a5fbfe8a2b1bfe2c6f342bc3c0e73f7ebdd87f07</Anchor>
    <Abstract>use pack/unpack delta</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UNBUFFERED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>aaae58400a7f8d052bfa2b5392a5fbfe8a396f5b4bfe97cc2df900e569c4e5e10d</Anchor>
    <Abstract>versioned, but don&amp;#39;t retain versions</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::ObjectFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::ObjectFactory</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ObjectFactory.html</Path>
    <Abstract>The interface to create objects, used by objectMap.</Abstract>
    <DeclaredIn>objectFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ObjectFactory</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ObjectFactory.html</Path>
    <Anchor>aa6d99006a08deb355770ce568a25a44b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ObjectFactory</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ObjectFactory.html</Path>
    <Anchor>a396a0938d8eb5af786055811c52c717b</Anchor>
    <Abstract>Delete the given object of the given type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::ObjectHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::ObjectHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ObjectHandler.html</Path>
    <Abstract>Interface for entities which map and register objects.</Abstract>
    <DeclaredIn>objectHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObjectHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ObjectHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ObjectHandler.html</Path>
    <Anchor>a16af1a653bced8d39623cf74c87fbee9</Anchor>
    <Abstract>Construct a new object handler.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ObjectHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ObjectHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ObjectHandler.html</Path>
    <Anchor>ae4d12fa19ea1b78667dc5093c5aa20dc</Anchor>
    <Abstract>Destroy this object handler.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ObjectHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ObjectHandler.html</Path>
    <Anchor>a059b7d0d98c214b65eb4fd8ed590babf</Anchor>
    <Abstract>Register a distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deregisterObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ObjectHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ObjectHandler.html</Path>
    <Anchor>a2391ef602940d4df026bd60f37af4891</Anchor>
    <Abstract>Deregister a distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObjectNB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ObjectHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ObjectHandler.html</Path>
    <Anchor>aaf008e72735c9b1e00197a43160446fb</Anchor>
    <Abstract>Start mapping a distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObjectSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ObjectHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ObjectHandler.html</Path>
    <Anchor>a3f91175d7f12b2738a70e8b840131aa3</Anchor>
    <Abstract>Finalize the mapping of a distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmapObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ObjectHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ObjectHandler.html</Path>
    <Anchor>aab4ee36b6c68ee5beb504d42ff6a9de9</Anchor>
    <Abstract>Unmap a mapped object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::ObjectMap</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::ObjectMap</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ObjectMap.html</Path>
    <Abstract>Central distributed object registry.</Abstract>
    <DeclaredIn>objectMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObjectMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ObjectMap</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ObjectMap.html</Path>
    <Anchor>a135f6e84c8a86818450d86110426e1f0</Anchor>
    <Abstract>Construct a new ObjectMap.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ObjectMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ObjectMap</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ObjectMap.html</Path>
    <Anchor>a5a96fb6e233d6da2031b0c2259306216</Anchor>
    <Abstract>Destroy an ObjectMap.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>register_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ObjectMap</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ObjectMap.html</Path>
    <Anchor>ad9e1435a452b905b85ac9793b54e1ed0</Anchor>
    <Abstract>Add and register a new object as master instance to this objectMap.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ObjectMap</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ObjectMap.html</Path>
    <Anchor>af6ec93bfb63767a7c487317f50cc89bf</Anchor>
    <Abstract>Map and return an object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ObjectMap</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ObjectMap.html</Path>
    <Anchor>ab80c4bf5a78c23e42b2eccdbe69fc23d</Anchor>
    <Abstract>Commits all registered objects.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ObjectMap</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ObjectMap.html</Path>
    <Anchor>a10a1628f21e1f3957a8ebb9e47ccf619</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ObjectMap</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ObjectMap.html</Path>
    <Anchor>a8a208a638cdedbde7c11d6b307c57b0a</Anchor>
    <Abstract>Worker for pack() and getInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ObjectMap</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ObjectMap.html</Path>
    <Anchor>ae19df2b8b85626a9b57df9249c0b7e3b</Anchor>
    <Abstract>Worker for unpack() and applyInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChangeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ObjectMap</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ObjectMap.html</Path>
    <Anchor>ab6c772ffc67ea834c0d0604cc3f9bd52</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyAttached</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ObjectMap</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ObjectMap.html</Path>
    <Anchor>a1f052fe1976108dbb13c973dfbcd81de</Anchor>
    <Abstract>Notify that this object has been registered or mapped.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::ObjectVersion</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::ObjectVersion</Scope>
    </TokenIdentifier>
    <Path>structco_1_1ObjectVersion.html</Path>
    <Abstract>A helper struct bundling an object identifier and version.</Abstract>
    <DeclaredIn>objectVersion.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NONE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::ObjectVersion</Scope>
    </TokenIdentifier>
    <Path>structco_1_1ObjectVersion.html</Path>
    <Anchor>a1b08d7665a17da285ac3dd96fa5836c7</Anchor>
    <Abstract>An unset object version.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::Packet</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::Packet</Scope>
    </TokenIdentifier>
    <Path>structco_1_1Packet.html</Path>
    <Abstract>A packet send over the network.</Abstract>
    <DeclaredIn>packets.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::Packet</Scope>
    </TokenIdentifier>
    <Path>structco_1_1Packet.html</Path>
    <Anchor>aff3724a8aba8cb0aae72be7940783b13</Anchor>
    <Abstract>Total size, set by the most specific sub-struct.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::Packet</Scope>
    </TokenIdentifier>
    <Path>structco_1_1Packet.html</Path>
    <Anchor>ad7603b23bd35358e6dcb3a895f99c49f</Anchor>
    <Abstract>The packet (receiver) type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>command</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::Packet</Scope>
    </TokenIdentifier>
    <Path>structco_1_1Packet.html</Path>
    <Anchor>a9a92967b0a995a06f493cb05af375ead</Anchor>
    <Abstract>The specific command name.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::NodePacket</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::NodePacket</Scope>
    </TokenIdentifier>
    <Path>structco_1_1NodePacket.html</Path>
    <Abstract>Packet sent to and handled by an co::Node.</Abstract>
    <DeclaredIn>packets.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::NodeCommandPacket</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::NodeCommandPacket</Scope>
    </TokenIdentifier>
    <Path>structco_1_1NodeCommandPacket.html</Path>
    <Abstract>Packet sent to and handled by an co::Node.</Abstract>
    <DeclaredIn>packets.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::ObjectPacket</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::ObjectPacket</Scope>
    </TokenIdentifier>
    <Path>structco_1_1ObjectPacket.html</Path>
    <Abstract>Packet sent to and handled by an co::Object.</Abstract>
    <DeclaredIn>packets.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::PluginRegistry</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::PluginRegistry</Scope>
    </TokenIdentifier>
    <Path>classco_1_1PluginRegistry.html</Path>
    <Abstract>The registry for all loaded Equalizer plugins.</Abstract>
    <DeclaredIn>pluginRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::PluginRegistry</Scope>
    </TokenIdentifier>
    <Path>classco_1_1PluginRegistry.html</Path>
    <Anchor>a16b437824214e00c9fbed69dae286b00</Anchor>
    <Abstract>Add a new directory to search for compressor DSOs during init().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::PluginRegistry</Scope>
    </TokenIdentifier>
    <Path>classco_1_1PluginRegistry.html</Path>
    <Anchor>a7ae16952b19b12040da13dfe15a0ac36</Anchor>
    <Abstract>Remove a plugin directory.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectories</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::PluginRegistry</Scope>
    </TokenIdentifier>
    <Path>classco_1_1PluginRegistry.html</Path>
    <Anchor>ac80d3b95ef3cb68a4d147c85ed564404</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::QueueMaster</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::QueueMaster</Scope>
    </TokenIdentifier>
    <Path>classco_1_1QueueMaster.html</Path>
    <Abstract>The producer end of a distributed queue.</Abstract>
    <DeclaredIn>queueMaster.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QueueMaster</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::QueueMaster</Scope>
    </TokenIdentifier>
    <Path>classco_1_1QueueMaster.html</Path>
    <Anchor>aa449840c7f1aa0898935ceaa71822db3</Anchor>
    <Abstract>Construct a new queue master.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~QueueMaster</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::QueueMaster</Scope>
    </TokenIdentifier>
    <Path>classco_1_1QueueMaster.html</Path>
    <Anchor>a8061a372a54206234889bdbce52a0540</Anchor>
    <Abstract>Destruct this queue master.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::QueueMaster</Scope>
    </TokenIdentifier>
    <Path>classco_1_1QueueMaster.html</Path>
    <Anchor>a8dc2e86f625c084a5ededf9f957304db</Anchor>
    <Abstract>Enqueue a new item.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::QueueMaster</Scope>
    </TokenIdentifier>
    <Path>classco_1_1QueueMaster.html</Path>
    <Anchor>a978b7df8f9806c5911bd46aca4721534</Anchor>
    <Abstract>Remove all enqueued items.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::QueueGetItemPacket</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::QueueGetItemPacket</Scope>
    </TokenIdentifier>
    <Path>structco_1_1QueueGetItemPacket.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::QueueItemPacket</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::QueueItemPacket</Scope>
    </TokenIdentifier>
    <Path>structco_1_1QueueItemPacket.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::QueueEmptyPacket</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::QueueEmptyPacket</Scope>
    </TokenIdentifier>
    <Path>structco_1_1QueueEmptyPacket.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::QueueSlave</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::QueueSlave</Scope>
    </TokenIdentifier>
    <Path>classco_1_1QueueSlave.html</Path>
    <Abstract>The consumer end of a distributed queue.</Abstract>
    <DeclaredIn>queueSlave.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QueueSlave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::QueueSlave</Scope>
    </TokenIdentifier>
    <Path>classco_1_1QueueSlave.html</Path>
    <Anchor>a3f07d8c0f66cf86321ef8c860c07eb10</Anchor>
    <Abstract>Construct a new queue consumer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~QueueSlave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::QueueSlave</Scope>
    </TokenIdentifier>
    <Path>classco_1_1QueueSlave.html</Path>
    <Anchor>ae708141d3826e435df568653b542984f</Anchor>
    <Abstract>Destruct this new queue consumer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::QueueSlave</Scope>
    </TokenIdentifier>
    <Path>classco_1_1QueueSlave.html</Path>
    <Anchor>a9345cfcad35e780d2d68d07bd1600d1b</Anchor>
    <Abstract>Pop an item from the distributed queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::Serializable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::Serializable</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Serializable.html</Path>
    <Abstract>Base class for distributed, inheritable objects.</Abstract>
    <DeclaredIn>serializable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Serializable</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Serializable.html</Path>
    <Anchor>abc20868064b14888e2edc51cbcedcac2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Serializable</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Serializable.html</Path>
    <Anchor>ab47812a4a024c8d8f9cf6d11c86bcfb9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Serializable</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Serializable.html</Path>
    <Anchor>a62af1fe830b58fe934c4abbd7e7370f1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Serializable</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Serializable.html</Path>
    <Anchor>a422cc5f12a197bb637fd9eb08c06ba6f</Anchor>
    <Abstract>Commit a new version of this object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Serializable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Serializable</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Serializable.html</Path>
    <Anchor>a7874cfdd6d94e2636c39b90e3faca0d8</Anchor>
    <Abstract>Construct a new Serializable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Serializable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Serializable</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Serializable.html</Path>
    <Anchor>aa20f8eadfd785a4bf8c774459f73a194</Anchor>
    <Abstract>Construct an unmapped, unregistered copy of an serializable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Serializable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Serializable</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Serializable.html</Path>
    <Anchor>ac2976fff4a4969fc50c1523528028b67</Anchor>
    <Abstract>Destruct the serializable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Serializable</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Serializable.html</Path>
    <Anchor>a1a769d13db52754bebdd91edad008a82</Anchor>
    <Abstract>Worker for pack() and getInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Serializable</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Serializable.html</Path>
    <Anchor>a80a9655c5c78990e9400f6e73a3b2da7</Anchor>
    <Abstract>Worker for unpack() and applyInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChangeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Serializable</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Serializable.html</Path>
    <Anchor>a9b6c0c9c67f352e8ddb68b7505146017</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Serializable</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Serializable.html</Path>
    <Anchor>ae0f8e5921de9a8a4adb96aa96d1d3023</Anchor>
    <Abstract>Add dirty flags to mark data for distribution.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsetDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Serializable</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Serializable.html</Path>
    <Anchor>a3ccbd9df912ff09947fc65f332f7adb6</Anchor>
    <Abstract>Remove dirty flags to clear data from distribution.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyAttached</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Serializable</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Serializable.html</Path>
    <Anchor>ae28d51925aa9ecd3f148e646f00661ae</Anchor>
    <Abstract>Notify that this object has been registered or mapped.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::Version</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Version.html</Path>
    <Abstract>Information about the current Collage version.</Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Version</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Version.html</Path>
    <Anchor>ac3f0619d97709dd230179404e3b199ad</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Version</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Version.html</Path>
    <Anchor>a003eaba383dde3ab4afab8808be982d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Version</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Version.html</Path>
    <Anchor>ad8bc0fef730ad23883f91654e17d88f8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Version</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Version.html</Path>
    <Anchor>a2ce3d3058aeb389c129ebd925f5d66d8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Version</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Version.html</Path>
    <Anchor>a64e78d87829e2e82cdcdd5cdf6887a52</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Version</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Version.html</Path>
    <Anchor>a3816bde8ab3cef5f3dc1d975976062f0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFloat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Version</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Version.html</Path>
    <Anchor>aa477a9a697d0506c25f3803e8eb5e347</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Version</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Version.html</Path>
    <Anchor>a0a22e931f6795202ef5c37fbb73f73fb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Version</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Version.html</Path>
    <Anchor>a67fe85be9c5dcb085e54fa9a7ecea4bc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::WorkerThread</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>co::WorkerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1WorkerThread.html</Path>
    <Abstract>A worker thread.</Abstract>
    <DeclaredIn>worker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WorkerThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::WorkerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1WorkerThread.html</Path>
    <Anchor>a2cbfa1bac3be2d103e5d3594f4832699</Anchor>
    <Abstract>Construct a new worker thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WorkerThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::WorkerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1WorkerThread.html</Path>
    <Anchor>a03ba78671846dd2468484b600d9c779c</Anchor>
    <Abstract>Destruct the worker.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWorkerQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::WorkerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1WorkerThread.html</Path>
    <Anchor>a3d6869473a66d76e37db74283cfff12e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::WorkerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1WorkerThread.html</Path>
    <Anchor>ad767fb720bd064d6311de9c01ce46022</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::WorkerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1WorkerThread.html</Path>
    <Anchor>ad3c432855270716582ffb9c4dba52b16</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::WorkerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1WorkerThread.html</Path>
    <Anchor>abb8af8737b55f955e9af563323c89bec</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyIdle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::WorkerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1WorkerThread.html</Path>
    <Anchor>a35910ebf38c096f6d2adc39ef2c1f3dd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::Zeroconf</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::Zeroconf</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Zeroconf.html</Path>
    <Abstract>A zeroconf communicator.</Abstract>
    <DeclaredIn>zeroconf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Zeroconf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Zeroconf</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Zeroconf.html</Path>
    <Anchor>addb26ef01f79a34c18b2bc68f787fa29</Anchor>
    <Abstract>Create a copy of a zeroconf communicator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Zeroconf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Zeroconf</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Zeroconf.html</Path>
    <Anchor>a028b8b7a87ba9a5cf43d02eff66118ee</Anchor>
    <Abstract>Destruct this zeroconf communicator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Zeroconf</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Zeroconf.html</Path>
    <Anchor>a7915088625bd739c00c503c7ca5a48c5</Anchor>
    <Abstract>Assign the data from another zeroconf communicator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Zeroconf</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Zeroconf.html</Path>
    <Anchor>a253559f4f7796dd7054beba882abbca9</Anchor>
    <Abstract>Set a key/value pair to be announced.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInstances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Zeroconf</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Zeroconf.html</Path>
    <Anchor>ae7b8301959e52937401e2b0c87a5e4fa</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeys</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Zeroconf</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Zeroconf.html</Path>
    <Anchor>a7b9d514fcf7f864d19b1ac1a5373df58</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Zeroconf</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Zeroconf.html</Path>
    <Anchor>a135c60e6c85281ac2baa79dc5fa2b60e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Zeroconf</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Zeroconf.html</Path>
    <Anchor>a0a51819507cf0b26f43ccfca0004d153</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Abstract>The Equalizer client library.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>ab8c5fee2524651a7bca791a5628a0ae6</Anchor>
    <Abstract>Print the config event to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a8b300e2679d867aa5956e58673bee208</Anchor>
    <Abstract>Print the event to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a66326c3bb149a6e066c1ee41a2adbd3d</Anchor>
    <Abstract>Print the event type to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a1fce791b587a90a78aada36bba0617a6</Anchor>
    <Abstract>Print the resize event to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>aa8b2741920e67db50d64c81aa5f764e9</Anchor>
    <Abstract>Print the pointer event to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a21e92dde501ebb2ccc0baeda50802f33</Anchor>
    <Abstract>Print the key event to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a5766c020bfc63a23b27b92c9d7cb2c45</Anchor>
    <Abstract>Print the space mouse event to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a78fd1a64e3ae07419f7f312615034323</Anchor>
    <Abstract>Print the frame data to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>debugGLError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a2c88ebac255b00c867fcb631c210bb46</Anchor>
    <Abstract>Output an error OpenGL in a human-readable form to LBWARN.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>XSetCurrentDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>abdde92bdade38ed921669ab4426f5576</Anchor>
    <Abstract>Set the current X display connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>XGetCurrentDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a084f9d38c9fa4ca581fd21348a787725</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>af224bdaf1e8bf8f1030a3dd4c801a731</Anchor>
    <Abstract>Initialize the Equalizer client library.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>ac6e03dee1a0aa417b7be5360f796109b</Anchor>
    <Abstract>De-initialize the Equalizer client library.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a56d2e85b80d786794cd6b8fbb88ad8e6</Anchor>
    <Abstract>Convenience function to retrieve a configuration.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a544817973e20decb1189acfa9ad6d3d5</Anchor>
    <Abstract>Convenience function to release a configuration.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a48e35921d293b11a06ec4fd0d7ba74e2</Anchor>
    <Abstract>Output the statistic type to an std::ostream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a68bb54c580e9e183d662360e1c3fb943</Anchor>
    <Abstract>Output the statistic to an std::ostream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>ac902474a540c1c68a16a396827a24d02</Anchor>
    <Abstract>Print the window system name to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a5748a08f9fed206a50bedeb7c393d6a3</Anchor>
    <Abstract>co::Object serializer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a8a5b5b599394b478883e3c7bec60a429</Anchor>
    <Abstract>co::Object deserializer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SegmentVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a4c1471cfefaf635b9add19fec1376692</Anchor>
    <Abstract>A visitor to traverse segments.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ViewVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>aa59a81e32434a6d9c6c6c04e247e287d</Anchor>
    <Abstract>A visitor to traverse views.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObserverVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a0c8e50c1785eaa97f0647fc9e0c435f2</Anchor>
    <Abstract>A visitor to traverse channels.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChannelVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>ade237ed6059a20f00d621a0f73cac2bc</Anchor>
    <Abstract>A visitor to traverse channels.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CanvasVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>aab74463e4e7c58ef24bf15933023e69d</Anchor>
    <Abstract>A visitor to traverse canvases and children.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WindowVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>abf5e93a64568fae39ebd2ff5082b7ed6</Anchor>
    <Abstract>A visitor to traverse windows and children.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PipeVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a390186eff8531767e0d413222da19309</Anchor>
    <Abstract>A visitor to traverse pipes and children.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodeVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a7a4c10f78848f55130a5528cbabea7f1</Anchor>
    <Abstract>A visitor to traverse nodes and children.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LayoutVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a69e15b27d2d210c33d0fa066d6483b6c</Anchor>
    <Abstract>A visitor to traverse layouts and children.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a6bf052e7a5016cc2d2f976aff3a61c0e</Anchor>
    <Abstract>A visitor to traverse configs and children.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServerVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a26774eac4f363052d826863b82b59107</Anchor>
    <Abstract>A visitor to traverse servers and children.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>abd775c1fb76aa72e6598700811fc8551</Anchor>
    <Abstract>A vector of pointers to eq::Config.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Servers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a1edf358d5b75f1474e4a2a36e909b010</Anchor>
    <Abstract>A vector of pointers to eq::Server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a06bbe7fb4b6bfb37ea50417a50f3ab63</Anchor>
    <Abstract>A vector of pointers to eq::Node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pipes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a45e9afa7b2bb759ff7d05f465b2a7bdf</Anchor>
    <Abstract>A vector of pointers to eq::Pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Windows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>aafa8731f9bdf91df1842f2c70cf997eb</Anchor>
    <Abstract>A vector of pointers to eq::Window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Channels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>ae62ee75536c515d5d875e17765b5da6b</Anchor>
    <Abstract>A vector of pointers to eq::Channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Frames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a9577b0b3a00e66076dcb3fcf41592e52</Anchor>
    <Abstract>A vector of pointers to eq::Frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Images</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a52947f23e9a24ae716443100e64219fd</Anchor>
    <Abstract>A vector of pointers to eq::Image.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Observers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a1118fb06d27a384a790c8394e3313e4e</Anchor>
    <Abstract>A vector of pointers to eq::Observer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Canvases</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>ad6fb67248e56a637f161d71a0624337c</Anchor>
    <Abstract>A vector of pointers to eq::Canvas.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Layouts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>acfaed675008780246a4248475075bd75</Anchor>
    <Abstract>A vector of pointers to eq::Layout.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Segments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a3cf4fbb377a515d635472c0a9737f748</Anchor>
    <Abstract>A vector of pointers to eq::Segment.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Views</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>afbc86a14457111c66f1a9bad7662ea90</Anchor>
    <Abstract>A vector of pointers to eq::View.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Viewports</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>aae993d58136760200282c88b1e294b6e</Anchor>
    <Abstract>A vector of eq::Viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelViewports</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a1fa1f9acc95b132bb9cc814488ef78ce</Anchor>
    <Abstract>A vector of eq::PixelViewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Statistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a34126616a02adb2098b9306c4d02117a</Anchor>
    <Abstract>A vector of eq::Statistic events.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>ab2d8e16d799bb5549d6736ffe72e0539</Anchor>
    <Abstract>A const_iterator over a eq::Config vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServersCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>ab491eaf5afb2d0fc4bf4b9a633ba3559</Anchor>
    <Abstract>A const_iterator over a eq::Server vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodesCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>aa518af18d86bfe57db343ae2f24c92ee</Anchor>
    <Abstract>A const_iterator over a eq::Node vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PipesCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a61cc7ba15f0bc82ceb2ed95df7a2c812</Anchor>
    <Abstract>A const_iterator over a eq::Pipe vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WindowsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>afb4b7d3bc5820f38b6185cdb155ce2fe</Anchor>
    <Abstract>A const_iterator over a eq::Window vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChannelsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a8a01115c61d80844b7f015db233c15c4</Anchor>
    <Abstract>A const_iterator over a eq::Channel vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FramesIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a6d4eb6c471be40e49780098a55dcf482</Anchor>
    <Abstract>An iterator over a eq::Frame vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FramesCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a3868e5fd8849b9f6efdd2b268276e165</Anchor>
    <Abstract>A const_iterator over a eq::Frame vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImagesCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a19473def5400269df9d7453a364393f9</Anchor>
    <Abstract>A const_iterator over a eq::Image vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObserversCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a8b4d2ddfcaed41632b78bc56e7339d65</Anchor>
    <Abstract>A const_iterator over a eq::Observer vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CanvasesCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>abea00811accc9c76289f81620adac4bc</Anchor>
    <Abstract>A const_iterator over a eq::Canvas vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LayoutsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a79d6bddbd09539aeb0ab6acb52dd6950</Anchor>
    <Abstract>A const_iterator over a eq::Layout vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SegmentsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a20872d7e3dc6a204976c3dea40a06c30</Anchor>
    <Abstract>A const_iterator over a eq::Segment vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ViewsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a7c7ed6eb726046f718b4f6f3bb7ff26d</Anchor>
    <Abstract>A const_iterator over a eq::View vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ViewportsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a6e9b6b95739ff10b3fd35cf2e5224615</Anchor>
    <Abstract>A const_iterator over a eq::Viewport vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelViewportsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a54568cb2a70272fb054b6c117958c060</Anchor>
    <Abstract>A const_iterator over a eq::PixelViewport vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StatisticsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a5499638aba15399261311864923381b0</Anchor>
    <Abstract>A const_iterator over a eq::Statistic events vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClientPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a5ee6f3abb96fbc2830e28a0cea662134</Anchor>
    <Abstract>A reference-counted pointer to an eq::Client.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstClientPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>ae34be59733f89d13ea90510bcf490c8b</Anchor>
    <Abstract>A reference-counted pointer to a const eq::Client.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ServerPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>ad75e9ddaac491699ac5ff3424ede468a</Anchor>
    <Abstract>A reference-counted pointer to an eq::Server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FrameDataPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a356556e9655ddc60acbdc5b082591d6a</Anchor>
    <Abstract>A reference-counted pointer to an eq::FrameData.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BitmapFont</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a2c4c3cfa4e0356d4d27d8bb8848db2cf</Anchor>
    <Abstract>The bitmap font used in the client library.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObjectManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a10728048122da7c7ecc30f5881f86ddd</Anchor>
    <Abstract>The OpenGL object manager used in the client library.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FrustumCullerf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>ac4c562819ace2f4afbb3c76f8d7a2223</Anchor>
    <Abstract>Frustum culling helper.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Strings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>abc21d14cc2266e2303a2760362abe116</Anchor>
    <Abstract>A vector of std::strings.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vectorub</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>aafbe9db048300ee4ec1108a77e4905f3</Anchor>
    <Abstract>A vector of bytes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vectorus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>ad7c5e23879a07869da425424ca76cc66</Anchor>
    <Abstract>A vector of unsigned shorts.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a2542a21a229916c36ca96d5ceddf4f81</Anchor>
    <Abstract>A const_iterator over a std::string vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_PLUGIN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a25e3df6ef4e8540f31b63c8189b38062a0f3bf12ad7ad1aa9536242d2d6ca37ed</Anchor>
    <Abstract>Plugin usage (256)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_INIT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a25e3df6ef4e8540f31b63c8189b38062ae138bd093257a7b17cc71ad265972660</Anchor>
    <Abstract>Initialization (512)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_ASSEMBLY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a25e3df6ef4e8540f31b63c8189b38062a923e93199e0c12a44c90bd26311987d1</Anchor>
    <Abstract>Compositing tasks (1024)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_TASKS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a25e3df6ef4e8540f31b63c8189b38062a3a6bc02f0ee6bd2605f40cb098656dbb</Anchor>
    <Abstract>Rendering tasks (2048)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_STATS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a25e3df6ef4e8540f31b63c8189b38062a6d02ac65656b779ad6f59e4cda5e5b7c</Anchor>
    <Abstract>Statistic events (4096)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_SERVER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a25e3df6ef4e8540f31b63c8189b38062a55e394f8de643860e54d84d7ba65a882</Anchor>
    <Abstract>Server-side logs (8192)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_CUSTOM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>a25e3df6ef4e8540f31b63c8189b38062aacdc559c1a8930256f4e0729d8ca224a</Anchor>
    <Abstract>User-defined log topics (65536)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW_SYSTEM_AGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>aac1fbe8a860e2303d20dbecaaeb13936ab209daf08e1e3b2a770a24f02de1b137</Anchor>
    <Abstract>AGL/Carbon.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW_SYSTEM_GLX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>aac1fbe8a860e2303d20dbecaaeb13936a1efab7e33a3a06aa53180fbadfb4593a</Anchor>
    <Abstract>GLX/X11.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW_SYSTEM_WGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq</Scope>
    </TokenIdentifier>
    <Path>namespaceeq.html</Path>
    <Anchor>aac1fbe8a860e2303d20dbecaaeb13936a897f1a67c3d615cf87f76b33da53451d</Anchor>
    <Abstract>WGL/Win32.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Canvas</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Canvas.html</Path>
    <Abstract>A canvas represents a logical 2D projection surface.</Abstract>
    <DeclaredIn>canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Canvas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Canvas.html</Path>
    <Anchor>aa2cf3ef2dd96f30ab2dc437805f1fe2f</Anchor>
    <Abstract>Construct a new canvas.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Canvas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Canvas.html</Path>
    <Anchor>a627544d5a5ccd6619b8cc4a7ad8fbb55</Anchor>
    <Abstract>Destruct this canvas.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Canvas.html</Path>
    <Anchor>a5c9e8575e8a53f1b9d6260196ad16116</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Channel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Abstract>A channel represents a two-dimensional viewport within a Window.</Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a72c8e005e32e31fa4c3fc17848a3b70f</Anchor>
    <Abstract>Construct a new channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a59b409911dfb43afecaa9e61c277e459</Anchor>
    <Abstract>Destruct the channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a1c51f29921019940b1a198e1373316be</Anchor>
    <Abstract>Process a received event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a0261f19231bb83f26d684ae3f80f3e6c</Anchor>
    <Abstract>Draw a statistics overlay.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outlineViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a9d077c581b2bb7e15dea334bb42a183c</Anchor>
    <Abstract>Outline the current pixel viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStopped</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a084a5dca9d9666133d6e34d390a3885a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>af29f45f7d2019fdb67b619264f765f20</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a2a933cb651f7c78c733aae0ac31678f2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a3165bcc940ef62efd3d8487226d471cf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>aa2031bc166158329e3199d036a6395f5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a3ce7eb6039e36686d5e98722aab1bc3e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a106fd0001b1c3fa06f4c0fad62be7f9f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a8453e2a5baa6bf472f1ea9d52f5deee9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>aa4f3b37a7613bb14988d4101cf9a13db</Anchor>
    <Abstract>Get the GLEW context for this channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getObjectManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>acaebd915dd5d87a31b356cf77b8a2289</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDrawableConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a91d57b81adcf28042a21f04f6d18249a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNativeView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>acdb554d49c95987e80ae36f2fbe9768a</Anchor>
    <Abstract>Get the channel&amp;#39;s native view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNativeView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a62e79bb7f8aff97c8532745bb6724387</Anchor>
    <Abstract>const-version of getNativeView()</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>af9a8a8dd467ce02827b215c9d4955bfc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUniqueColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>af06f9bd3b269b531ed9d079390a3b7c8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getJitter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>aefa2c1642b561df956d39bddedac89d8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInputFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>ab3f02e50907601cb94835f11a6bf5ab7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOutputFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a0dfd7f7bc84c49569913062cb1cfff56</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>ad53f64ab02fcdba2b9bd39a8e060497e</Anchor>
    <Abstract>Get the channel&amp;#39;s current View.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a48e142b7748e22de3f0aba42c27b9d82</Anchor>
    <Abstract>Const version of getView().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a64b87d5cffcc5ac69fded8f8ce9e6c6a</Anchor>
    <Abstract>Returns an orthographic frustum for 2D operations on the view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a926a177e388b962d1dd21aff6499ecad</Anchor>
    <Abstract>Apply the current rendering buffer, including the color mask.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyColorMask</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a5610f461be815bb074e5428b82d7b6be</Anchor>
    <Abstract>Apply the current color mask.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a8d6c22adc2fa5ec39924b7fd3c43215b</Anchor>
    <Abstract>Apply the OpenGL viewport for the current rendering task.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a941eabdb79a7ab2dfdf490c4773e03f9</Anchor>
    <Abstract>Apply the frustum matrix for the current rendering task.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyPerspective</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a88500d60acb8d27bcd34aec1ce6a51b6</Anchor>
    <Abstract>Apply the perspective frustum matrix for the current rendering task.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyOrtho</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a8b9889609bd07b1c25a7d7667aa8982b</Anchor>
    <Abstract>Apply the orthographic frustum matrix for the current rendering task.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyScreenFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>ae2392295223f0fc200cf2631fc48e9c2</Anchor>
    <Abstract>Apply an orthographic frustum for pixel-based 2D operations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyHeadTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>ab9f1d4a8239a6bf90f9f910d2931f016</Anchor>
    <Abstract>Apply the transformation to position the view frustum.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyPerspectiveTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a4e95cd4ac5c44cc87ac98006b90cccc1</Anchor>
    <Abstract>Apply the transformation to position the perspective view frustum.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyOrthoTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a4a9d5c19e6dbabe2e93b13599c7adb86</Anchor>
    <Abstract>Apply the transformation to position the orthographic view frustum.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>aa91cab2bab5bf9e9e0547da07e665509</Anchor>
    <Abstract>Apply the current alternate frame buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a61131e57bc6eb20146e0d9ef9da19dc4</Anchor>
    <Abstract>Rebind the current alternate FBO of the channel or window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetRegions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>aca09ce31fc57e9206e5e32b5534e5078</Anchor>
    <Abstract>Reset the declared regions of interest.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>declareRegion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>afb4e458a8b098835ed9bb0fbde85838a</Anchor>
    <Abstract>Declare a region covered by the current draw or assemble operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>declareRegion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a708bbe48e12da45518afe9ea10a3c581</Anchor>
    <Abstract>Convenience method to declare a region in relative coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRegion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>ac4e08ee39cf717c06c8a98c41b16e186</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRegions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a6bfb8e74f3ae8809cbc57ffe1afaa762</Anchor>
    <Abstract>Get the current regions of interest.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameTilesStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a06f740cedb6494047d062a601bcf3f32</Anchor>
    <Abstract>Start a batch of tile rendering operations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameTilesFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a200133cee729269ef781ac9ff9c7d6e6</Anchor>
    <Abstract>Finish a batch of tile rendering operations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyViewportChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>aa10b4059f4f0e76008b8b8dc5ee2da76</Anchor>
    <Abstract>Notification that parameters influencing the vp/pvp have changed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyStopFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>ae5dfe04ee55e9648d00ccc9555ff887e</Anchor>
    <Abstract>Notify interruption of the rendering.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a1a0b8a8e6b4a9ea8dc2d13948d8eead8</Anchor>
    <Abstract>Start a frame by unlocking all child resources.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>adfd3597232a2cf6f1a0cb84e6aab49d5</Anchor>
    <Abstract>Signal the completion of a frame to the parent.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseFrameLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a0e9d398287d0fd64cfc59f452c8727b2</Anchor>
    <Abstract>Release the local synchronization of the parent for a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupAssemblyState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>ad89d04037e6a27a4f40f6fbac10757a8</Anchor>
    <Abstract>Setup the OpenGL state for a readback or assemble operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetAssemblyState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a717cb0f42d2c6506bc95712ae67e3aba</Anchor>
    <Abstract>Reset the OpenGL state after an assembly operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a446d2afb18d470e61aef8b4c086f0e44</Anchor>
    <Abstract>Initialize this channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>aa9ada45532ccf0f7f21a7a442eb60708</Anchor>
    <Abstract>Exit this channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a2ca439fc081e88927327ef35eb186ae9</Anchor>
    <Abstract>Start rendering a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a171dc94f9b391944f588ae3c968954a7</Anchor>
    <Abstract>Finish rendering a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameDrawFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a812091937b27ebe42ecd47d5a7e0c250</Anchor>
    <Abstract>Finish drawing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameClear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a34f213322bb0a91807fd69e9059dda80</Anchor>
    <Abstract>Clear the frame buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameDraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>ac1af3ddaf4318a3ea3a8030a2be0f006</Anchor>
    <Abstract>Draw the scene.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameAssemble</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a010a947e9d3b105a7c07e1c4d56c7952</Anchor>
    <Abstract>Assemble all input frames.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameReadback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a56e5ed7f7178792095384c7de9c6e869</Anchor>
    <Abstract>Read back the rendered frame buffer into the output frames.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameViewStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>a6ca127494fdefe49c30365166ed155b5</Anchor>
    <Abstract>Start updating a destination channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameViewFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Channel.html</Path>
    <Anchor>afaf260801ed29e27f11c8ee397a7114b</Anchor>
    <Abstract>Finish updating a destination channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::ChannelStatistics</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::ChannelStatistics</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ChannelStatistics.html</Path>
    <Abstract>Samples one channel statistics event.</Abstract>
    <DeclaredIn>channelStatistics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChannelStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ChannelStatistics</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ChannelStatistics.html</Path>
    <Anchor>a75ba5420b179ff75d1e8feecb4f04ced</Anchor>
    <Abstract>Construct a statistics sampler and sample the start time.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ChannelStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ChannelStatistics</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ChannelStatistics.html</Path>
    <Anchor>afd017d5a91f985044a70c800eee2b224</Anchor>
    <Abstract>Destruct the sampler, sample the end time and send the event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Client</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Client.html</Path>
    <Abstract>The client represents a network node of the application in the cluster.</Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Client</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Client.html</Path>
    <Anchor>af34dc01e57edf801237f5962370467a3</Anchor>
    <Abstract>Construct a new client.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Client</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Client.html</Path>
    <Anchor>ad592339f1d9003027cfad58919492b15</Anchor>
    <Abstract>Destruct the client.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>connectServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Client.html</Path>
    <Anchor>a6e3170cdc3a5e924fac37932aedb4c71</Anchor>
    <Abstract>Open and connect an Equalizer server to the local client.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disconnectServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Client.html</Path>
    <Anchor>ae1197f3e105a3798cc5211f827c0dd0f</Anchor>
    <Abstract>Disconnect and close the connection to an Equalizer server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Client.html</Path>
    <Anchor>ad0cd1d6b1035606224d7da241637a74b</Anchor>
    <Abstract>Initialize a local, listening node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Client.html</Path>
    <Anchor>a74ebd28beffa808d58b1e0e821d73b86</Anchor>
    <Abstract>De-initialize a local, listening node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasCommands</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Client.html</Path>
    <Anchor>ac9789d0de69149494978372671d08ec6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMainThreadQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Client.html</Path>
    <Anchor>a862ce6f35eb534c0c921fd2c07f46e47</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clientLoop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Client.html</Path>
    <Anchor>a5c4f5b97e8c41d1db3da7f6be0f81030</Anchor>
    <Abstract>Implements the processing loop for render clients.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitClient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Client.html</Path>
    <Anchor>af7f2b96b731b9a7808d9fa5633b026d6</Anchor>
    <Abstract>Exit the process cleanly on render clients.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::CommandQueue</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1CommandQueue.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1CommandQueue.html</Path>
    <Anchor>ab836c4768bf4e3a1682d7208de4659bf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pushFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1CommandQueue.html</Path>
    <Anchor>a65be184c1f003cd9a0681f50729f3e91</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wakeup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1CommandQueue.html</Path>
    <Anchor>a4a5d5bf9297ada85869155650fc19f44</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1CommandQueue.html</Path>
    <Anchor>a0a1cb635def15ca4c465b13825f6eb34</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tryPop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1CommandQueue.html</Path>
    <Anchor>aefabbd5c3d704bd26b302248970d4098</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetWaitTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1CommandQueue.html</Path>
    <Anchor>a800b9a2e0c7d68f8108b56b41fcde2d4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Compositor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Compositor.html</Path>
    <Abstract>A set of functions performing compositing for a set of input frames.</Abstract>
    <DeclaredIn>compositor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assembleFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Compositor.html</Path>
    <Anchor>a8a0b77067d7d37dfd108de28c5ac58c2</Anchor>
    <Abstract>Assemble all frames in an arbitrary order using the fastest implemented algorithm on the given channe...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assembleFramesSorted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Compositor.html</Path>
    <Anchor>a9002afd3ed306344123124cd504ec2fb</Anchor>
    <Abstract>Assemble all frames in the given order using the fastest implemented algorithm on the given channel...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assembleFramesUnsorted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Compositor.html</Path>
    <Anchor>a58197472aea059c279ab715b754360ae</Anchor>
    <Abstract>Assemble all frames in the order they become available directly on the given channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assembleFramesCPU</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Compositor.html</Path>
    <Anchor>acf83f2a026b8b86620c3689108c235e3</Anchor>
    <Abstract>Assemble all frames in the given order in a memory buffer using the CPU before assembling the result ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mergeFramesCPU</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Compositor.html</Path>
    <Anchor>ae0393bb9cf0f73330ebfb557ad66f1af</Anchor>
    <Abstract>Merge the provided frames in the given order into one image in main memory.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mergeFramesCPU</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Compositor.html</Path>
    <Anchor>a3e3b7bcd3f03d45d8f82159a570644dc</Anchor>
    <Abstract>Merge the provided frames into one main memory buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assembleFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Compositor.html</Path>
    <Anchor>ae94eb1d782b17d82191e06a8f46fd6c3</Anchor>
    <Abstract>Assemble a frame into the frame buffer using the default algorithm.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assembleImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Compositor.html</Path>
    <Anchor>a8da8b24ed7e099443cb06ff0c699c011</Anchor>
    <Abstract>Assemble an image into the frame buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupStencilBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Compositor.html</Path>
    <Anchor>a213c1d2dc0662564806fae00b560fcd0</Anchor>
    <Abstract>Setup the stencil buffer for a pixel compound recomposition.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearStencilBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Compositor.html</Path>
    <Anchor>aad0541a100a8ad26a9ab021d4708c72a</Anchor>
    <Abstract>Clear the stencil buffer after a pixel compound recomposition.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupAssemblyState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Compositor.html</Path>
    <Anchor>a4868cd046149e1903193f51f55f99249</Anchor>
    <Abstract>Setup the OpenGL state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetAssemblyState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Compositor.html</Path>
    <Anchor>ab188dfdd905dcdf208b2d24dd64378f1</Anchor>
    <Abstract>Reset the OpenGL state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assembleImage2D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Compositor.html</Path>
    <Anchor>a31bdda17079d729007bad3190e250330</Anchor>
    <Abstract>Start a tile-based assembly of the image color attachment.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assembleImageDB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Compositor.html</Path>
    <Anchor>a88bc77090210c2da92bf46f18b0b2f71</Anchor>
    <Abstract>Start a Z-based assembly of the image color and depth attachment.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assembleImageDB_FF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Compositor.html</Path>
    <Anchor>ae4fe4a778e57d9c519f3b27fcc5c235a</Anchor>
    <Abstract>Start a Z-based assembly of the image color and depth attachment, based on OpenGL 1...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assembleImageDB_GLSL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Compositor.html</Path>
    <Anchor>a639f5ea106298d8b91889280fd7f48fc</Anchor>
    <Abstract>Start a Z-based assembly of the image color and depth attachment, using GLSL.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>declareRegion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Compositor.html</Path>
    <Anchor>abaf4ef4823a03a6a5045a4b09abac717</Anchor>
    <Abstract>Declare the region covered by the image on the operation&amp;#39;s channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startWaitFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Compositor.html</Path>
    <Anchor>a467a923b521eefa659b8bfc411200ed0</Anchor>
    <Abstract>Start waiting on a set of input frames.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Compositor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Compositor.html</Path>
    <Anchor>a64a6a780a7d573d55afc143956265dea</Anchor>
    <Abstract>Wait for one input frame from a set of pending frames.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Compositor::ImageOp</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Compositor::ImageOp</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Compositor_1_1ImageOp.html</Path>
    <Abstract>A structure describing an image assembly task.</Abstract>
    <DeclaredIn>compositor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::Compositor::ImageOp</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Compositor_1_1ImageOp.html</Path>
    <Anchor>ad6ce9509f3f7ab82caa34b360a4774ea</Anchor>
    <Abstract>The destination channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::Compositor::ImageOp</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Compositor_1_1ImageOp.html</Path>
    <Anchor>a6e52e660098e32ae0058b2184b336e7c</Anchor>
    <Abstract>The Frame buffer attachments to use.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>offset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::Compositor::ImageOp</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Compositor_1_1ImageOp.html</Path>
    <Anchor>a227f619d8fcb614c5b60c656b2fedf73</Anchor>
    <Abstract>The offset wrt destination window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::Compositor::ImageOp</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Compositor_1_1ImageOp.html</Path>
    <Anchor>a4b25214d03e7603374db857b4a51ea92</Anchor>
    <Abstract>The zoom Filter from Frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::Compositor::ImageOp</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Compositor_1_1ImageOp.html</Path>
    <Anchor>a295c135977263b9c657b919557869617</Anchor>
    <Abstract>The pixel decomposition parameters.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::Compositor::ImageOp</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Compositor_1_1ImageOp.html</Path>
    <Anchor>ae923074670eb7d0e448e296529bd9039</Anchor>
    <Abstract>The zoom factor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::ComputeContext</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::ComputeContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ComputeContext.html</Path>
    <Abstract>The interface definition for API-specific GPGPU handling.</Abstract>
    <DeclaredIn>computeContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComputeContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ComputeContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ComputeContext.html</Path>
    <Anchor>aeff03aae05fea4d87983f866ccb463fe</Anchor>
    <Abstract>Create a new ComputeContext for the given accelerator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ComputeContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ComputeContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ComputeContext.html</Path>
    <Anchor>ac77e653e53ab093dd1072664e115dbaf</Anchor>
    <Abstract>Destroy the ComputeContext.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ComputeContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ComputeContext.html</Path>
    <Anchor>a4c97801a120e98ca41a55f4bebf7e870</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ComputeContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ComputeContext.html</Path>
    <Anchor>a142be87d7421ef34a8d9c8c14f8ceaf2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ComputeContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ComputeContext.html</Path>
    <Anchor>a6ec1e01f491bbd9695c410c8e6d242f9</Anchor>
    <Abstract>Initialize the ComputeContext.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ComputeContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ComputeContext.html</Path>
    <Anchor>a4514b44d0913a8baf9fa39d009d2326a</Anchor>
    <Abstract>De-initialize the ComputeContext.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ComputeContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ComputeContext.html</Path>
    <Anchor>ab0866f14fb60d2ff1827c8754db4bc5e</Anchor>
    <Abstract>Set a reason why the last operation failed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Config</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Abstract>A configuration is a visualization session driven by an application.</Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Config</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a24ceaa5a53077f2365936e366f3e1c6a</Anchor>
    <Abstract>Construct a new config.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Config</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>af7300b5dd65cd4c606ac2b93192d5ff7</Anchor>
    <Abstract>Destruct a config.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>af5d0f538b646d093dde405fface5e5ed</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a285a8c441e03962b59816a23f4e7349d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getApplicationNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>aff18b5a105284868c542f82f8624bad7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>ae12289fd67e831055842fe9299bcbff5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFinishedFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>ac26d5b8d543843d82ce0cf6bf779de42</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a38d679f6a32ab46893b774cda5a64304</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a3ff467f3ba31eba4e1cf3489a3d417e0</Anchor>
    <Abstract>Stop the config.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a7ff3f756bcd32e5395ba121da5d0ee13</Anchor>
    <Abstract>Get the current time in milliseconds.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a3cad43712d74cd70fc71685e1a76479e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>ab737fc73705d4b2faccc186b4948df40</Anchor>
    <Abstract>Initialize this configuration.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>aa875a18f0142e75ff07aeb0cf19781c8</Anchor>
    <Abstract>Exit this configuration.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a431751114b009db836162a1b2f515a93</Anchor>
    <Abstract>Update the configuration.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>aab076e0218e129e7153815ca1e3fea7c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a02292b5af1a174d3ad18b2ce6acad262</Anchor>
    <Abstract>Register a distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deregisterObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a898b69de30ecf77b36755790b3a47be8</Anchor>
    <Abstract>Deregister a distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>adfa8c145749c616c91cb35c210cfe15d</Anchor>
    <Abstract>Map a distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObjectNB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a99a1bd5ba358032a423a2b7e3c117b23</Anchor>
    <Abstract>Start mapping a distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObjectNB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a113a143cab82fa14cf01e0453e326eb9</Anchor>
    <Abstract>Start mapping a distributed object from a known master.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObjectSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a94ed62414e4a9eef62bb9a1bf27653d3</Anchor>
    <Abstract>Finalize the mapping of a distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmapObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a7469b839f92003f6655fe7e0b6758662</Anchor>
    <Abstract>Unmap a mapped object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>aa88c87bfe4b701ab49f63a3f0ba71fab</Anchor>
    <Abstract>Convenience method to deregister or unmap an object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a2b6caf07c2d2c49c7e5f0ffa2ba565be</Anchor>
    <Abstract>Request a new frame of rendering.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>ac58b80af53234ef0328132e0ece59128</Anchor>
    <Abstract>Finish the rendering of a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishAllFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a1fee6971e0ca4f23780e826a8cad3b06</Anchor>
    <Abstract>Finish rendering all pending frames.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseFrameLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a7640496e9f26336496b4a0e22e317e4e</Anchor>
    <Abstract>Release the local synchronization of the config for a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a78f8815883055982bcf23b4d1d27929c</Anchor>
    <Abstract>Asynchronously signal all channels to interrupt their rendering.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a69334fa2839a60b1980960cea8d80487</Anchor>
    <Abstract>Send an event to the application node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>ad8e6722c09b36019991179d58c3ca32b</Anchor>
    <Abstract>Get the next event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tryNextEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a1bf2aa3697324fc9f0b16f243d7cebd4</Anchor>
    <Abstract>Try to get the next event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a6daaeaf728dba24af9a714c5839b4fd1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>abf579d9c06df63504c20beafa7d59920</Anchor>
    <Abstract>Handle all config events.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a5def8c0ce40fd1d1541a5e5f9d7a9b5e</Anchor>
    <Abstract>Handle one config event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Super</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a39e01fa25f0165925890593031920850</Anchor>
    <Abstract>base class</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyAttached</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>af95daec497700fb324e8971c2f9f3ff4</Anchor>
    <Abstract>Notify that this object has been registered or mapped.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyDetach</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Config.html</Path>
    <Anchor>a6fef2762a09fb51109dfa299b8964836</Anchor>
    <Abstract>Notify that this object will be deregistered or unmapped.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::ConfigEvent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::ConfigEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1ConfigEvent.html</Path>
    <Abstract>A config event.</Abstract>
    <DeclaredIn>configEvent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::ConfigEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1ConfigEvent.html</Path>
    <Anchor>a13baf8465464b5eebb105f77b1f27312</Anchor>
    <Abstract>Construct a new config event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::ConfigEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1ConfigEvent.html</Path>
    <Anchor>a289bd4c81b829721fccdb8ace478d799</Anchor>
    <Abstract>the Event</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::ConfigParams</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ConfigParams.html</Path>
    <Abstract>Parameters for running a configuration.</Abstract>
    <DeclaredIn>configParams.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigParams</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ConfigParams.html</Path>
    <Anchor>a5af393c2f3898bc50832e2952ec04e0c</Anchor>
    <Abstract>Construct new configuration parameters.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ConfigParams</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ConfigParams.html</Path>
    <Anchor>a28816fea1f3e8c3f0580227ca5d26b6f</Anchor>
    <Abstract>Destruct this configuration parameters.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderClient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ConfigParams.html</Path>
    <Anchor>a6de2c91054dc24bdadba7a2b246f71ec</Anchor>
    <Abstract>Set the name of the render client executable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderClient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ConfigParams.html</Path>
    <Anchor>ae38fc2ff7b09022a90c955269e46494c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWorkDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ConfigParams.html</Path>
    <Anchor>ae0c000a734ba0239db84d9afb0c62d13</Anchor>
    <Abstract>Set the directory from which to launch the render client.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWorkDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ConfigParams.html</Path>
    <Anchor>a3b18f79a6a2813915b179f5595721fd1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ConfigParams.html</Path>
    <Anchor>af0421ab8808299bae7850bddb357097d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ConfigParams.html</Path>
    <Anchor>ab7c3e3d5b16ab13043b042d3c9e49b4e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLAG_NONE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ConfigParams.html</Path>
    <Anchor>abf176e181ba82494b9df202f6ada1aa9ad3d65e5639bf1c0aabd6c32938048222</Anchor>
    <Abstract>Unset all flags.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLAG_MULTIPROCESS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ConfigParams.html</Path>
    <Anchor>abf176e181ba82494b9df202f6ada1aa9a6cfc5f35d756fa5a1d9a939f557cab63</Anchor>
    <Abstract>Auto-config: one node per pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLAG_MULTIPROCESS_DB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::ConfigParams</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ConfigParams.html</Path>
    <Anchor>abf176e181ba82494b9df202f6ada1aa9ac3470834f0722babb94615d966d0029a</Anchor>
    <Abstract>one node per DB decomposition</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::ConfigStatistics</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::ConfigStatistics</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ConfigStatistics.html</Path>
    <Abstract>Samples one Config statistics event.</Abstract>
    <DeclaredIn>configStatistics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ConfigStatistics</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ConfigStatistics.html</Path>
    <Anchor>addc3fe54ddeb43fcb444a6c93328ee0e</Anchor>
    <Abstract>Construct a statistics sampler and sample the start time.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ConfigStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::ConfigStatistics</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1ConfigStatistics.html</Path>
    <Anchor>a373dbbd1fcdbd01003e5cd9e64e30234</Anchor>
    <Abstract>Destruct the sampler, sample the end time and send the event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::CUDAContext</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::CUDAContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1CUDAContext.html</Path>
    <Abstract>CUDA implementation of a ComputeContext.</Abstract>
    <DeclaredIn>cudaContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CUDAContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::CUDAContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1CUDAContext.html</Path>
    <Anchor>a6227e4374256709f195b494b086a0b23</Anchor>
    <Abstract>Create a new CUDA compute context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CUDAContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::CUDAContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1CUDAContext.html</Path>
    <Anchor>a22c079c50f22c6f676e2897d6a9fbe27</Anchor>
    <Abstract>Destroy the context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::CUDAContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1CUDAContext.html</Path>
    <Anchor>aa692e802b8b14cecc3212f4593962025</Anchor>
    <Abstract>Initialize the ComputeCtx.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::CUDAContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1CUDAContext.html</Path>
    <Anchor>ae5f8cfdc96dd5a0a2c741490b2732f5f</Anchor>
    <Abstract>De-initialize the ComputeCtx.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::ResizeEvent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::ResizeEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1ResizeEvent.html</Path>
    <Abstract>Event for a size or position change on a Window, Channel or View.</Abstract>
    <DeclaredIn>event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::ResizeEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1ResizeEvent.html</Path>
    <Anchor>ae4f1eb590da581f1fbb339d6115f49ab</Anchor>
    <Abstract>new X position, relative to parent</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::ResizeEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1ResizeEvent.html</Path>
    <Anchor>a9b17f2bd276d8ab2422dca6acb173a5c</Anchor>
    <Abstract>new Y position, relative to parent</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>w</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::ResizeEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1ResizeEvent.html</Path>
    <Anchor>aa78364bc5c48093baf546558753443d7</Anchor>
    <Abstract>new width</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>h</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::ResizeEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1ResizeEvent.html</Path>
    <Anchor>a1a58d69eeb416362be930142c2e248b6</Anchor>
    <Abstract>new height</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::ResizeEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1ResizeEvent.html</Path>
    <Anchor>a0a7ffb28b11e7288e3138440f23187d3</Anchor>
    <Abstract>view only: new width relative to initial width</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::ResizeEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1ResizeEvent.html</Path>
    <Anchor>ac00e8ab84c28100d0e82990371b27b9f</Anchor>
    <Abstract>view only: new height relative to initial height</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::PointerEvent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::PointerEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PointerEvent.html</Path>
    <Abstract>Event for a pointer (mouse) motion or click.</Abstract>
    <DeclaredIn>event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PointerEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PointerEvent.html</Path>
    <Anchor>a4a40782a9b4732cf6e72a39959bbec86</Anchor>
    <Abstract>X position relative to entity.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PointerEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PointerEvent.html</Path>
    <Anchor>a0d7d4e7409d66e031ba6a9bdea2b1ff1</Anchor>
    <Abstract>Y position relative to entity (0 is on top)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dx</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PointerEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PointerEvent.html</Path>
    <Anchor>aa3716971a7c24da831077df18896805d</Anchor>
    <Abstract>X position change since last event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PointerEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PointerEvent.html</Path>
    <Anchor>af50a0ed04f110a7be0838e17d305610a</Anchor>
    <Abstract>Y position change since last event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buttons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PointerEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PointerEvent.html</Path>
    <Anchor>a384c14fea22a3027e066de17109cd80f</Anchor>
    <Abstract>current state of all buttons</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>button</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PointerEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PointerEvent.html</Path>
    <Anchor>aa0a1ce26acc2bf036ec60be75fd661c7</Anchor>
    <Abstract>fired button</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PointerEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PointerEvent.html</Path>
    <Anchor>ac781e16193d1394bc52d0a35fac6310e</Anchor>
    <Abstract>x wheel rotation</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>yAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PointerEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PointerEvent.html</Path>
    <Anchor>a4c138031ace580f08a951fb899a8d0a7</Anchor>
    <Abstract>y wheel rotation</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::KeyEvent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::KeyEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1KeyEvent.html</Path>
    <Abstract>Event for a key press or release.</Abstract>
    <DeclaredIn>event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>key</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::KeyEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1KeyEvent.html</Path>
    <Anchor>ac163009f07a014947446c4fe38b1823e</Anchor>
    <Abstract>KeyCode for special keys, ascii code otherwise.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::MagellanEvent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::MagellanEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1MagellanEvent.html</Path>
    <Abstract>Event for a SpaceMouse movement or click.</Abstract>
    <DeclaredIn>event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>button</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::MagellanEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1MagellanEvent.html</Path>
    <Anchor>ac24b0830937e4ce9bbdb63bf3a8f1ac6</Anchor>
    <Abstract>fired button</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buttons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::MagellanEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1MagellanEvent.html</Path>
    <Anchor>abb6ef98ba7665dc530c3a23da4eadeb9</Anchor>
    <Abstract>current state of all buttons</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::MagellanEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1MagellanEvent.html</Path>
    <Anchor>a2def93fd40143417f7df98d91b699ab3</Anchor>
    <Abstract>X translation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>yAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::MagellanEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1MagellanEvent.html</Path>
    <Anchor>a459dc21fde69f6e26cfea70c91467933</Anchor>
    <Abstract>Y translation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::MagellanEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1MagellanEvent.html</Path>
    <Anchor>ad325c66022aec47e82ac42fd2a912678</Anchor>
    <Abstract>Z translation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xRotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::MagellanEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1MagellanEvent.html</Path>
    <Anchor>a752f4355ee6e0f98eed4c0e2082704aa</Anchor>
    <Abstract>X rotation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>yRotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::MagellanEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1MagellanEvent.html</Path>
    <Anchor>acc549ba56b93f9b614ad201858e2f468</Anchor>
    <Abstract>Y rotation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zRotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::MagellanEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1MagellanEvent.html</Path>
    <Anchor>a95538a4d4ec15ff46ddd40ff1150aa6b</Anchor>
    <Abstract>Z rotation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::UserEvent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::UserEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1UserEvent.html</Path>
    <Abstract>User-defined event.</Abstract>
    <DeclaredIn>event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::UserEvent</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1UserEvent.html</Path>
    <Anchor>af4a87d5ae16867bbc39eeb6f40ca960d</Anchor>
    <Abstract>Application-specific data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Event</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Abstract>Event structure to report window system and other events.</Abstract>
    <DeclaredIn>event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Event</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a85a2da4f329f577fac5cef4555735854</Anchor>
    <Abstract>Construct a new event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a59b00e50af547972ac5a3ea08a64986d</Anchor>
    <Abstract>The event type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a2da1a8333e78782ea83793dec8e1a7b0</Anchor>
    <Abstract>server-unique originator serial number</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>time</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>aefabb686ca2c7685c362ea9b120b9ba3</Anchor>
    <Abstract>The config time when the event was created.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>originator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a192ffbc305ce13a8ffee452220c32d38</Anchor>
    <Abstract>The identifier of the entity emitting the event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>context</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a310aabfc43279a68b53187708af4d39b</Anchor>
    <Abstract>The last rendering context for the pointer position.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW_EXPOSE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a17130c4e0196b1355e5dd01a91e58014a0020ec7857de2ba7dd4793137abbce61</Anchor>
    <Abstract>A window is dirty.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW_RESIZE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a17130c4e0196b1355e5dd01a91e58014a2b2e87b12fab9869ba0ba381bdf19f2c</Anchor>
    <Abstract>Window resize data in resize.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW_CLOSE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a17130c4e0196b1355e5dd01a91e58014aeb623d6e4348dbc37574e0d7409e458b</Anchor>
    <Abstract>A window has been closed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW_HIDE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a17130c4e0196b1355e5dd01a91e58014ab87d59e394623701adeec077b2529907</Anchor>
    <Abstract>A window is hidden.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW_SHOW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a17130c4e0196b1355e5dd01a91e58014a131228b132010137f0cca67950d25b13</Anchor>
    <Abstract>A window is shown.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW_SCREENSAVER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a17130c4e0196b1355e5dd01a91e58014adc690c557f09f3ad27b9b8c16f41b4b1</Anchor>
    <Abstract>A window screensaver request (Win32 only)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_POINTER_BUTTON_PRESS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a17130c4e0196b1355e5dd01a91e58014a0077e1306c27df0ce809d957c398a23c</Anchor>
    <Abstract>Channel pointer button press data in pointerButtonPress.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_POINTER_BUTTON_RELEASE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a17130c4e0196b1355e5dd01a91e58014a3657e832ee8a51bd83db58c2aafea748</Anchor>
    <Abstract>Channel pointer button release data in pointerButtonRelease.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW_POINTER_WHEEL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a17130c4e0196b1355e5dd01a91e58014afb446d5077c9321e59b55b96c8d5fb4f</Anchor>
    <Abstract>Window pointer movement data in pointerMotion.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW_POINTER_BUTTON_PRESS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a17130c4e0196b1355e5dd01a91e58014ad516cfbc4685f5837f69840ea8ff950a</Anchor>
    <Abstract>Window pointer button press data in pointerButtonPress.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW_POINTER_BUTTON_RELEASE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a17130c4e0196b1355e5dd01a91e58014aa17c6d9c2b95ac1251a0ab05253c4373</Anchor>
    <Abstract>Window pointer button release data in pointerButtonRelease.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>KEY_PRESS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a17130c4e0196b1355e5dd01a91e58014a95770fd2c89bd2bab6319dde897c881f</Anchor>
    <Abstract>Key press data in keyPress.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>KEY_RELEASE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a17130c4e0196b1355e5dd01a91e58014a7fd42b006d7f683411d0d46439f478a6</Anchor>
    <Abstract>Key release data in keyRelease.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_RESIZE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a17130c4e0196b1355e5dd01a91e58014a3608bacc5156e498db262600243d72f6</Anchor>
    <Abstract>Channel resize data in resize.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STATISTIC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a17130c4e0196b1355e5dd01a91e58014a40ac7cf9ec97b8ad075b19630baa3d7f</Anchor>
    <Abstract>Statistic event in statistic.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VIEW_RESIZE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a17130c4e0196b1355e5dd01a91e58014a55d6f89f2e822213a6a36d668a6161ab</Anchor>
    <Abstract>View resize data in resize.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EXIT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a17130c4e0196b1355e5dd01a91e58014ad20c726992dcb9455d14313ff44feb5a</Anchor>
    <Abstract>Exit request due to runtime error.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MAGELLAN_AXIS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a17130c4e0196b1355e5dd01a91e58014a58443b30a79388089b5cbbf9826c2089</Anchor>
    <Abstract>SpaceMouse movement data in magellan.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MAGELLAN_BUTTON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a17130c4e0196b1355e5dd01a91e58014afbce98bd543aadb7abbde7c15a678e8a</Anchor>
    <Abstract>SpaceMouse button data in magellan.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UNKNOWN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a17130c4e0196b1355e5dd01a91e58014a536d79014036ecd1647149d25c0a0091</Anchor>
    <Abstract>Event type not known by the event handler.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>USER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Event</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Event.html</Path>
    <Anchor>a17130c4e0196b1355e5dd01a91e58014a343293fd4589e0fc687624467a88a926</Anchor>
    <Abstract>User-defined events have to be of this type or higher.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::EventHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1EventHandler.html</Path>
    <Abstract>Base class for window system-specific event handlers.</Abstract>
    <DeclaredIn>eventHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1EventHandler.html</Path>
    <Anchor>a0100480171a68e5bd914f81caa2abe6c</Anchor>
    <Abstract>Construct a new event handler.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~EventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1EventHandler.html</Path>
    <Anchor>ae2509d24c8148b94b02756560970c4e9</Anchor>
    <Abstract>Destruct the event handler.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Exception</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Exception</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Exception.html</Path>
    <Abstract>Exception class for Equalizer operations.</Abstract>
    <DeclaredIn>exception.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Exception</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Exception</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Exception.html</Path>
    <Anchor>a8a9b055074699e47363ea1059d0d79b5</Anchor>
    <Abstract>Construct a new Exception.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Frame</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Abstract>A holder for a frame data and related parameters.</Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Frame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>a3dbd9ebf635bea27d452d851fb4889d0</Anchor>
    <Abstract>Construct a new frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Frame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>aa85bc69973622b01e6356ccad5e6aaa5</Anchor>
    <Abstract>Destruct the frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>a6090872d94e2f37b56e93995f37475a1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>aa74c441a0359f81a5f10a8aefa22912b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>a13d32a75c32fb2942fd83216e2397b75</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSubPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>adc58567f933c53a4d6d423c5dea0c5c5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>a72474bb0223fa04bb0ed340256c9d11b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>a4e0ed6f50b305c0571ab2593bfc3acba</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>a3a43f8dc1c3dc4d94c9751878b35ed28</Anchor>
    <Abstract>Set the filter applied to zoomed assemble operations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>a31e0b6b1b07d5ed5ec373dd8c4876c97</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImages</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>aa9260777770071354fd3c4934d07e96a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>a9bf841e6a2e0b635a27866b3896ce921</Anchor>
    <Abstract>Set the data for this frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>a0b2da0f1d8971572a2d84daa783e4e77</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>af9506dcd385f245251d32f64172690f2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>a786ac05f4defe8e37781c8de23049ac7</Anchor>
    <Abstract>Set the data for this frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>af528dc3bc99d96998154ea9db66880e4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>a2e2e6d0c25f09b0fe7f3186d48eca081</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>ad285a4851901cbb02429511cc3455695</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>a20c223710b9c1d3e5fb16d83ffc53317</Anchor>
    <Abstract>Disable the usage of a frame buffer attachment for all images.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlphaUsage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>aaf1a1a060721684099547eac9b40fa78</Anchor>
    <Abstract>Set alpha usage for newly allocated images.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>a8caa0eb590aabecf61eebb9c4e396b18</Anchor>
    <Abstract>Set the minimum quality after compression.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useCompressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>afc797c5b0760de738f2c0625f9824cf4</Anchor>
    <Abstract>Sets a compressor for compression for following transmissions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>ac4d4c64f3827081a8ae9ce36d3f84555</Anchor>
    <Abstract>Read back an image.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>ab6fffb11ff892c96adcafc01222335a2</Anchor>
    <Abstract>Read back a set of images.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startReadback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>a09e08d88a3b60543f48c40d991d876f2</Anchor>
    <Abstract>Start reading back a set of images for this frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>a9d63734156987fa799962c37d336a71b</Anchor>
    <Abstract>Set the frame ready.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>acb0eb561d7e510cc90a8f65932ba41c0</Anchor>
    <Abstract>Test the readiness of the frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>a55492ff710a00ba79887f83f7616bb73</Anchor>
    <Abstract>Wait for the frame to become available.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>a9b6df51ad4d7f069dae1c408b0222340</Anchor>
    <Abstract>Add a listener which will be incremented when the frame is ready.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Frame.html</Path>
    <Anchor>a01b81c7b9b385ecfb8f131ddcb3d5cad</Anchor>
    <Abstract>Remove a frame listener.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::FrameData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Abstract>A holder for multiple images.</Abstract>
    <DeclaredIn>frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FrameData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>ac5d1822a2f80def3aee7b81910886f83</Anchor>
    <Abstract>Construct a new frame data holder.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FrameData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a5a4f98f77f815323aba013f70b4d4283</Anchor>
    <Abstract>Destruct this frame data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a8954fccf1d7f721564f67ca924faceb2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>aa6d5f8bcc8cca066e6146e2a98dba815</Anchor>
    <Abstract>Set the storage type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a666dcb0623c4ab31fbeedbfa4dc1bb18</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a6e2f02658ce3c0a3ea804a529a923106</Anchor>
    <Abstract>Set the enabled frame buffer attachments.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a2ed6b80f6a3ff6e24e5f7141c033e157</Anchor>
    <Abstract>Get the range.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a31c9f87c1ac4e4e761bd3a5878119479</Anchor>
    <Abstract>Set the range of this frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a055d49b0d6349c695edeb72a683842ec</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSubPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>aaa5d15a72ece3e45af17864b00af6825</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a2c0672c28428ace8db549511690f2872</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a8caf86a42f7addb98cf6633f97d892cc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImages</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a7f4b3e1b8921ef53fd79a4f0a695dbc4</Anchor>
    <Abstract>The images of this frame data holder.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>af264cd0e10a393f56753b5eb6c156ccb</Anchor>
    <Abstract>Set the covered area for readbacks.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a2788855917e704d75201d7ac199f2229</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlphaUsage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a3ec508612a4d7280bf5ea3b7eb309b72</Anchor>
    <Abstract>Set alpha usage for newly allocated images.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>af821a676d33493d14efacbfc3ea7ffc7</Anchor>
    <Abstract>Set the minimum quality after download and compression.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useCompressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a88e2418a5cb7665e70edf7a06de12234</Anchor>
    <Abstract>Sets a compressor which will be allocated and used during transmit of the image buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a2525dfc986f24b91852252732d846128</Anchor>
    <Abstract>Allocate and add a new image.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a505c98445a020a9e623fa1f1a0f13e9c</Anchor>
    <Abstract>Clear the frame by recycling the attached images.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>ad958e3dfb3de96a3e66e477cec6a4cd7</Anchor>
    <Abstract>Flush the frame by deleting all images.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteGLObjects</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a74b7da387c61fb15c3b6f6fa05497866</Anchor>
    <Abstract>Delete data allocated by the given object manager on all images.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPlugins</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>acaa33d712b0f128e4f8f0249a122ea68</Anchor>
    <Abstract>Deallocate all transfer and compression plugins on all images.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a346235ead1cdb8df6c1451fbf3389fc2</Anchor>
    <Abstract>Read back an image for this frame data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startReadback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a7cf601e2c1bdcfe82f55da91c1c5727f</Anchor>
    <Abstract>Start reading back a set of images for this frame data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>ab7b3425b03c6594612a8665951ee214d</Anchor>
    <Abstract>Set the frame data ready.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>ab4ca4d1d03b19dd644f72430776c3adf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a79c6900a0ee5975e123f855f047e8f02</Anchor>
    <Abstract>Wait for the frame data to become available.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a16aa9b62e46bc37ee65e982cff873a8d</Anchor>
    <Abstract>Add a ready listener.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a1b5186fd569b7fb53123cdeefecd8eed</Anchor>
    <Abstract>Remove a frame listener.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a69971aabf939ce1fe5b699c33983c263</Anchor>
    <Abstract>Disable the usage of a frame buffer attachment for all images.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChangeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>adb2ed3f008f28cb4e4d41bc784c37b54</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>a5e73a7b6a1f597dac86e10991a13c7e4</Anchor>
    <Abstract>Serialize all instance information of this distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1FrameData.html</Path>
    <Anchor>ab6dd785518eb570977bc0b83e1587db3</Anchor>
    <Abstract>Deserialize the instance data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::FrameData::ImageHeader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::FrameData::ImageHeader</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1FrameData_1_1ImageHeader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Global</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Global.html</Path>
    <Abstract>Global parameter handling for the Equalizer client library.</Abstract>
    <DeclaredIn>global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNodeFactory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Global.html</Path>
    <Anchor>ab668913509e2adf0c2d7674b85c8bdc9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConfigFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Global.html</Path>
    <Anchor>ad9e94f1b4676a1aa24ff39ec7b8e721a</Anchor>
    <Abstract>Set the config file for the app-local server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfigFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Global.html</Path>
    <Anchor>afb5f7a7b9df391f38d379917dc60a6fb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enterCarbon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Global.html</Path>
    <Anchor>a6981afb7c4a6e78bc0ca099d4d5a4d50</Anchor>
    <Abstract>Global lock for all non-thread-safe Carbon API calls.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>leaveCarbon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Global.html</Path>
    <Anchor>aa77f38bbb2294e643447db6465bea1b4</Anchor>
    <Abstract>Global unlock for non-thread-safe Carbon API calls.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::GLWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1GLWindow.html</Path>
    <Abstract>A system window for OpenGL rendering.</Abstract>
    <DeclaredIn>glWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1GLWindow.html</Path>
    <Anchor>af501e4b373249958b21809be17597b0d</Anchor>
    <Abstract>Construct a new OpenGL window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~GLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1GLWindow.html</Path>
    <Anchor>a972671b9f775af5560317e0969b4394b</Anchor>
    <Abstract>Destruct a new OpenGL window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1GLWindow.html</Path>
    <Anchor>aef95571fe235c9f7c9f41e6dd972c0f5</Anchor>
    <Abstract>Bind the FBO and update the current cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1GLWindow.html</Path>
    <Anchor>ae8a92b615d5e70a434f2967170a94019</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initGLEW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1GLWindow.html</Path>
    <Anchor>a4ea892fb2c3524d39645ef9c33df07cc</Anchor>
    <Abstract>Initialize the GLEW context for this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitGLEW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1GLWindow.html</Path>
    <Anchor>a697e7ded6ac03edfe3d8acd70cc67348</Anchor>
    <Abstract>De-initialize the GLEW context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1GLWindow.html</Path>
    <Anchor>a345b19ea561f133e052b5d06079c5279</Anchor>
    <Abstract>Get the GLEW context for this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queryDrawableConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1GLWindow.html</Path>
    <Anchor>a32ecc7b476fba40c249470163989d914</Anchor>
    <Abstract>Set up the drawable config by querying the current context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1GLWindow.html</Path>
    <Anchor>ac02170ebbc5f0afbe81d767911fce8ae</Anchor>
    <Abstract>Bind the window&amp;#39;s FBO, if it uses an FBO drawable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1GLWindow.html</Path>
    <Anchor>a1ea99f6626159984928b325ee7c6eeae</Anchor>
    <Abstract>Build and initialize the FBO.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExitFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1GLWindow.html</Path>
    <Anchor>ab2b0d8655907558aea5cb741b257cdb5</Anchor>
    <Abstract>Destroy the FBO.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::GLWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1GLWindow.html</Path>
    <Anchor>aa9616482a50db0c9b831743dcecb6b5b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Image</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Abstract>A holder for pixel data.</Abstract>
    <DeclaredIn>image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Image</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>ae200fb6218264228c0cd02ff841851c5</Anchor>
    <Abstract>Construct a new Image.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Image</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>af6efa63e83cee62096334ab0e56d654d</Anchor>
    <Abstract>Destruct the Image.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInternalFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>a200975ad1c0e40256dc98b04f558b382</Anchor>
    <Abstract>Set the internal format for the given buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInternalFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>ab0876d5dcb1ef818f995d418f71a9136</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getExternalFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>a02d50003619bf83411e83488df4900ff</Anchor>
    <Abstract>Get the external format of the given buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>ac67b8bc174feefec5ac1dbf3b3779f1c</Anchor>
    <Abstract>Get the size, in bytes, of one pixel in the external pixel data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasAlpha</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>ad7d5a7298c213a4261c7e9a2de6ac1b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStorageType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>aca5a30a816550ac864f3fe1eb51201c5</Anchor>
    <Abstract>Set the frame pixel storage type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStorageType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>afbb7de00f0e8ce5d7787f4e851fbf506</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>ae88cb14d4315161f9b45fc37dba3e588</Anchor>
    <Abstract>Set the internal pixel viewport of the image.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>a89f479314f066b2c1b3f79937673a86c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>af9616c6c17d9a8faca6bc739d6b514c0</Anchor>
    <Abstract>Sets the zoom factor to be used for compositing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>a596acd7cda543218fa34459351927b6b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useCompressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>aed60ce0084fdfedf16aab0e780fd18a2</Anchor>
    <Abstract>Set a compressor to be used during transmission of the image.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>a6b577d1f9de4a6267b2f8eb6fe1b1302</Anchor>
    <Abstract>Reset the image to its default state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>a182d54938ca4c74bffad68b769352090</Anchor>
    <Abstract>Free all cached data of this image.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteGLObjects</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>ac1266721e291f74c63d323f751bf4866</Anchor>
    <Abstract>Delete all OpenGL objects allocated from the given object manager.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPlugins</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>abd2ae01dfcae564c4a9fae16a2a2d9a8</Anchor>
    <Abstract>Deallocate all transfer and compression plugins.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>a2ecc0c5a7b9360fd93c8e8b6c124051c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>a1b200026bfbe76d3a0b3dcefb89590d0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelDataSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>ae0aa70d753e58fbde79b045d0ec86a2f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>a98ac7cd3a83cbfaac143e9906990fc4f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressPixelData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>a56003dc58152f53dc252f0a8d8fb63d6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasPixelData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>a6409c1b6f97390eb98185adfb1e2e2e1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasAsyncReadback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>a14c006cac55da06e2c722c65ce2828e6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasAsyncReadback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>a47cccdde9acfdd7ac1a8dc2e30f3819f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearPixelData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>a534129f6ca72b069bda6178efe8139f7</Anchor>
    <Abstract>Clear and validate an image buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>validatePixelData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>aabab1397db5fcbc47beb07b13df5999d</Anchor>
    <Abstract>Allocate an image buffer without initialization.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>a6407b19c13df8b8fdb5e8e419583cf0a</Anchor>
    <Abstract>Set the pixel data of the given image buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlphaUsage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>a717e3536573a8a09b361c29e6022107f</Anchor>
    <Abstract>Set alpha data preservation during download and compression.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAlphaUsage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>ac054000d9096aa6905c287edc1577cdd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>adee5df3cdbe3c26fe047b3fb8a0d723a</Anchor>
    <Abstract>Set the minimum quality after a full download-compression path.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>a10a764afdba9bb1ffdbc8e2c9d123d9d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>a7a79c3baebeafe8fa28647de30bc11e4</Anchor>
    <Abstract>Get the texture of this image.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasTextureData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>a08a18a18d371fe57d23c92fe6d0db198</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>a4e65cebd584b249ea3912d1bc5bba937</Anchor>
    <Abstract>Read back an image from the frame buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startReadback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>acfc05c35afd7828c626d56593c03c231</Anchor>
    <Abstract>Start reading back an image from the frame buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishReadback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>aaf358eda296c683c19a0d890453d6236</Anchor>
    <Abstract>Finish an asynchronous readback.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upload</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>a0c2aceec6346c2cd019feecef48c0726</Anchor>
    <Abstract>Upload this image to the frame buffer or a texture.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>aba1eb4da499d315e2c026a05509b3e9f</Anchor>
    <Abstract>Write the pixel data as rgb image file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeImages</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>ac488392c409330f193070cdf88cfd0a8</Anchor>
    <Abstract>Write all valid pixel data as separate images.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Image</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Image.html</Path>
    <Anchor>ab400e79911baf5807dbdfd7f1b5e5d73</Anchor>
    <Abstract>Read pixel data from an uncompressed rgb image file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Layout</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Layout.html</Path>
    <Abstract>A layout groups one or more View, logically belonging together.</Abstract>
    <DeclaredIn>layout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Layout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Layout.html</Path>
    <Anchor>a529983e9fbe6d6158a2c6043f66975c0</Anchor>
    <Abstract>Construct a new layout.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Layout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Layout.html</Path>
    <Anchor>a7d9eea2ac21f094ddd07c815bea5cf57</Anchor>
    <Abstract>Destruct a layout.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Layout.html</Path>
    <Anchor>af4081ee0edacd1a09ff395579afd16c4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::MessagePump</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1MessagePump.html</Path>
    <Abstract>An interface to process system messages or events.</Abstract>
    <DeclaredIn>messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1MessagePump.html</Path>
    <Anchor>a398cf554cf2a9d1a133348e403882dce</Anchor>
    <Abstract>Construct a new message pump.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1MessagePump.html</Path>
    <Anchor>a9f377b87a1f154d599bc5c490adb7c3a</Anchor>
    <Abstract>Destruct this message pump.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postWakeup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1MessagePump.html</Path>
    <Anchor>a15283af09b43ce06f94854085a630a36</Anchor>
    <Abstract>Unblock dispatchOne().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatchAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1MessagePump.html</Path>
    <Anchor>a942eb56a858ac1414c9b1a98d49b0f7a</Anchor>
    <Abstract>Dispatch all pending system events, does not block.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatchOne</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1MessagePump.html</Path>
    <Anchor>a3be4b5b2c57ecc7b62a0a560ed8a3e8e</Anchor>
    <Abstract>Dispatch at least one pending system event, blocks potentially.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Node</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Node.html</Path>
    <Abstract>A Node represents a single computer in the cluster.</Abstract>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Node.html</Path>
    <Anchor>a8aca3d699e633d4340b8fc01e70b3b68</Anchor>
    <Abstract>Construct a new node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Node.html</Path>
    <Anchor>a9d83f496013b0565ebed0d6189f259c8</Anchor>
    <Abstract>Destruct the node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Node.html</Path>
    <Anchor>a68ef3aae800bbd2ee4c0531abaea3bc6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Node.html</Path>
    <Anchor>a20f8aa9f3ad1742507acab705e8678a8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Node.html</Path>
    <Anchor>a699e3a5df89bef045729a0ff372080b8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStopped</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Node.html</Path>
    <Anchor>a0b86fcbbe80ede1e74434d61f9ac37d8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitFrameStarted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Node.html</Path>
    <Anchor>afbc4f6a08aad6aee6d46e4aa9e490e0e</Anchor>
    <Abstract>Wait for a frame to be started.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Node.html</Path>
    <Anchor>a36abca895f228a8fa24b0fe73ebd4bea</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Node.html</Path>
    <Anchor>a200c3caa10c138b5f6fbf621612eb654</Anchor>
    <Abstract>Start a frame by unlocking all child resources.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Node.html</Path>
    <Anchor>ab17d290b807bb2d0a7784ab1e77c3393</Anchor>
    <Abstract>Signal the completion of a frame to the parent.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseFrameLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Node.html</Path>
    <Anchor>a5a093511a619c6017b8dfe18bfdebaac</Anchor>
    <Abstract>Release the local synchronization of the parent for a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Node.html</Path>
    <Anchor>a326c3f30b57e9ade7130a55954376888</Anchor>
    <Abstract>Initialize this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Node.html</Path>
    <Anchor>af09daf3ff2db439b27173f36a2884555</Anchor>
    <Abstract>Exit this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Node.html</Path>
    <Anchor>aaa5ac870d41ccaa470ee57bc17387de3</Anchor>
    <Abstract>Start rendering a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Node.html</Path>
    <Anchor>aa67b00b9c1f574d00ad937fb567a1d7e</Anchor>
    <Abstract>Finish rendering a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameDrawFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Node.html</Path>
    <Anchor>afce6f4aedb840d2bdf6fef8bdde599dc</Anchor>
    <Abstract>Finish drawing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameTasksFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Node.html</Path>
    <Anchor>a3396d87ff1670b5ce7f05d28d0d98d10</Anchor>
    <Abstract>Finish all rendering tasks.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Node::TransmitThread</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Node::TransmitThread</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Node_1_1TransmitThread.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::NodeFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1NodeFactory.html</Path>
    <Abstract>The node factory is a per-node singleton used to create and release Equalizer resource instances...</Abstract>
    <DeclaredIn>nodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1NodeFactory.html</Path>
    <Anchor>a680dd708fdaa6fb00f97285f19a54899</Anchor>
    <Abstract>Create a new config.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1NodeFactory.html</Path>
    <Anchor>a385269617d503883b1870ff21628fff1</Anchor>
    <Abstract>Release a config.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1NodeFactory.html</Path>
    <Anchor>af3d0c25e652724effaea733b26e57e65</Anchor>
    <Abstract>Create a new node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1NodeFactory.html</Path>
    <Anchor>a86cd7b65ada59eff0e74b9c2959af081</Anchor>
    <Abstract>Release a node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1NodeFactory.html</Path>
    <Anchor>ab978ed64cc2cfe3867fb6d40d33f65a0</Anchor>
    <Abstract>Create a new pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releasePipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1NodeFactory.html</Path>
    <Anchor>a256aed8c7f572e2c359c961300a7643b</Anchor>
    <Abstract>Release a pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1NodeFactory.html</Path>
    <Anchor>abe09fdb6dca684078a66508f2c4d0412</Anchor>
    <Abstract>Create a new window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1NodeFactory.html</Path>
    <Anchor>acce243f83d5b04dffb3b5e531b12bb87</Anchor>
    <Abstract>Release a window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1NodeFactory.html</Path>
    <Anchor>a131b722dfc11e2fcbbaa1c9ab5dcf38d</Anchor>
    <Abstract>Create a new channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1NodeFactory.html</Path>
    <Anchor>af30e7bef5d36eb7669d282a563656fb1</Anchor>
    <Abstract>Release a channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1NodeFactory.html</Path>
    <Anchor>aaf3a48aa102320233ecc31666caae244</Anchor>
    <Abstract>Create a new observer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1NodeFactory.html</Path>
    <Anchor>ab7ab01bb36d8d06f3c1fdc377161a5ba</Anchor>
    <Abstract>Release a observer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1NodeFactory.html</Path>
    <Anchor>aef7d63b7cf0c4c877516db0b832491e7</Anchor>
    <Abstract>Create a new layout.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1NodeFactory.html</Path>
    <Anchor>adf3e9147b28b9db29aafbab438c9316d</Anchor>
    <Abstract>Release a layout.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1NodeFactory.html</Path>
    <Anchor>a1b59458c785d1660348d7d2be4189e7f</Anchor>
    <Abstract>Create a new view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1NodeFactory.html</Path>
    <Anchor>a17f69f9710c55ccd8eeb3988624e5965</Anchor>
    <Abstract>Release a view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCanvas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1NodeFactory.html</Path>
    <Anchor>a26ee17436081333ab22793e06efb209b</Anchor>
    <Abstract>Create a new canvas.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseCanvas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1NodeFactory.html</Path>
    <Anchor>a2557146ac36ca9923f46e0680780311e</Anchor>
    <Abstract>Release a canvas.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSegment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1NodeFactory.html</Path>
    <Anchor>afe08f8356b3780e9f1ff28725dc43d86</Anchor>
    <Abstract>Create a new segment.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseSegment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1NodeFactory.html</Path>
    <Anchor>a335b229fcea2831b96abaf8fd75e36c8</Anchor>
    <Abstract>Release a segment.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~NodeFactory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1NodeFactory.html</Path>
    <Anchor>abf00597691e5cacbd4adf3104392ba50</Anchor>
    <Abstract>Destruct this node factory.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Observer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Observer.html</Path>
    <Abstract>An Observer looks at one or more views from a certain position (head matrix) with a given eye separat...</Abstract>
    <DeclaredIn>observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Observer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Observer.html</Path>
    <Anchor>af394601d48c6f382d4bc853a31e99e00</Anchor>
    <Abstract>Construct a new observer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Observer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Observer.html</Path>
    <Anchor>a4148061e67cba1d30c5131f7cf146f99</Anchor>
    <Abstract>Destruct this observer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Observer.html</Path>
    <Anchor>ab0f730097e5b48862f255624372a0cc3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Pipe</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Abstract>A Pipe represents a graphics card (GPU) on a Node.</Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>a30bf0ca9137cc90ccb5b4bc7c4ed4b3c</Anchor>
    <Abstract>Construct a new pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>a1fc251510e5f5ddb261300cbd702e4f0</Anchor>
    <Abstract>Destruct the pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>a38189e91faa5e9f763728557551703c9</Anchor>
    <Abstract>Add dirty flags to mark data for distribution.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>aa2968f9ded9e375be0f937927eb226e3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>a0f8d193093ac57c1897cb75be8e8f9c6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>a734baff99004a567f06ea8d9ff1c51a0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>a36d71a260455ed3da87258b68d7cf50d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>ae8dbb93cbe74ce3b338c719b4e746af8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStopped</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>aecaf0052f7770c76a0d00c76d23c2bfa</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>adfe4ede2e2e537851bf65c98947d54c8</Anchor>
    <Abstract>Return the current frame number.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindowSystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>aef11472baa008d0ce3f2e43518f75fa4</Anchor>
    <Abstract>Return the window system used by this pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSystemPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>a3032b72f6d10b32f45bbc63433d2abce</Anchor>
    <Abstract>Set the system-specific pipe implementation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSystemPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>a3ef4b19d945aae7c97ee19f7ffb032fa</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSystemPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>add765e42a1b4f213399171cbc34c88c8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setComputeContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>ab18b5a0dee2b4e2e80db513701be9899</Anchor>
    <Abstract>Set the compute-specific context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getComputeContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>a2d0377f3f8dc38d39b2ccf7c29bcd0f7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getComputeContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>a3f87167250991c573ae19346cd1af9b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>aadd187aaf58d0e62b6f0f728af334b26</Anchor>
    <Abstract>Create a new MessagePump for this pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>a3c8ebd56d86798fd412b39e2c31b0ae0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>a2ace20d328e4688e5caf33491d7ab6e9</Anchor>
    <Abstract>Start a frame by unlocking all child resources.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>a8bd0700507a88ab768db48692496fc84</Anchor>
    <Abstract>Signal the completion of a frame to the parent.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseFrameLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>aa24f745f88904096f0bac6789c195f78</Anchor>
    <Abstract>Release the local synchronization of the parent for a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsWindowSystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>a673af9919799bf463f1baffda15e220e</Anchor>
    <Abstract>Tests wether a particular windowing system is supported by this pipe and all its windows.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>selectWindowSystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>afecc9279cce68138d6ac4a8157689140</Anchor>
    <Abstract>Choose the window system to be used by this pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>acd4da99e70c54366ef4b150fe3e9c0e4</Anchor>
    <Abstract>Initialize this pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitSystemPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>acf402b6a656dd5f4ce2abb01f5545c2a</Anchor>
    <Abstract>Initialize the OS-specific pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>a228bb24206f6bc0adae95d1c422e7127</Anchor>
    <Abstract>De-initialize this pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>ae746269e5bda4f73271728d2cef073d6</Anchor>
    <Abstract>Start rendering a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>a044d698d5a693b1a3acd827f98432ade</Anchor>
    <Abstract>Finish rendering a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameDrawFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Pipe.html</Path>
    <Anchor>af304d72213e2f778f56771dcf9a3084f</Anchor>
    <Abstract>Finish drawing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::PixelData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PixelData.html</Path>
    <Abstract>The pixel data structure manages the pixel information for images.</Abstract>
    <DeclaredIn>pixelData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PixelData.html</Path>
    <Anchor>a669cecb31b10f59733592e2fc0ec25a0</Anchor>
    <Abstract>Construct new pixel data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PixelData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PixelData.html</Path>
    <Anchor>a23ccfda4f1291e5bd365e5b0c5cd9a22</Anchor>
    <Abstract>Destruct the pixel data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PixelData.html</Path>
    <Anchor>a434c3c94359c1b6d1d0f21eb8875e03d</Anchor>
    <Abstract>Reset the data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>internalFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PixelData.html</Path>
    <Anchor>a2d80968165be581d4606647ef6af42dd</Anchor>
    <Abstract>The type of data stored in FrameBuffer or texture on the GPU.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>externalFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PixelData.html</Path>
    <Anchor>a0d07801753568105ddf01a430711f52d</Anchor>
    <Abstract>The type of data stored in pixels in main memory.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pixelSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PixelData.html</Path>
    <Anchor>af3a0f7f86b974c7188d371c7b9e61b18</Anchor>
    <Abstract>The size of one pixel, in bytes, stored in pixels.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pvp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PixelData.html</Path>
    <Anchor>a1b4280d8a997621116f68c1ffc710625</Anchor>
    <Abstract>The dimensions of the pixel data in pixels.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pixels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PixelData.html</Path>
    <Anchor>adde6dc45b96146f5bd1a95b5312ffbe2</Anchor>
    <Abstract>uncompressed pixel data, pvp * pixelSize bytes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressedData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PixelData.html</Path>
    <Anchor>a1f346d4c73e679d4ebbca1d7c0669059</Anchor>
    <Abstract>The compressed pixel data blocks.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressedSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PixelData.html</Path>
    <Anchor>a861daa42da148d0ddd31b2ac91f4c74d</Anchor>
    <Abstract>Sizes of each compressed pixel data block.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressorName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PixelData.html</Path>
    <Anchor>a1cce1dff4768db74c2b93ad17f2df58f</Anchor>
    <Abstract>The compressor used to produce compressedData.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressorFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PixelData.html</Path>
    <Anchor>a07aa4936fed4380cd2849b25d9e69712</Anchor>
    <Abstract>Flags used for compression.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCompressed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::PixelData</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1PixelData.html</Path>
    <Anchor>a47402f117e6a7c27d54d492f7fdf07e5</Anchor>
    <Abstract>The compressed pixel data is set.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Segment</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Segment.html</Path>
    <Abstract>A segment covers a sub-area of a Canvas.</Abstract>
    <DeclaredIn>segment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Segment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Segment.html</Path>
    <Anchor>acf38375a853f2a0fc28d54122ed4a608</Anchor>
    <Abstract>Construct a new segment.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Segment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Segment.html</Path>
    <Anchor>a93dcb7d45270176d5636836c067017a4</Anchor>
    <Abstract>Destruct a segment.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Segment.html</Path>
    <Anchor>a35cf0390a4f37f712821e63b08927a25</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Segment.html</Path>
    <Anchor>a43f1a3eb66a6df9fc5b6f7d2b6a71aeb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Segment.html</Path>
    <Anchor>ac6cd0e9c091499d5a3d5505864f598c3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Server</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Server.html</Path>
    <Abstract>Proxy object for the connection to an Equalizer server.</Abstract>
    <DeclaredIn>server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Server</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Server.html</Path>
    <Anchor>a0cb95b646ff7476c9ffc260c70794fc8</Anchor>
    <Abstract>Construct a new server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chooseConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Server.html</Path>
    <Anchor>a9efbba78259d6f5d73b0b495a1017186</Anchor>
    <Abstract>Choose a configuration on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Server.html</Path>
    <Anchor>aebfecf1e75204156cc8fbc17a038fc23</Anchor>
    <Abstract>Release a configuration.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shutdown</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Server.html</Path>
    <Anchor>a3a0911db81ddf003b531bf83c8256226</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Statistic</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Abstract>A statistics event.</Abstract>
    <DeclaredIn>statistic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>abce74515758bea1bd5da1eb8e05242b1</Anchor>
    <Abstract>Translate the Type to a string representation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>af69a9f9aad0941450489daedbaf24119</Anchor>
    <Abstract>Translate the Type to a color value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>abf5f7fa22431e3238b0ff732d3296962</Anchor>
    <Abstract>The type of statistic.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>aa3f850ffa8e2a62064831cbb18a6f1a1</Anchor>
    <Abstract>The frame during when the sampling happened.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>plugins</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a60055322f754a41ced310aab896990f8</Anchor>
    <Abstract>color,depth plugins (readback, compression)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ratio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a21d3690ee055e0f4a5e53edf66900308</Anchor>
    <Abstract>compression ratio (transfer, compression)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resourceName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>af1204b10c0bc42c19312b2c0247e6817</Anchor>
    <Abstract>A non-unique name of the originator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_CLEAR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a8c1b09c7079b85cd72acf4054e8c6e63a3c0aab7072ab5b96e4f255821e52fbd5</Anchor>
    <Abstract>Sampling of Channel::frameClear.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_DRAW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a8c1b09c7079b85cd72acf4054e8c6e63adc5faab5e9ee374621dd014cb92d6af8</Anchor>
    <Abstract>Sampling of Channel::frameDraw.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_DRAW_FINISH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a8c1b09c7079b85cd72acf4054e8c6e63a9a096c57808f7d9eef6a992cd824434f</Anchor>
    <Abstract>Sampling of Channel::frameDrawFinish.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_ASSEMBLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a8c1b09c7079b85cd72acf4054e8c6e63a8f63ee92db697089a8217c74a156f6bd</Anchor>
    <Abstract>Sampling of Channel::frameAssemble.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_FRAME_WAIT_READY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a8c1b09c7079b85cd72acf4054e8c6e63a8ffda740d1600c36f141fb8472bda8fd</Anchor>
    <Abstract>Sampling of Frame::waitReady.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_READBACK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a8c1b09c7079b85cd72acf4054e8c6e63aa525db9c93fa294e72e4b846d96040a3</Anchor>
    <Abstract>Sampling of Channel::frameReadback.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_ASYNC_READBACK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a8c1b09c7079b85cd72acf4054e8c6e63a21294dac0f2f34ebe6e5521a9deff085</Anchor>
    <Abstract>Sampling of async readback.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_VIEW_FINISH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a8c1b09c7079b85cd72acf4054e8c6e63a2f86799f2c05b31763f68ebeb0723deb</Anchor>
    <Abstract>Sampling of Channel::frameViewFinish.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_FRAME_TRANSMIT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a8c1b09c7079b85cd72acf4054e8c6e63ae66a2b1e6b51d50ef53c256404b3990c</Anchor>
    <Abstract>Sampling of frame transmission.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_FRAME_COMPRESS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a8c1b09c7079b85cd72acf4054e8c6e63a5dba189cbd8a3d96fc5ebe1be1f13291</Anchor>
    <Abstract>Sampling of frame compression.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANNEL_FRAME_WAIT_SENDTOKEN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a8c1b09c7079b85cd72acf4054e8c6e63aea8df5650f514c5a699118c7fe00d1ac</Anchor>
    <Abstract>Sampling of waiting for a send token from the receiver.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW_FINISH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a8c1b09c7079b85cd72acf4054e8c6e63a0b0e6d825f896cb04fba59aaf36647ea</Anchor>
    <Abstract>Sampling of Window::finish before a swap barrier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW_THROTTLE_FRAMERATE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a8c1b09c7079b85cd72acf4054e8c6e63ada569d8bb1163ff029d83e0978147f93</Anchor>
    <Abstract>Sampling of throttling of framerate_equalizer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW_SWAP_BARRIER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a8c1b09c7079b85cd72acf4054e8c6e63aeaf1f23b398d563e8897a635a080d6c0</Anchor>
    <Abstract>Sampling of swap barrier block.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW_SWAP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a8c1b09c7079b85cd72acf4054e8c6e63a052cad5dd07ad0a85b9b907330859b15</Anchor>
    <Abstract>Sampling of Window::swapBuffers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW_FPS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a8c1b09c7079b85cd72acf4054e8c6e63af44b22307638578c3d1840ad5b96a96b</Anchor>
    <Abstract>Framerate sampling.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PIPE_IDLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a8c1b09c7079b85cd72acf4054e8c6e63a25aac8ac821c51e34e81a15cfd73b214</Anchor>
    <Abstract>Pipe thread idle ratio.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NODE_FRAME_DECOMPRESS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a8c1b09c7079b85cd72acf4054e8c6e63a5de2a92321fa38c0b2a8a77feea252db</Anchor>
    <Abstract>Sampling of frame decompression.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONFIG_START_FRAME</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a8c1b09c7079b85cd72acf4054e8c6e63a25c7b7ddde6cf65e8129613763a4b570</Anchor>
    <Abstract>Sampling of Config::startFrame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONFIG_FINISH_FRAME</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a8c1b09c7079b85cd72acf4054e8c6e63ab6ea2f2158b6b1232245f1f3f74e9680</Anchor>
    <Abstract>Sampling of Config::finishFrame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONFIG_WAIT_FINISH_FRAME</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::Statistic</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1Statistic.html</Path>
    <Anchor>a8c1b09c7079b85cd72acf4054e8c6e63af5117753d16fcd521d4f776dabcd198e</Anchor>
    <Abstract>Sampling of synchronization time during Config::finishFrame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::StatisticSampler</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::StatisticSampler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1StatisticSampler.html</Path>
    <Abstract>Utility to sample an statistics event.</Abstract>
    <DeclaredIn>statisticSampler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StatisticSampler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::StatisticSampler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1StatisticSampler.html</Path>
    <Anchor>a23061fad41a6239a00df8a6ba0f45611</Anchor>
    <Abstract>Construct a new statistics sampler.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~StatisticSampler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::StatisticSampler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1StatisticSampler.html</Path>
    <Anchor>a56d51f434be5150397265cd274f9b2b0</Anchor>
    <Abstract>Destruct and finish statistics sampling.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>event</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::StatisticSampler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1StatisticSampler.html</Path>
    <Anchor>abfed0ab70db05c3ee18a6fe649a2c3d6</Anchor>
    <Abstract>The statistics event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::SystemPipe</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemPipe.html</Path>
    <Abstract>The interface definition for system-specific GPU handling.</Abstract>
    <DeclaredIn>systemPipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemPipe.html</Path>
    <Anchor>a0c6e17edada6a86651f0302512e9fbcf</Anchor>
    <Abstract>Create a new SstemPipe for the given eq::Pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SystemPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemPipe.html</Path>
    <Anchor>aec7ecc2d04cac5bd2df05145a682acdc</Anchor>
    <Abstract>Destroy the SystemPipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemPipe.html</Path>
    <Anchor>ac924f3e52d2ce6af3b843cb92a964720</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemPipe.html</Path>
    <Anchor>a7728a9d81f1794808c49d4fd360c38c8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemPipe.html</Path>
    <Anchor>a052a2ee0c9e995c492781592521b8833</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemPipe.html</Path>
    <Anchor>a84662ae88efc3dbef47e50466fae950f</Anchor>
    <Abstract>Initialize the GPU.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemPipe.html</Path>
    <Anchor>a130352d7127e1a87884f961769df234a</Anchor>
    <Abstract>De-initialize the GPU.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemPipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemPipe.html</Path>
    <Anchor>aa78c39da95ab1851b8de8835b3606191</Anchor>
    <Abstract>Set an error code why the last operation failed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::SystemWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Abstract>The interface definition for system-specific windowing code.</Abstract>
    <DeclaredIn>systemWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>a350affcc7bdf82074302453b29f3e783</Anchor>
    <Abstract>Create a new SystemWindow for the given eq::Window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>a014a01b0707ff613fd69afd0609e5af2</Anchor>
    <Abstract>Destroy the SystemWindow.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queryDrawableConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>ae0f29e14b49cc5f4a7c10aa2c345922f</Anchor>
    <Abstract>Set up the given drawable based on the current context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>a959906fe6a57bcdbe67656f70bace67f</Anchor>
    <Abstract>Get the GLEW context for this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>ac6cf78eb63e15e5192200b49e5ecc4c0</Anchor>
    <Abstract>Set an error code why the last operation failed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>ad780508c224f36284d6ff0e284f6916f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>a90811e6b2f76486332e5f6c164da48f5</Anchor>
    <Abstract>Process an event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>abb458c63dec1f4f8c7f190c3554d0595</Anchor>
    <Abstract>Initialize this system window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>a0edd26ec6b82340f61ad85a7aa833cd6</Anchor>
    <Abstract>De-initialize this system window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>ae8b04306a5471cb632dc0ce7ece3048a</Anchor>
    <Abstract>Make the system window rendering context and drawable current.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>ad74e59dbc7e111a27ca1f5abb5383e3d</Anchor>
    <Abstract>Bind the window&amp;#39;s FBO, if it uses an FBO drawable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>aa0994d1bffb76f6c2365c05df29aa96f</Anchor>
    <Abstract>Swap the front and back buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinNVSwapBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>abb70be10d2d541c86695795a865bd995</Anchor>
    <Abstract>Join a NV_swap_group.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>a621e208ef94cf37bd3909635fa9edd49</Anchor>
    <Abstract>Build and initialize the FBO.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExitFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>ae97b05bca230fd5a1fb8eeaea4a4828b</Anchor>
    <Abstract>Destroy FBO.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>ae8d031bd946e14d7bbc9445d4e3b06d9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>aa5272cb518d68e8dff586f82405d8600</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>a0f2228caf5193658dc1a6a5583361a73</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>a7f65dd7b0a7aec52025e5d85f0be921c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>a269a1b8613030937bc2d5f768d35e890</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>a9571fc87b1097c1a99f1aa67a4a87d33</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>ad169b48111f684782108d6acb5d93228</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>a305f304f8afcf5b5e71762aeb567d856</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>a8ae92ce9fb0db3c24c3be2e2ae49b793</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::SystemWindow</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1SystemWindow.html</Path>
    <Anchor>aef5861a0e86c0dee5e2d3fe5331bd14d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Version.html</Path>
    <Abstract>Information about the current Equalizer version.</Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Version.html</Path>
    <Anchor>a1f8604ab7c9153750b3c9e5cbc7d7534</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Version.html</Path>
    <Anchor>a9100f27452d0ebc1fa7be4f6bcf46a8b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Version.html</Path>
    <Anchor>ac01a9b650e5b641a71deb0b8ab713e9c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Version.html</Path>
    <Anchor>a6a52cf6ba1bdd4c8940a47c4926dc421</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Version.html</Path>
    <Anchor>ae54b24ad88e1af966d50bfc5e7a0abe3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Version.html</Path>
    <Anchor>a77a2ff206bea0db4a5483123c1380c7e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFloat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Version.html</Path>
    <Anchor>acb538fdbf35e36b4d0bc1856ca115fb5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Version.html</Path>
    <Anchor>a4cf29eaacd5dad1886d2d78176225122</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Version.html</Path>
    <Anchor>a8da1f0cfc35025a617ef66eb2d055507</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Version.html</Path>
    <Anchor>a1f8604ab7c9153750b3c9e5cbc7d7534</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Version.html</Path>
    <Anchor>a9100f27452d0ebc1fa7be4f6bcf46a8b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Version.html</Path>
    <Anchor>ac01a9b650e5b641a71deb0b8ab713e9c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Version.html</Path>
    <Anchor>a6a52cf6ba1bdd4c8940a47c4926dc421</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Version.html</Path>
    <Anchor>ae54b24ad88e1af966d50bfc5e7a0abe3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Version.html</Path>
    <Anchor>a77a2ff206bea0db4a5483123c1380c7e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFloat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Version.html</Path>
    <Anchor>acb538fdbf35e36b4d0bc1856ca115fb5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Version.html</Path>
    <Anchor>a4cf29eaacd5dad1886d2d78176225122</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::Version</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Version.html</Path>
    <Anchor>a8da1f0cfc35025a617ef66eb2d055507</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::View</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1View.html</Path>
    <Abstract>A View is a 2D area of a Layout.</Abstract>
    <DeclaredIn>view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>View</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1View.html</Path>
    <Anchor>ad5034def0ddadce5d7066ced66852286</Anchor>
    <Abstract>Construct a new view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~View</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1View.html</Path>
    <Anchor>a63fd8c0763b8564973bd6189431581b1</Anchor>
    <Abstract>Destruct this view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1View.html</Path>
    <Anchor>ac8b1c6862880c882985275c8e77ab7d2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1View.html</Path>
    <Anchor>a01336da00db3d5fed10432af483e325f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1View.html</Path>
    <Anchor>a9f9d9a1fa56907945aa96225aec7898e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1View.html</Path>
    <Anchor>ab1e537b8a872143446246e1c0c9f0232</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1View.html</Path>
    <Anchor>a5f402b76a46caaf2703983a760da97b3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1View.html</Path>
    <Anchor>a5ed069cdfaf6821c0ad7e41cf73e3c5d</Anchor>
    <Abstract>Handle a received (view) event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>freezeLoadBalancing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1View.html</Path>
    <Anchor>a70842583c8f4feb317feffeccc677e72</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1View.html</Path>
    <Anchor>a3d017b812f81c779e78dd6c90ae16b9b</Anchor>
    <Abstract>Worker for unpack() and applyInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBaseFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1View.html</Path>
    <Anchor>a528d8a59d868a9fb645763544f6d53e0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::Window</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Abstract>A Window represents an on-screen or off-screen drawable.</Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a77113c36c6ae2f0f6c9b9abc469dac91</Anchor>
    <Abstract>Construct a new window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>aaa8b9f0fdd4177268115fee2ead9da8b</Anchor>
    <Abstract>Destruct the window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>af8273aea862197403506c854706b18f8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a6a8462f05b6b3fd314692e55ae6131da</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>aa51c3710198840fd7d2c41b384c6f5e3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>ae7fda05410696641a9a9c07abc9d7818</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a27311d1945d445156fc09aeb9812badc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a2385fc5097a9515d72cc0ee86e57cc21</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a11cea64cf4da90ffb2845fba0b691bce</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStopped</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a95fe12ec0817578b03c19955e632d176</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>ac9956627fb040f05eebc3383828849ad</Anchor>
    <Abstract>Get the last rendering context at the x, y position.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSharedContextWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a48238ddb4e37b6da7c326e5e468df34d</Anchor>
    <Abstract>Set the window with which this window shares the OpenGL context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSharedContextWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>ade090436e46454da3fe439065933d96f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSharedContextWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a45da2e8564b4430858cf95b8ccaa091b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getObjectManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a1a6d888871860eddadd66c98f88136c1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getObjectManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>afb562d94f9e562b58bd4d8cd97600a9c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSmallFont</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a1cdfde86c01cdbfbfa426108b07f2d68</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMediumFont</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a2582ae371339787cc6f2b930d6886616</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a3ae09cbbdbf8f818350cfd35743163fa</Anchor>
    <Abstract>Get the GLEW context for this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a18c2ed229f1c30bee855371c628d42dc</Anchor>
    <Abstract>Set the OS-specific window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>ab062df83cbfdafe7e912a7b615a5249a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a6323c079b1ef203fc847eb8fe175ba25</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSystemPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>ab3e1c523537b2cd3a304f09648271e4c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSystemPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>ae8c3b82d3731616755aba77c3f77ecf7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObjectManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a48823ac32946f6b6bea582ea367b6678</Anchor>
    <Abstract>The per-window OpenGL object manager.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Font</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a32c8502e33d6a5e02daf385475287bb9</Anchor>
    <Abstract>Fonts used for overlays.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a4681bf17db5c9dba89918fb36091aca7</Anchor>
    <Abstract>Flush outstanding rendering requests.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a11089ea5d40651dd275ac1f194f79012</Anchor>
    <Abstract>Finish outstanding rendering requests.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a0ab25ee882ddf2a3cc73137c9e82df6e</Anchor>
    <Abstract>Swap the front and back buffer of the window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawFPS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>ae4f7cfbac838f39111e878c8907935b8</Anchor>
    <Abstract>Render the current framerate as on overlay.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFPS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a74280fc4026fac06170ec7b57fb69ce8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a6f4e665f9d87ee0ce8b27d7388dbdc11</Anchor>
    <Abstract>Make the window&amp;#39;s drawable and context current.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>ab5d024d8b45a0e721b64a5f7048c1d33</Anchor>
    <Abstract>Start a frame by unlocking all child resources.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a8f79934c79028ef72d68889a1add10f1</Anchor>
    <Abstract>Signal the completion of a frame to the parent.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseFrameLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a761b9ac6c8d4c7235e97e516082e6d38</Anchor>
    <Abstract>Signal the release of the local synchronization to the parent.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a5c42687585f80847aee967c15f8d99c1</Anchor>
    <Abstract>Process a received event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a4f0aedd9c2d722ec3f9b59d9f81dfbea</Anchor>
    <Abstract>Initialize this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitSystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>acd0363120b399baf710dfc2a53395850</Anchor>
    <Abstract>Initialize the OS-specific window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a9a6b7a13158ec7634e56cc8041d50339</Anchor>
    <Abstract>Initialize the OpenGL state for this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a2074c3180f7c9b42dce382ab36d65023</Anchor>
    <Abstract>Exit this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExitSystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>aab2e279cb0ead7be87e2bc2f05547c44</Anchor>
    <Abstract>De-initialize the OS-specific window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExitGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>add25ada4656b7b6fb97b81fafc985e07</Anchor>
    <Abstract>De-initialize the OpenGL state for this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a86c36347099471eb4c5dd5968107b385</Anchor>
    <Abstract>Start rendering a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a8b9e71d9ff6765d1d2601f824e1a6ccf</Anchor>
    <Abstract>Finish rendering a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameDrawFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1Window.html</Path>
    <Anchor>a2f4140f1a3fa955fb7555df9b226c43b</Anchor>
    <Abstract>Finish drawing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::WindowStatistics</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::WindowStatistics</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1WindowStatistics.html</Path>
    <Abstract>A statistics sampler for window-related events.</Abstract>
    <DeclaredIn>windowStatistics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WindowStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::WindowStatistics</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1WindowStatistics.html</Path>
    <Anchor>ac9af791af4e7ac1a3f6e601e3890bea0</Anchor>
    <Abstract>Construct a statistics sampler and sample the start time.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WindowStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::WindowStatistics</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1WindowStatistics.html</Path>
    <Anchor>a8b5d2de5f1f3e7913de1e2f01a487bf7</Anchor>
    <Abstract>Destruct the sampler, sample the end time and send the event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::WindowSystemIF</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::WindowSystemIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1WindowSystemIF.html</Path>
    <Abstract>The interface for windowing toolkits.</Abstract>
    <DeclaredIn>windowSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::WindowSystem</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::WindowSystem</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1WindowSystem.html</Path>
    <Abstract>The list of possible window systems.</Abstract>
    <DeclaredIn>windowSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::agl</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>eq::agl</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1agl.html</Path>
    <Abstract>The system abstraction layer for Apple OpenGL and Carbon.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::agl::EventHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::agl::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1EventHandler.html</Path>
    <Abstract>The event handler for AGL windows.</Abstract>
    <DeclaredIn>eventHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1EventHandler.html</Path>
    <Anchor>ab49187e43257dd5cae92ffbcf921d4ca</Anchor>
    <Abstract>Construct a new AGL event handler for the given AGL window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~EventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1EventHandler.html</Path>
    <Anchor>a454720ae10e60af47182035139b88bd6</Anchor>
    <Abstract>Destruct the AGL event handler.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1EventHandler.html</Path>
    <Anchor>a490f9233f7ac50df45589d5d27883666</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initMagellan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::agl::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1EventHandler.html</Path>
    <Anchor>af1dff8c4b3aa0294b93e1f3e3285f7c2</Anchor>
    <Abstract>Initialize space mouse event handling for this process.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitMagellan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::agl::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1EventHandler.html</Path>
    <Anchor>a4ac1057b85d518dc1d9247a9460c524c</Anchor>
    <Abstract>De-initialize space mouse event handling for this process.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::agl::MessagePump</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::agl::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1MessagePump.html</Path>
    <Abstract>A message pump receiving and dispatching Carbon events.</Abstract>
    <DeclaredIn>messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1MessagePump.html</Path>
    <Anchor>a0132b2e6c124d9a4ae7e1dd89962bb46</Anchor>
    <Abstract>Construct a new AGL message pump.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1MessagePump.html</Path>
    <Anchor>a1fe1809159cdc8de2bcfb905884d09d9</Anchor>
    <Abstract>Destruct this message pump.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postWakeup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1MessagePump.html</Path>
    <Anchor>a3388f7e46cc251a6c4ccf9487be208ea</Anchor>
    <Abstract>Unblock dispatchOne().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatchAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1MessagePump.html</Path>
    <Anchor>a986f0d4874afce16de0aed2e2dfcaa0a</Anchor>
    <Abstract>Dispatch all pending system events, does not block.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatchOne</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1MessagePump.html</Path>
    <Anchor>a01798fe713536cef998aa0bba7baa24b</Anchor>
    <Abstract>Dispatch at least one pending system event, blocks potentially.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::agl::Pipe</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::agl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Pipe.html</Path>
    <Abstract>Equalizer default implementation to handle an AGL GPU.</Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Pipe.html</Path>
    <Anchor>ab4d5aea6cc7b0c281048d84d9e788472</Anchor>
    <Abstract>Create a new AGL pipe for the given eq::Pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Pipe.html</Path>
    <Anchor>a26a490ca6d628fc0a23203d35bfdd14b</Anchor>
    <Abstract>Destroy the AGL pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCGDisplayID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Pipe.html</Path>
    <Anchor>a6008232c784692ae3c78d40f45c9b58e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Pipe.html</Path>
    <Anchor>a36bc8bf4821978533be5f38ce02542a2</Anchor>
    <Abstract>Initialize this pipe for the AGL window system.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Pipe.html</Path>
    <Anchor>a68891eb21558cdaefcf0b574f482e8f6</Anchor>
    <Abstract>De-initialize this pipe for the AGL window system.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::agl::WindowIF</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::agl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1WindowIF.html</Path>
    <Abstract>The interface defining the minimum functionality for an AGL window.</Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WindowIF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1WindowIF.html</Path>
    <Anchor>a23de341ad7f2bc942b6889d853c93ceb</Anchor>
    <Abstract>Construct a new AGL window for the given eq::Window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WindowIF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1WindowIF.html</Path>
    <Anchor>ab38a94cec2d0e22de6dbbedc56db0c67</Anchor>
    <Abstract>Destruct the AGL window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAGLContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1WindowIF.html</Path>
    <Anchor>a926c29927a4166df82a43c6af15af8b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCarbonWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1WindowIF.html</Path>
    <Anchor>a52342826ecf2e48868728bc4d1c72a13</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAGLPBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1WindowIF.html</Path>
    <Anchor>a8d3530faa3af880349c359576444ab7f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1WindowIF.html</Path>
    <Anchor>a470f1ddbc4905794f1a67dd01b83e290</Anchor>
    <Abstract>Process the given event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::agl::Window</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Abstract>Equalizer default implementation of an AGL window interface.</Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>a084a3a874b2c61a6012fdee2db4639ce</Anchor>
    <Abstract>Create a new AGL window for the given eq::Window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>a1981ff9eb9c51c518aa8de435e02f80e</Anchor>
    <Abstract>Destruct the AGL window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAGLContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>a47639dc71711b6d55462d68ea064ebbb</Anchor>
    <Abstract>Set the AGL rendering context for this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCarbonWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>a5a680298569d3204e526fe4836e15032</Anchor>
    <Abstract>Set the carbon window to be used with the current AGL context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAGLPBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>aaa7b48e91c25a61c745a561177002741</Anchor>
    <Abstract>Set the AGL PBuffer object to be used with the current AGL context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAGLContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>a9db818a1d96f6d37dc21cc81ceda4f11</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCarbonWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>a3d8d7231d4ff2d1cc73bd6f3399c963a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAGLPBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>a8a88154698bd7f368aa296cb3e65ece2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCGDisplayID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>a3f7be330ba88eaa932f6359e0a020ff6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>a81cc0bd4db1a26c3cc0592af451067cf</Anchor>
    <Abstract>Initialize this window for the AGL window system.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>a3e08952209df1429fe2a241c5dfedad4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chooseAGLPixelFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>aabe8dba67663d50ab363cc7fff5f18c9</Anchor>
    <Abstract>Choose a pixel format based on the window&amp;#39;s attributes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyAGLPixelFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>a876186da5b975b9f18c7882caac280e1</Anchor>
    <Abstract>Destroy a pixel format obtained with chooseAGLPixelFormat().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createAGLContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>adc6c0cb5dbf4223e39ac1665643ffadb</Anchor>
    <Abstract>Create an AGL context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitAGLDrawable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>a2f333d7937807bc783d05a671db3aed3</Anchor>
    <Abstract>Initialize the window&amp;#39;s drawable (fullscreen, pbuffer or window) and bind the AGL context...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitAGLFullscreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>a7ab4e292e0d6b8b71e58d6fc903178bf</Anchor>
    <Abstract>Initialize the window with a fullscreen Carbon window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitAGLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>ad2b504792345085e61f2683f501cb6cc</Anchor>
    <Abstract>Initialize the window with a normal Carbon window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitAGLPBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>a3544dc1aad7303e23fa68a02bb0588f4</Anchor>
    <Abstract>Initialize the window with an offscreen AGL PBuffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initEventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>a17d7eec254e50a4f394fe3d6897cbe00</Anchor>
    <Abstract>Set up an AGLEventHandler, called by setCarbonWindow().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitEventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>a091e86ebd49d3f1b025e5fd697315446</Anchor>
    <Abstract>Destroy the AGLEventHandler, called by setCarbonWindow().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>acc954875d20bc186e3c6ca93c35f2475</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>acdb95e3e657144375f721514383d234a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinNVSwapBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>a31b7cfaaf684a9592fbdf4470fce973b</Anchor>
    <Abstract>Not implemented for AGL.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::agl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1Window.html</Path>
    <Anchor>af1a0a792ef82a9cdb2cf2a6b23111cf6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::agl::WindowEvent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::agl::WindowEvent</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1WindowEvent.html</Path>
    <Abstract>A window-system event with the native Carbon event, used for AGL.</Abstract>
    <DeclaredIn>windowEvent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>carbonEventRef</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::agl::WindowEvent</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1agl_1_1WindowEvent.html</Path>
    <Anchor>a57c7387cc96ca49ac1173e56c15cdc96</Anchor>
    <Abstract>The native event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Abstract>The Equalizer data synchronization fabric.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a419b38c06b6f21221d56fc7564eb5370</Anchor>
    <Abstract>Print the error in a human-readable format.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>ab51e5baeb2d2e41f0eb4f12833bbd806</Anchor>
    <Abstract>Print the frame type to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a156fc99c1225b8b58f69f2d189499a6d</Anchor>
    <Abstract>Print the frame buffer value to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a5e12771cfcd77224cfb4f79d7011d964</Anchor>
    <Abstract>Initialize the Equalizer fabric namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>aaf53c695f6b4b44f0f95a16d5a6ace4a</Anchor>
    <Abstract>De-initialize the Equalizer fabric namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Matrix3d</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>aef6f35981f677e0ca65ffe124184d893</Anchor>
    <Abstract>A 3x3 double matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Matrix4d</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a6fc6018df87cf2d992ee7580617bf62f</Anchor>
    <Abstract>A 4x4 double matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Matrix3f</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a7ff46ca14a10ad6ba08e832041182a0c</Anchor>
    <Abstract>A 3x3 float matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Matrix4f</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a2bfa8df9d0de30fa163fdd7f80bd9454</Anchor>
    <Abstract>A 4x4 float matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vector2i</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a531b55b7c8056cd2dcb1e2eafbcd742b</Anchor>
    <Abstract>A two-component integer vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vector3i</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>ae3f18b9afe032bd74e3a880adca25f3c</Anchor>
    <Abstract>A three-component integer vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vector4i</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a5fabf1cc0c90e10b87811494685cf25c</Anchor>
    <Abstract>A four-component integer vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vector3d</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a2be1af5922f5b8660b3e5d541af51b17</Anchor>
    <Abstract>A three-component double vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vector4d</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>ae3984891de72f7cc78d680443b1650a5</Anchor>
    <Abstract>A four-component double vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vector2f</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a4bf1bf9037b44df562ec5e4d2e240020</Anchor>
    <Abstract>A two-component float vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vector3f</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>ab648a7b23d1ffa13d73e7fc34ffeaa0d</Anchor>
    <Abstract>A three-component float vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vector4f</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a9a61645a519053d93357701e07fd992f</Anchor>
    <Abstract>A four-component float vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vector3ub</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a1f40613d4622011aba4460d69360ae0f</Anchor>
    <Abstract>A three-component byte vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Frustumf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a20a4eed749ff5a32fdc7cbf1bda6d3f9</Anchor>
    <Abstract>A frustum definition.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EYE_CYCLOP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>acd9290e9a8f5396b08915ded7f1d9315a151f1ba05df37e987912416f7b30aa5e</Anchor>
    <Abstract>monoscopic &amp;#39;middle&amp;#39; eye</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EYE_LEFT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>acd9290e9a8f5396b08915ded7f1d9315a1d5f15815cfb0f532debceab9fbb3234</Anchor>
    <Abstract>left eye</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EYE_RIGHT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>acd9290e9a8f5396b08915ded7f1d9315ad83baed15e504192c6285a79d50b3780</Anchor>
    <Abstract>right eye</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EYE_LAST</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>acd9290e9a8f5396b08915ded7f1d9315a74cc970853c560104950405257b2de2d</Anchor>
    <Abstract>the last eye</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EYES_STEREO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>acd9290e9a8f5396b08915ded7f1d9315a4945b2163c8f3986432e2bf0da35bed0</Anchor>
    <Abstract>left and right eye</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EYES_ALL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>acd9290e9a8f5396b08915ded7f1d9315aede128b65b4b1bf61c3304f7be57f324</Anchor>
    <Abstract>all eyes</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FOCUSMODE_FIXED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a9a82c5790fc00e5a499352e8598c01aaa058f51d46514a235243a23bd9ec0b6fa</Anchor>
    <Abstract>Focus on physical projection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FOCUSMODE_RELATIVE_TO_ORIGIN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a9a82c5790fc00e5a499352e8598c01aaafbcfb5304cd720f44cb0de3b677ebe57</Anchor>
    <Abstract>Focus distance relative and in -Z axis of origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FOCUSMODE_RELATIVE_TO_OBSERVER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a9a82c5790fc00e5a499352e8598c01aaaeccaa778978a4bd4ba54a6c62b230cc7</Anchor>
    <Abstract>Focus distance relative and in direction of observer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UNDEFINED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a7a39b4d7daaafe7ee47b948a82356cf9</Anchor>
    <Abstract>Undefined value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SOCKET</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a76ff681f8dc917ac432aada5f01be30b</Anchor>
    <Abstract>CPU thread affinity: -64k..-1024.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CORE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a39953841ba513e364b4c18fa9e9f1ad4</Anchor>
    <Abstract>Core thread affinity: 1..oo.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SOCKET_MAX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a2b293f8758aec4b2f73d63a30ef621c0</Anchor>
    <Abstract>Highes bindable CPU.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RELATIVE_TO_OBSERVER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2ab094545dcfa4c2b2c595a2aa0e364f42</Anchor>
    <Abstract>focal convergence relative to observer</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RELATIVE_TO_ORIGIN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2ac06ad74bb2d305a30dde5c47e8008557</Anchor>
    <Abstract>focal convergence relative to origin</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIXED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a14e3bc2cbdf8cd1adafbdd42df9bc71d</Anchor>
    <Abstract>config or observer focus fixed on wall/projection</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RGBA32F</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a09dea5fc7e9f2a16345da2a8f0bc17b9</Anchor>
    <Abstract>Float32 framebuffer (Window::IATTR_PLANES_COLOR)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RGBA16F</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a147f4d3382cd3f330cb2f056d2d7ac6d</Anchor>
    <Abstract>Float16 framebuffer (Window::IATTR_PLANES_COLOR)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2af2b4a222009a5f449e38fb25f5455d5c</Anchor>
    <Abstract>FBO drawable (Window::IATTR_HINT_DRAWABLE)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOCAL_SYNC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a7bce4e91fbeb48cd2dbb6ece15aa6042</Anchor>
    <Abstract>Full local sync (Node::IATTR_THREAD_MODEL)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DRAW_SYNC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2ab42af08df96f5abf4ee8d94c1283e0b2</Anchor>
    <Abstract>Local draw sync (Node::IATTR_THREAD_MODEL)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ASYNC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2ad05943daebd995374763de385845d2c9</Anchor>
    <Abstract>No local sync (Node::IATTR_THREAD_MODEL)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PBUFFER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a49a543192f4299a3a6f9f2b60898bec9</Anchor>
    <Abstract>PBuffer drawable (Window::IATTR_HINT_DRAWABLE)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WINDOW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a5dc85dcf970fef784490ca52c9fa8651</Anchor>
    <Abstract>Window drawable (Window::IATTR_HINT_DRAWABLE)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VERTICAL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2abe836a3ae3d50d5656d18f05a09d8e59</Anchor>
    <Abstract>Vertical load-balancing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QUAD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2ae9748b78c839c1b2e9361bd1bf56dd09</Anchor>
    <Abstract>Quad-buffered stereo decomposition.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ANAGLYPH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2aba42784cc4ea919ac814c9d94fbde6b1</Anchor>
    <Abstract>Anaglyphic stereo decomposition.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PASSIVE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2af1b1efde1de8e869f841c5dae119b754</Anchor>
    <Abstract>Passive stereo rendering.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICEST</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a3c2346f35d2141c4821610f69a1eaf50</Anchor>
    <Abstract>Nicest statistics gathering (Window::IATTR_HINT_STATISTICS, Channel::IATTR_HINT_STATISTICS)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2afea8a64c1aef24d76cdbd4d7dd27ce0c</Anchor>
    <Abstract>Automatic selection (various attributes)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OFF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a5d3165051d79665732e9e6c06ff02128</Anchor>
    <Abstract>disabled (various attributes)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a214d2cf8b301cb58983036df95de3d00</Anchor>
    <Abstract>enabled (various attributes)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FASTEST</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a0227251703de6c882798a6b9b6d35c61</Anchor>
    <Abstract>Fastest statistics gathering (Window::IATTR_HINT_STATISTICS, Channel::IATTR_HINT_STATISTICS)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HORIZONTAL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a01b6b996932dcb42ea205e657abae6b2a8213313496c3b4ac3104ba55d686fe8f</Anchor>
    <Abstract>Horizontal load-balancing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_INIT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a65f25f150c93d992a29cb6237d32fb5ca0b947a608086729315989294636fda98</Anchor>
    <Abstract>Log initialization (512)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_CUSTOM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a65f25f150c93d992a29cb6237d32fb5caf096b965ceb7ca4f3955c99a6f308d6c</Anchor>
    <Abstract>1024</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NODETYPE_EQ_SERVER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a7a79990d899212df9a55559a946fa102a06b00fa1c0333e1210b2c41b06783704</Anchor>
    <Abstract>A server node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TASK_DEFAULT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a978851485c07a71e4fff423d89b285d8a394aee61bef302ab4fe5c557d163ab72</Anchor>
    <Abstract>leaf: all, other ASSEMBLE|READBACK|VIEW</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TASK_VIEW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a978851485c07a71e4fff423d89b285d8af22278d9d4393b4ce9fd57be41021558</Anchor>
    <Abstract>View start/finish.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TASK_CLEAR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a978851485c07a71e4fff423d89b285d8a55b628bde3a395ef7754dd7644081f55</Anchor>
    <Abstract>Clear the framebuffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TASK_CULL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a978851485c07a71e4fff423d89b285d8a8641e181f535d1879999d5bf5c10d7b6</Anchor>
    <Abstract>Cull data [unused].</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TASK_DRAW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a978851485c07a71e4fff423d89b285d8a6c29280792a95a19cb8413b985ced713</Anchor>
    <Abstract>Draw data to the framebuffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TASK_ASSEMBLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a978851485c07a71e4fff423d89b285d8a2ea027dd4094092dfe1ba891793bf819</Anchor>
    <Abstract>Combine input frames.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TASK_READBACK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a978851485c07a71e4fff423d89b285d8a54339a7277ade86c1dcbd21f61f7f888</Anchor>
    <Abstract>Read results to output frames.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TRAVERSE_CONTINUE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a32753d3ccc8ecd59562ec1238aa60264ae7178006e2630ca7dccba7e2a4835bb4</Anchor>
    <Abstract>continue the traversal</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TRAVERSE_TERMINATE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a32753d3ccc8ecd59562ec1238aa60264a9459ee1d515a25c7a66fad6d92ae2a4e</Anchor>
    <Abstract>abort the traversal</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TRAVERSE_PRUNE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1fabric.html</Path>
    <Anchor>a32753d3ccc8ecd59562ec1238aa60264a51e354fbeafa7c7d68b1ebf0209a263b</Anchor>
    <Abstract>do not traverse current entity downwards</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Canvas</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Abstract>A canvas represents a logical 2D projection surface.</Abstract>
    <DeclaredIn>canvas.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Anchor>a217d5ee92bba00ece42388b8629f0729</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Anchor>afba34d60aae57b7eaac4cdba2616ec4c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActiveLayoutIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Anchor>a8e24e509abfe033a4d76edf3ef6ef6ba</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActiveLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Anchor>ac7a7a7dd37398e844ae3e78cebc8cd5b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSegments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Anchor>a4690d08d2fbbf3926187fd130ab23e79</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLayouts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Anchor>ac597f5b646ef8a194e9f8402a723f266</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Anchor>a91af3b5eee7db059974b12a0e84adfac</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Anchor>a098b5e998171a19ffbaa1b7f58ac60d4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsetFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Anchor>a1683f218771ec081436cc3868da3a1fc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Anchor>a139a4ab8462bec50fb84052a69579f50</Anchor>
    <Abstract>Activate the given layout on this canvas.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Anchor>affe95b4bbe1909168fca3eaa2bfef1d8</Anchor>
    <Abstract>Traverse this canvas and all children using a canvas visitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Anchor>a446782b9968af972bdbd57390961631d</Anchor>
    <Abstract>Const-version of accept().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Canvases</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Anchor>a6a67e9740720e6d423a7c046c6792523</Anchor>
    <Abstract>A vector of canvases.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Segments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Anchor>af8784510d513b46d6a17981dbda687ca</Anchor>
    <Abstract>A vector of segments.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Layouts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Anchor>aa2ba02e09640fe2107984f5368f14928</Anchor>
    <Abstract>A vector of layouts.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Visitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Anchor>a95b6899fe275cbe3214d8d41f95fd515</Anchor>
    <Abstract>A Canvas visitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Canvas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Anchor>ab76c5c0835a408c41abce1608aa28735</Anchor>
    <Abstract>Construct a new Canvas.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Canvas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Anchor>a8025946d815808fff70cb7deffe25e41</Anchor>
    <Abstract>Destruct this canvas.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Anchor>a572f480b70277ed366df880293cb9cc4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Anchor>ae9c45e98c992587e367997fb22e7521f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyDetach</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Anchor>a29ecac5f013046e743852d21060dab2d</Anchor>
    <Abstract>Notify that this object will be deregistered or unmapped.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Canvas</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Canvas.html</Path>
    <Anchor>a7965e8f32b362d86f366fd5da976f03e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Channel</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Abstract>Base data transport class for channels.</Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>ab2aaed90da9030248d5255f1cfe2070f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a6356f651199bba9b9925bc3c54b859ab</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNativePixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a7c9bd91890416d860cde709b3139aaa0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a0f1854b0407fd8bf1b67019addcd20b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNearFar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a68de09f0af71688cd6021f4dee283f4d</Anchor>
    <Abstract>Set the near and far planes for this channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDrawable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>afb4ac0b828287c3eae179dd8896d350c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a2b9db6dc0a855ee41beb681b5615515a</Anchor>
    <Abstract>Traverse this channel using a channel visitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a97b12497d9cef79372df69f0f61ed14a</Anchor>
    <Abstract>Const-version of accept().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCapabilities</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>ad1b9b116389b4907f2d1804bd81a2193</Anchor>
    <Abstract>Set the capabilities supported by the channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCapabilities</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a0a786b8cf66393ebe4633405df1469f2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>af667b4074f02e830aa7cddfc1451926f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDrawBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a861f4c291a77b09cce9e788bfd380127</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReadBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a343254c0881fbcdbbe39270e930cd2a5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDrawBufferMask</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a1885ef51b70bee3b8e1d099ca7487ff7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a3943b82e9a4980f41155e2e95aa14d83</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useOrtho</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a9b3d02de45551ad52be390928bb54554</Anchor>
    <Abstract>Select perspective or orthographic rendering.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a8e9c77f2ee356d6aa3c2b4d97dc709c2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPerspective</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a0c986a8eca7a82df6f7b05324fc92554</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOrtho</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>adfd47320b686909e4c78df306cd1498b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeadTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a9b48c6ea3bec6054f6503d06834e56f4</Anchor>
    <Abstract>Return the view matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPerspectiveTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a312f67c94ba255d2196bb01f514897cf</Anchor>
    <Abstract>Return the perspective view matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOrthoTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a9a8a69b8f063d81a1decd6320df56273</Anchor>
    <Abstract>Return the orthographic view matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>aa5df108f0004ee002e568d3181419c07</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>ad91975289a44e9f9578de0c9aa5b842c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a12d825673baf323b931e560a28114290</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSubPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>ab611fbd3666f5d4651905873695d207d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>ad86daca55af983a02ddc6156b22847b2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPeriod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a29b7a2aea745e70b62705da8e23a771c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPhase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>aa31a1cd7f63257809d99ed0386d2a17c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a12c18e0d277dc35920e4ca8941f5f63b</Anchor>
    <Abstract>Get the channel&amp;#39;s current position wrt the destination channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEye</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>ae765a57b67dcd806fb5906ec246dfaa1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOverdraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a33e206b85fb85058fa829f8d3cb425af</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTaskID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a3a42f9b72a9a918659c83b06b9075134</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Visitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>ae05bc99a89d01a880b5fefe8fb00c4fb</Anchor>
    <Abstract>The channel visitor type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a8e9fd882027bb6f2d5597c2a470ab686</Anchor>
    <Abstract>The parent window type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>ab6993ec8fd0d503af791656d19390201</Anchor>
    <Abstract>Construct a new channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a7ccc7384abdd3235d9682063249d14d6</Anchor>
    <Abstract>Construct a copy of a channel (view/segment dest).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a43e0432b68ab37a66e0e3e1e48bc90fe</Anchor>
    <Abstract>Destruct the channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a522a62d44fd34ef1910c7c24860296a1</Anchor>
    <Abstract>Worker for pack() and getInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a92c2d48bc6f85040c6020b976ee617d3</Anchor>
    <Abstract>Worker for unpack() and applyInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a6f8d7be8cb29d039ec600cd4021e06af</Anchor>
    <Abstract>Add dirty flags to mark data for distribution.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChangeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a3a76f479da6d9707a0b4413b50c34ac1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>ab95924efea8b5108e4310807c19dfe7a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttributeString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a476015e957cef7f0e52d0b91a3197f43</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FB_WINDOW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>affe359871935c07d291667b7893516e4a3bd58016d36e6d75d41b6976e0f6669a</Anchor>
    <Abstract>Use the window&amp;#39;s frame buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FBO_COLOR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>affe359871935c07d291667b7893516e4afb03c5280496b412994e7d76a8408166</Anchor>
    <Abstract>Use an FBO for color values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FBO_DEPTH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>affe359871935c07d291667b7893516e4a7a91638e454746c419b0339344adfdb9</Anchor>
    <Abstract>Use an FBO for depth values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FBO_STENCIL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>affe359871935c07d291667b7893516e4acad0585931bea292db0f475b478c2ce2</Anchor>
    <Abstract>Use an FBO for stencil values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_STATISTICS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a7b6740187badb415e81d5662fcde4b86a5cabbab59a24ad8442f62bc4fa708db4</Anchor>
    <Abstract>Statistics gathering mode (OFF, FASTEST [ON], NICEST)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_SENDTOKEN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Channel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Channel.html</Path>
    <Anchor>a7b6740187badb415e81d5662fcde4b86adbf0d71708df321708d04e6833433539</Anchor>
    <Abstract>Use a send token for output frames (OFF, ON)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Client</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Client.html</Path>
    <Abstract>A client represents a network node of the application in the cluster.</Abstract>
    <DeclaredIn>client.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>connectServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Client.html</Path>
    <Anchor>a45496e0cd52540fe3442dd1307256538</Anchor>
    <Abstract>Open and connect an Equalizer server to the local client.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disconnectServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Client.html</Path>
    <Anchor>a0d31688b2ab2e4acdacff3c018484f93</Anchor>
    <Abstract>Disconnect and close the connection to an Equalizer server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processCommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Client.html</Path>
    <Anchor>aeccf9ea626c95281a88e6c72f6dd476b</Anchor>
    <Abstract>Get and process one pending command from the node command queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMainThreadQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Client.html</Path>
    <Anchor>aa62adb7450cdf6c9ec1ab336c8ad1009</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatchCommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Client.html</Path>
    <Anchor>a98aa4e54bd3d6f0599a062cde9a22c68</Anchor>
    <Abstract>Dispatches a packet to the registered command queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Client</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Client.html</Path>
    <Anchor>aa07372ffdc67410f26b60406a15845f4</Anchor>
    <Abstract>Construct a new client.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Client</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Client</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Client.html</Path>
    <Anchor>a6929f8f144ce8a17472fc233816e1a70</Anchor>
    <Abstract>Destruct the client.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::ColorMask</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::ColorMask</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1ColorMask.html</Path>
    <Abstract>Defines which parts of the color buffer are to be written.</Abstract>
    <DeclaredIn>colorMask.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ColorMask</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ColorMask</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1ColorMask.html</Path>
    <Anchor>a8a74cf6af184f6240446f5bc79b7e321</Anchor>
    <Abstract>Construct a color mask with all components enabled.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ColorMask</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ColorMask</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1ColorMask.html</Path>
    <Anchor>a3c40761149afd43f96358b4b649b92bf</Anchor>
    <Abstract>Construct a color mask with given default values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Config</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Abstract>Base data class for a configuration.</Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>ae352b2c77d4308ad04eddcab7c83393d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>a72673030ff85c9023a64895670efb897</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getObservers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>a269be2ca62737368d6cca3187b88ccb4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLayouts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>aa46e4fa5672c9fe4c60056ce5fa5eae5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCanvases</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>a74d793421e8c852feb3be32073a05efc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>aa2bd8ef50b23c12d31971d1e6fd249d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>a3c11a50231106962f3e6ad8ea67695d6</Anchor>
    <Abstract>Traverse this config and all children using a config visitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>a59ec77e861d9acbf81e5c23ef643f68a</Anchor>
    <Abstract>Const-version of accept().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>a800bad8102922f984cdcdc7ee920e7b9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>a639e012504a7ad8a89d3a3964702d468</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>acdca4d4ba2ce8836c34eb648f1d0abec</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>aeaf4e3ff967956b237fee6dd03fe85f0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>a5fa38850580e61ab97a7959d4cb610c3</Anchor>
    <Abstract>Set the maximum accepted latency for this config.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>a67b61dbe9d02da6ba06f19a605bfd7d8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Observers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>a850edb71abce1711d6216424b7a1c02d</Anchor>
    <Abstract>A vector of observers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Layouts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>a0f16d3e676d5c5292ea75b912e067f57</Anchor>
    <Abstract>A vector of layouts.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Canvases</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>a7d274a34b4ea7b874af6c16b2a4054af</Anchor>
    <Abstract>A vector of canvases.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>ae3262044735bd0177588b1d2d224a4d8</Anchor>
    <Abstract>A vector of nodes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>a7bee7cbc128b30f1b4155f82ee230d5b</Anchor>
    <Abstract>Worker for pack() and getInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>add6a596f1b9aa56c8bdd20c7eb8e6d51</Anchor>
    <Abstract>Worker for unpack() and applyInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyDetach</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>a97019e1914b1e3e7cf8a892d6b3815e7</Anchor>
    <Abstract>Notify that this object will be deregistered or unmapped.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>a7a10394660a9f82e3479a19f20e22b48</Anchor>
    <Abstract>Commit a new version of this object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>a950cc441120145cc27cefd7d344de4ff</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>af8ee449a7b2ef9d0f5d0daf9fb7b61de</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FATTR_EYE_BASE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>a6ba87a3cb798fd5801d0e4ae08c70ad3a1e337e7cf6d464118f0b639d1d811bdc</Anchor>
    <Abstract>The default interocular distance in meters.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FATTR_VERSION</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>a6ba87a3cb798fd5801d0e4ae08c70ad3af9994f969604fadb54f62a707856fcbc</Anchor>
    <Abstract>The version of the file loaded.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_ROBUSTNESS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Config</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Config.html</Path>
    <Anchor>a3c8040f9b7c224b736e2ecb8ff0a7922ac8e061aa4ef75b2246571bd569a5a8a3</Anchor>
    <Abstract>Tolerate resource failures.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::ConfigVisitor</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::ConfigVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1ConfigVisitor.html</Path>
    <Abstract>A visitor to traverse configs and all children.</Abstract>
    <DeclaredIn>configVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1ConfigVisitor.html</Path>
    <Anchor>a52c4844969e8f7abb873dc148ba5480a</Anchor>
    <Abstract>Construct a new config visitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ConfigVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1ConfigVisitor.html</Path>
    <Anchor>a717d2700db3a60d480027a4ab2ce4974</Anchor>
    <Abstract>Destruct this config visitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitPre</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1ConfigVisitor.html</Path>
    <Anchor>a61a8c15a0a92063e37c5ce421ab34550</Anchor>
    <Abstract>Visit a config on the down traversal.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitPost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1ConfigVisitor.html</Path>
    <Anchor>a5dbd41d23c63733a11fc38d9760ad40c</Anchor>
    <Abstract>Visit a config on the up traversal.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitPre</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1ConfigVisitor.html</Path>
    <Anchor>ae9ff2918963aa992959be1cb798e9900</Anchor>
    <Abstract>Visit a config on the down traversal.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitPost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ConfigVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1ConfigVisitor.html</Path>
    <Anchor>a6135a160841f3febc455bb97e2d36027</Anchor>
    <Abstract>Visit a config on the up traversal.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::DrawableConfig</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::DrawableConfig</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1DrawableConfig.html</Path>
    <Abstract>Stores the characteristics of a window&amp;#39;s frame buffer configuration.</Abstract>
    <DeclaredIn>drawableConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stencilBits</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::DrawableConfig</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1DrawableConfig.html</Path>
    <Anchor>a8ef61214b3dd4f013b63eeb1dfa2b107</Anchor>
    <Abstract>Number of stencil bits.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>colorBits</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::DrawableConfig</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1DrawableConfig.html</Path>
    <Anchor>a7359200cfb974cb231d6284a73586cce</Anchor>
    <Abstract>Number of bits per color component.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alphaBits</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::DrawableConfig</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1DrawableConfig.html</Path>
    <Anchor>ad885736c0fdacef8f54cd0655461ebcc</Anchor>
    <Abstract>Number of alpha bits.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accumBits</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::DrawableConfig</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1DrawableConfig.html</Path>
    <Anchor>a30d981022fa31adeb0186042e6324076</Anchor>
    <Abstract>Number of accumulation bits.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::DrawableConfig</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1DrawableConfig.html</Path>
    <Anchor>aa497ef511d3e9413f64e61f32f524829</Anchor>
    <Abstract>OpenGL version.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stereo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::DrawableConfig</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1DrawableConfig.html</Path>
    <Anchor>ae1629d9a106f1d77a9280961418c4d20</Anchor>
    <Abstract>Active stereo supported.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doublebuffered</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::DrawableConfig</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1DrawableConfig.html</Path>
    <Anchor>ae8dbe2b17a8220b224c411facbd881d1</Anchor>
    <Abstract>Doublebuffering supported.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::ElementVisitor</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::ElementVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1ElementVisitor.html</Path>
    <Abstract>A visitor to traverse non-leaf elements and their children in a tree.</Abstract>
    <DeclaredIn>elementVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ElementVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ElementVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1ElementVisitor.html</Path>
    <Anchor>addd2886df6a65773be02ef7da5646ed4</Anchor>
    <Abstract>Construct a new visitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ElementVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ElementVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1ElementVisitor.html</Path>
    <Anchor>a2e2821da7648c96a595803d03f54e0e4</Anchor>
    <Abstract>Destruct the visitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitPre</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ElementVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1ElementVisitor.html</Path>
    <Anchor>aefdb23a30a1d33a81db35f1279bd0368</Anchor>
    <Abstract>Visit an element on the down traversal.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitPost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ElementVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1ElementVisitor.html</Path>
    <Anchor>afb0fb8da5ae30f66cfa5bc85c7856589</Anchor>
    <Abstract>Visit an element on the up traversal.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitPre</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ElementVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1ElementVisitor.html</Path>
    <Anchor>a3cf6923c3a45c3e7d0cf287c6a60e912</Anchor>
    <Abstract>Visit an element on a const down traversal.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitPost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::ElementVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1ElementVisitor.html</Path>
    <Anchor>aaa653911f879ac09b61fd18dc4d2b593</Anchor>
    <Abstract>Visit an element on a const up traversal.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Frame</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frame.html</Path>
    <Abstract>A holder for a frame data and related parameters.</Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Frame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frame.html</Path>
    <Anchor>a5bd2293022a15f035ca37c72046fe227</Anchor>
    <Abstract>Construct a new frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Frame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frame.html</Path>
    <Anchor>adb6265ebe9884dc164b14d1b9f2c31fe</Anchor>
    <Abstract>Destruct the frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frame.html</Path>
    <Anchor>ab00a4d4f6b390b420cef0c4f25c3b809</Anchor>
    <Abstract>Set the name of the frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frame.html</Path>
    <Anchor>adca095a9697c0bfdc094feea623abe3e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frame.html</Path>
    <Anchor>aaa3abefabf50ec3a4cd00dba1ad0afee</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frame.html</Path>
    <Anchor>a1b81d48d3ba71a08a0f2cce47591bd59</Anchor>
    <Abstract>Set the position of the frame wrt the channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frame.html</Path>
    <Anchor>a738f0732bbbe97926feadb589e18a0f2</Anchor>
    <Abstract>Set the zoom for this frame holder.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frame.html</Path>
    <Anchor>a1de9431036d3db446c7b2f85eb905fae</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChangeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frame.html</Path>
    <Anchor>a38c89bb8ce13fd20b672a9f548785811</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frame.html</Path>
    <Anchor>a3d507e868ef65bc790ae27b79446bdb5</Anchor>
    <Abstract>Serialize all instance information of this distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frame.html</Path>
    <Anchor>a563336bb889f1be8253eb03a5a8fa6a5</Anchor>
    <Abstract>Deserialize the instance data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BUFFER_UNDEFINED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frame.html</Path>
    <Anchor>a09d354db0c932b84a6194fd6c3e512c3a7db2914348736ce7536d1c23a61f5d22</Anchor>
    <Abstract>Inherit, only if no others are set.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BUFFER_COLOR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frame.html</Path>
    <Anchor>a09d354db0c932b84a6194fd6c3e512c3a417a4ec31cc1a4157f0be6792ff5f943</Anchor>
    <Abstract>Use color images.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BUFFER_DEPTH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frame.html</Path>
    <Anchor>a09d354db0c932b84a6194fd6c3e512c3a2deaaa96f7f23e2f3484b1905908dc8b</Anchor>
    <Abstract>Use depth images.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TYPE_MEMORY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frame.html</Path>
    <Anchor>add9e511de81ad2c43dc89dad4a109d1bacc6364283121236b94973c0578cad8a2</Anchor>
    <Abstract>use main memory to store pixel data</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TYPE_TEXTURE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Frame</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frame.html</Path>
    <Anchor>add9e511de81ad2c43dc89dad4a109d1ba2c3649adfda68fccea7ee865fb06291d</Anchor>
    <Abstract>use a GL texture to store pixel data</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Frustum</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frustum.html</Path>
    <Abstract>A distributed object for frustum data.</Abstract>
    <DeclaredIn>frustum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Frustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frustum.html</Path>
    <Anchor>ade5fbf502f14a58b43bf61dbbfe6ddb5</Anchor>
    <Abstract>Construct a new frustum.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Frustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frustum.html</Path>
    <Anchor>aad9b1ba71bc7986ced2fcb59effde534</Anchor>
    <Abstract>Destruct the frustum.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frustum.html</Path>
    <Anchor>ab8096993291aba3139e9b92eb52dc5f6</Anchor>
    <Abstract>Set the frustum using a wall description.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frustum.html</Path>
    <Anchor>a880c8453943b8b0426157d09bf3d5906</Anchor>
    <Abstract>Set the frustum using a projection description.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frustum.html</Path>
    <Anchor>a91f256d93807510db28db6e50c880477</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frustum.html</Path>
    <Anchor>acced38d338d315945ad93794e3ffda46</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frustum.html</Path>
    <Anchor>afebc9278e21a6641ba1baa5b117d18fe</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsetFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frustum.html</Path>
    <Anchor>a3608041f8996d4cde3d7f3e6f73ec355</Anchor>
    <Abstract>Set the last specified frustum to TYPE_NONE.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TYPE_NONE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frustum.html</Path>
    <Anchor>ae7ff821685c19bd70c3a343f12b7da2ca490dbe8078bd08862263fc461ea94512</Anchor>
    <Abstract>No frustum has been specified.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TYPE_WALL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frustum.html</Path>
    <Anchor>ae7ff821685c19bd70c3a343f12b7da2ca38ac0af3d403e01913147c443613cf53</Anchor>
    <Abstract>A wall description has been set last.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TYPE_PROJECTION</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Frustum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Frustum.html</Path>
    <Anchor>ae7ff821685c19bd70c3a343f12b7da2ca3634c20ddd1c8c13a429fc0eeafebed1</Anchor>
    <Abstract>A projection description has been set last.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Global</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Global.html</Path>
    <Abstract>Global parameter handling for the Equalizer fabric namespace.</Abstract>
    <DeclaredIn>global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::fabric::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Global.html</Path>
    <Anchor>aaa2c7abb45224ab25fe51bf375465b4b</Anchor>
    <Abstract>Set the default Equalizer server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::fabric::Global</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Global.html</Path>
    <Anchor>a0475f3c163c92713ab7180d3d7620e1f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::GPUInfo</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1GPUInfo.html</Path>
    <Abstract>A structure containing GPU-specific information.</Abstract>
    <DeclaredIn>gpuInfo.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GPUInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1GPUInfo.html</Path>
    <Anchor>a52d5528baf0db355fd5388005c8e83bf</Anchor>
    <Abstract>Default constructor pointing to default display.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1GPUInfo.html</Path>
    <Anchor>ac5fc7b4f2bd285af5b878326c8afeef0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eq::fabric::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1GPUInfo.html</Path>
    <Anchor>ae70b87f3a7c083440eda0f1c256fac7d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>port</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1GPUInfo.html</Path>
    <Anchor>a4ec87adbc06314bb06f9952ddd6ef455</Anchor>
    <Abstract>The display (GLX) or ignored (Win32, AGL).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>device</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1GPUInfo.html</Path>
    <Anchor>a54fe13d1ea880cc6c3b485ae02bf8eff</Anchor>
    <Abstract>The screen (GLX), GPU (Win32) or virtual screen (AGL).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pvp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1GPUInfo.html</Path>
    <Anchor>a6f4cb49bbdab2874faf01e71fc46c4dc</Anchor>
    <Abstract>The size and location of the GPU.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hostname</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structeq_1_1fabric_1_1GPUInfo.html</Path>
    <Anchor>afc4af73b2d9c9ab7e8780f9739f01cf2</Anchor>
    <Abstract>remote system hostname, empty for local GPUs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Layout</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Layout.html</Path>
    <Abstract>Base data transport class for layouts.</Abstract>
    <DeclaredIn>layout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Layout.html</Path>
    <Anchor>a6c75849597cb4b7dc4998df9cde113c9</Anchor>
    <Abstract>Traverse this layout and all children using a layout visitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Layout.html</Path>
    <Anchor>add6273084a00d8b990ceafdc151afc46</Anchor>
    <Abstract>Const-version of accept().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Layout.html</Path>
    <Anchor>a7c22dc5245899f2f7ff2393e7a7cccde</Anchor>
    <Abstract>Worker for pack() and getInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Layout.html</Path>
    <Anchor>a01f99d1f4ecc1e87103bcd87e67e31e5</Anchor>
    <Abstract>Worker for unpack() and applyInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyDetach</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Layout.html</Path>
    <Anchor>a996abba9cdca1ce017252e28465d0cb6</Anchor>
    <Abstract>Notify that this object will be deregistered or unmapped.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Layout.html</Path>
    <Anchor>acf5421ab42f84eaa9001d705f4fe66e0</Anchor>
    <Abstract>Add dirty flags to mark data for distribution.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Views</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Layout.html</Path>
    <Anchor>a1260fce285ef8fa8a8acaaf1a7f8935c</Anchor>
    <Abstract>A vector of pointers to views.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Visitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Layout.html</Path>
    <Anchor>a55054acb56e90a5040eaa3be04ed0f89</Anchor>
    <Abstract>The layout visitor type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Layout.html</Path>
    <Anchor>a69074a029036f9393d80d8f3475d1f71</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Layout.html</Path>
    <Anchor>a8bf14eadfc7aae253a66855abe386ca4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViews</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Layout.html</Path>
    <Anchor>a538e40ff4b469ba4f139ae755c4f1274</Anchor>
    <Abstract>Get the list of views.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Layout</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Layout.html</Path>
    <Anchor>a8aa0f24fa6e9bc1f54bc03eb5b093671</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::LeafVisitor</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::LeafVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1LeafVisitor.html</Path>
    <Abstract>A visitor to traverse leaf nodes of a graph.</Abstract>
    <DeclaredIn>leafVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LeafVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::LeafVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1LeafVisitor.html</Path>
    <Anchor>afd6f309d281277f352ab674992c0b43c</Anchor>
    <Abstract>Constructs a new leaf visitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~LeafVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::LeafVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1LeafVisitor.html</Path>
    <Anchor>affe7ada72e74f4590ce2a57a78035149</Anchor>
    <Abstract>Destruct the leaf visitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::LeafVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1LeafVisitor.html</Path>
    <Anchor>adbc1289ae58e788826e562d4d7fd8308</Anchor>
    <Abstract>Visit a leaf node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::LeafVisitor</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1LeafVisitor.html</Path>
    <Anchor>ab6d06656a4c8e15508d6f5b606e9fb99</Anchor>
    <Abstract>Visit a leaf node during a const traversal.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Node</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Node.html</Path>
    <Abstract>Base data transport class for nodes.</Abstract>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Node.html</Path>
    <Anchor>a9823a3d23f3cb37807051c12fe39f0ca</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Node.html</Path>
    <Anchor>a784cf2609858a9424d5f8a2b9ffd84f6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Node.html</Path>
    <Anchor>aebe39b02687d1a8a199b0189e739b506</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Node.html</Path>
    <Anchor>a73cccf14a0651083eb79affb03ea1acc</Anchor>
    <Abstract>Traverse this node and all children using a node visitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Node.html</Path>
    <Anchor>a3588a0018d327a126c5535b39985d1f7</Anchor>
    <Abstract>Const-version of accept().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Node.html</Path>
    <Anchor>a8d904f0e14499f69c681830766afca5c</Anchor>
    <Abstract>Commit a new version of this object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pipes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Node.html</Path>
    <Anchor>a5b83ef6384309ef4cda8405f8229c43e</Anchor>
    <Abstract>A vector of pointers to pipes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Node.html</Path>
    <Anchor>a52b4015eeab8badc85ad907e76d1cca3</Anchor>
    <Abstract>Worker for pack() and getInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Node.html</Path>
    <Anchor>aa484788eaede1cf17b85dcb58056eb19</Anchor>
    <Abstract>Worker for unpack() and applyInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyDetach</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Node.html</Path>
    <Anchor>a0ca9bba639bb48ba5e72755b9aad561a</Anchor>
    <Abstract>Notify that this object will be deregistered or unmapped.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Node.html</Path>
    <Anchor>a1a019d07f253c74d7c2b5fdb43b0e0a1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChangeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Node.html</Path>
    <Anchor>a59f446b4c205cab828a101236a511d98</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Node.html</Path>
    <Anchor>af7ef63417275729265fba566723f7a11</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_THREAD_MODEL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Node.html</Path>
    <Anchor>aefaa00336b31bd3bb46303e3a50283e3a5ece38d2b936b4f93ea8d7a152dbaf60</Anchor>
    <Abstract>Threading model</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_LAUNCH_TIMEOUT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Node</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Node.html</Path>
    <Anchor>aefaa00336b31bd3bb46303e3a50283e3aa4954bdfbecb2bb809a4f14d2dcee8ec</Anchor>
    <Abstract>Timeout when auto-launching the node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Object</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Object.html</Path>
    <Abstract>Internal base class for all distributed, inheritable Equalizer objects.</Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Object.html</Path>
    <Anchor>afe6842fc23878c1255e1a84debf12b47</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Object.html</Path>
    <Anchor>a416102f230e35db3e2ff74ae25a92fa1</Anchor>
    <Abstract>Commit a new version of this object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Object.html</Path>
    <Anchor>a17f3c911cc5fb4abccf11c17c112ec33</Anchor>
    <Abstract>Set the name of the object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Object.html</Path>
    <Anchor>af7f21d7c7e7b3a5f18e840c8a3cdfa24</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Object.html</Path>
    <Anchor>a886d5a3f8d0a2ca7de0356c6fcffe70c</Anchor>
    <Abstract>Set user-specific data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Object.html</Path>
    <Anchor>adc4c185806ce4c6c5959926a6f0df9c4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Object.html</Path>
    <Anchor>a3b8b5c492f0dba41fc2a04dfdf6430c1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Object.html</Path>
    <Anchor>a165054011f177f1847d88ae55b70d000</Anchor>
    <Abstract>Set an error code why the last operation failed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Object.html</Path>
    <Anchor>ab6201b0903652b9e671c5758931e33f1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTasks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Object.html</Path>
    <Anchor>ae69f2af3b7c5a1a19a69477a657be484</Anchor>
    <Abstract>Return the set of tasks this channel might execute in the worst case.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Object.html</Path>
    <Anchor>a67529d3d7c209123502034a3a2078718</Anchor>
    <Abstract>Construct a new Object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Object.html</Path>
    <Anchor>a44d2201571ea93c49cf98a7d7fc78905</Anchor>
    <Abstract>Destruct the object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Object.html</Path>
    <Anchor>aea00c39dfb613d9fb7843dbb68459892</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Object.html</Path>
    <Anchor>a321f24113c02e0f16830a403e03f62e9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyDetach</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Object.html</Path>
    <Anchor>a0c27c82d828adda9df7b593024fca4c3</Anchor>
    <Abstract>Notify that this object will be deregistered or unmapped.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Object.html</Path>
    <Anchor>abab0c13139d685d72f465f6db06e21b4</Anchor>
    <Abstract>Worker for pack() and getInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Object</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Object.html</Path>
    <Anchor>a36888ae8b2df85dd2e1ba1b87b7f8d1c</Anchor>
    <Abstract>Worker for unpack() and applyInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Observer</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Observer.html</Path>
    <Abstract>Base data transport class for observers.</Abstract>
    <DeclaredIn>observer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Observer.html</Path>
    <Anchor>a9b44678ad71c5fe58c6649d0a38c2933</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Observer.html</Path>
    <Anchor>a5f238596a9e6685d586be4d82b68c978</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEyeBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Observer.html</Path>
    <Anchor>a8d767d437a51ff3dedd70ae361d1b1a2</Anchor>
    <Abstract>Set the eye separation of this observer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEyeBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Observer.html</Path>
    <Anchor>a64c35c70d090cf70d3cdb9e17b1d5e10</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFocusDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Observer.html</Path>
    <Anchor>a58017865198c39c918db694b5c1c1ca2</Anchor>
    <Abstract>Set the focal distance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocusDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Observer.html</Path>
    <Anchor>aa19bea24cec84f3569b9ddc074302d5e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFocusMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Observer.html</Path>
    <Anchor>ae4f1b9a55c3ca63a50b4160f07e990dc</Anchor>
    <Abstract>Set the focal mode.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocusMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Observer.html</Path>
    <Anchor>a5eed082fbfd956dffef29c68c2e6464b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHeadMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Observer.html</Path>
    <Anchor>a884d5e6bfe8bcb4ec8dd5b6d413fb68a</Anchor>
    <Abstract>Set the head matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeadMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Observer.html</Path>
    <Anchor>a15c5d5bfe2ee08adfdbd8cbb44ee3576</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Observer.html</Path>
    <Anchor>add8360bb809d0ca15b61c8b3194a7f8b</Anchor>
    <Abstract>Traverse this observer using a observer visitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Observer.html</Path>
    <Anchor>a1a546c35d85ecb5019a1fd7e09643687</Anchor>
    <Abstract>Const-version of accept().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Visitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Observer.html</Path>
    <Anchor>a8fa034fb5ccbcd18f5ab80d2f3ab1215</Anchor>
    <Abstract>The observer visitor type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Observer.html</Path>
    <Anchor>ae5936c9e6e2ab6d3642ce0db70150f39</Anchor>
    <Abstract>Worker for pack() and getInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Observer.html</Path>
    <Anchor>a2f97865f3695063c34c2cb28dffb8731</Anchor>
    <Abstract>Worker for unpack() and applyInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Observer</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Observer.html</Path>
    <Anchor>a33ac1858d1713836f7a5c85aba423625</Anchor>
    <Abstract>Add dirty flags to mark data for distribution.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Pipe</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pipe.html</Path>
    <Abstract>Base data transport class for pipes.</Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pipe.html</Path>
    <Anchor>ab79eb8a45dcf5ec67ff74bda899c5845</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pipe.html</Path>
    <Anchor>ada0110e55156cadcaddd9cbf7fd9f803</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pipe.html</Path>
    <Anchor>a666c69d89845842455637caeee5c1b2f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pipe.html</Path>
    <Anchor>a6bbffa12120a01dc16bf89ab6877d8bb</Anchor>
    <Abstract>Returns the port number of this pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDevice</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pipe.html</Path>
    <Anchor>a7cb96628940d615d34dd6d62a636e9ac</Anchor>
    <Abstract>Returns the device number of this pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pipe.html</Path>
    <Anchor>af1d1dce4facd4be360288dfece07912e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pipe.html</Path>
    <Anchor>a21e02cbfa6032fdac6af1c8d5bc19c19</Anchor>
    <Abstract>Set the pipe&amp;#39;s pixel viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pipe.html</Path>
    <Anchor>a236bd348b796920f1cb00dfd38544032</Anchor>
    <Abstract>Traverse this pipe and all children using a pipe visitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pipe.html</Path>
    <Anchor>af0427c33a15d5d9abeb1dc20ab8a828a</Anchor>
    <Abstract>Const-version of accept().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pipe.html</Path>
    <Anchor>a396e2404ef410f43683a8bb201300b93</Anchor>
    <Abstract>Commit a new version of this object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Windows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pipe.html</Path>
    <Anchor>adcc29e245a4fe2cd6bf3949154c40e27</Anchor>
    <Abstract>A vector of pointers to windows.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pipe.html</Path>
    <Anchor>a5b95439b04220f2b963bd3cb4184a54f</Anchor>
    <Abstract>Worker for pack() and getInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pipe.html</Path>
    <Anchor>a7b6e021ccc4613d984adb215d1387e62</Anchor>
    <Abstract>Worker for unpack() and applyInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyDetach</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pipe.html</Path>
    <Anchor>a2b8b78fff778a184698ec69f099c6d53</Anchor>
    <Abstract>Notify that this object will be deregistered or unmapped.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pipe.html</Path>
    <Anchor>a1ba9c7f1c64acee5c6ab3d5dcfe2a93b</Anchor>
    <Abstract>Add dirty flags to mark data for distribution.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChangeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pipe.html</Path>
    <Anchor>a103a1a2e30104762f84cf56c6b173adf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pipe.html</Path>
    <Anchor>a0912a16df647045d9f4dd0538abb3f02</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_THREAD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pipe.html</Path>
    <Anchor>aed3ba4a1d748c4d6a8deff5ec07879d0ae69ac68301954561568e9ae66dcd5a15</Anchor>
    <Abstract>Execute tasks in separate thread (default)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_AFFINITY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pipe.html</Path>
    <Anchor>aed3ba4a1d748c4d6a8deff5ec07879d0ae822d37c88d2676ea0b5d37d48d8a8ed</Anchor>
    <Abstract>Bind render thread to subset of cores.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_CUDA_GL_INTEROP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pipe.html</Path>
    <Anchor>aed3ba4a1d748c4d6a8deff5ec07879d0a39bb6c9993743174a554ea8ac5617996</Anchor>
    <Abstract>Configure CUDA context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Pixel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Pixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pixel.html</Path>
    <Abstract>Holds a pixel decomposition specification with methods for manipulation.</Abstract>
    <DeclaredIn>pixel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pixel.html</Path>
    <Anchor>a0862c107d85eee59e0464a2e7ef55212</Anchor>
    <Abstract>Apply (accumulate) another pixel specification.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pixel.html</Path>
    <Anchor>a500fe52facc5b900f57748a818e0be9a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pixel.html</Path>
    <Anchor>a20004d1690cbb265121f69d89052ecf1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invalidate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pixel.html</Path>
    <Anchor>a3ebc1f2f5a0645eb937ec67fde416254</Anchor>
    <Abstract>Make the pixel specification invalid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>validate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pixel.html</Path>
    <Anchor>af67f0c5cf8211293cd1a2438a2b3550a</Anchor>
    <Abstract>Make the pixel specification valid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pixel.html</Path>
    <Anchor>a9b51849d96f1fb9a9622b8b1596f836f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pixel.html</Path>
    <Anchor>a842920bf6333a4db86567b239c9615da</Anchor>
    <Abstract>Construct a pixel specification covering all pixels of a frustum.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Pixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pixel.html</Path>
    <Anchor>a888b3b5b37c1e2996788be0a478c9a3c</Anchor>
    <Abstract>Construct a pixel specification with default values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ALL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Pixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Pixel.html</Path>
    <Anchor>a9ed7eb2b78958f9b2822d941029c7bd6</Anchor>
    <Abstract>A pixel specification covering all pixels.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::PixelViewport</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1PixelViewport.html</Path>
    <Abstract>Holds a 2D pixel viewport with methods for manipulation.</Abstract>
    <DeclaredIn>pixelViewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1PixelViewport.html</Path>
    <Anchor>aa01556986b07ac61921c34a4d583715d</Anchor>
    <Abstract>Construct a new, invalid pixel viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1PixelViewport.html</Path>
    <Anchor>ad93e7169b77d4179a90727a07be3374d</Anchor>
    <Abstract>Construct a new pixel viewport with default values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1PixelViewport.html</Path>
    <Anchor>a7c32199954fa681d7d35cce50e9c02aa</Anchor>
    <Abstract>Construct a new pixel viewport with default values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invalidate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1PixelViewport.html</Path>
    <Anchor>a99ab8c162a3d708fe2806e96e1d82156</Anchor>
    <Abstract>Invalidate the pixel viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1PixelViewport.html</Path>
    <Anchor>a5c688027ef3505d260606fe8cc8c371b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1PixelViewport.html</Path>
    <Anchor>a39e8081f0f79c98c09c7bf6dcdfd8f11</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1PixelViewport.html</Path>
    <Anchor>ad07b15973517ad95122fa4c38ba6d2df</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInside</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1PixelViewport.html</Path>
    <Anchor>aa5a84418295f928b179731974c8d8082</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1PixelViewport.html</Path>
    <Anchor>aea43434a9449d8bf678506eec69e3b12</Anchor>
    <Abstract>Apply a fractional viewport to this pixel viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1PixelViewport.html</Path>
    <Anchor>adece2cd23c7efb89c3f7e857090787a9</Anchor>
    <Abstract>Apply a pixel decomposition to this pixel viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1PixelViewport.html</Path>
    <Anchor>a7633d228daf686bf2ceb8857305deb26</Anchor>
    <Abstract>Apply a zoom to this pixel viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1PixelViewport.html</Path>
    <Anchor>a9bb4fc4bbe4a8c8b3b6d3cdaff891fd7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getXEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1PixelViewport.html</Path>
    <Anchor>acfd9129b309790f9c2aaecfc167b40c8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getYEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1PixelViewport.html</Path>
    <Anchor>a7b9db2a4cd4dcd933eea3658f953a80e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1PixelViewport.html</Path>
    <Anchor>a74a26d94ba156d901c34871a9e34757d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1PixelViewport.html</Path>
    <Anchor>a66d0317dcf0b3e7e10a1cbb836dc9cbd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unapply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1PixelViewport.html</Path>
    <Anchor>a697f067afdaf07e3062e932042ac5d42</Anchor>
    <Abstract>Perform the inverse operation of applying a pixel decomposition to this pixel viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1PixelViewport.html</Path>
    <Anchor>a359b3216a854a2e65cdedd0355b81bdc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1PixelViewport.html</Path>
    <Anchor>ac69e7f303121a4548cf7af330b8ff51f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>merge</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1PixelViewport.html</Path>
    <Anchor>a5e578b48913843ba2f3e6b28e8a66652</Anchor>
    <Abstract>Create a pixel viewport that includes both viewports (union).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intersect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::PixelViewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1PixelViewport.html</Path>
    <Anchor>a49173e93d092f8ddc4384d6956be5b0a</Anchor>
    <Abstract>Create the intersection of the two pixel viewports.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Projection</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Projection</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Projection.html</Path>
    <Abstract>A projector definition defining a view frustum.</Abstract>
    <DeclaredIn>projection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resizeHorizontal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Projection</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Projection.html</Path>
    <Anchor>a313d78b8541315cfe037c5a474ea0b8f</Anchor>
    <Abstract>Resize the horizontal FOV.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resizeVertical</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Projection</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Projection.html</Path>
    <Anchor>a2a55e85d76caf759dc7629bdd99cdd67</Anchor>
    <Abstract>Resize the vertical FOV.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Projection</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Projection.html</Path>
    <Anchor>aa7c15f1ddc4e08d525537b138a90d3f5</Anchor>
    <Abstract>Convert the projection parameters from a wall description.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Projection</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Projection.html</Path>
    <Anchor>ad94819e28bbf5c949f14361a62c9a06a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Projection</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Projection.html</Path>
    <Anchor>ac26800cf2bd42280f3cc310384e413c5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>origin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Projection</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Projection.html</Path>
    <Anchor>a2025c17d58d92e85c3db3034a870d9f2</Anchor>
    <Abstract>The position of the projection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>distance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Projection</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Projection.html</Path>
    <Anchor>ace084e5ec6055db0b28ee0805fe83f52</Anchor>
    <Abstract>The distance of the projection surface.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fov</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Projection</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Projection.html</Path>
    <Anchor>a28a3f9014976ce60ee813fdd7052f13c</Anchor>
    <Abstract>The x and y opening angle of the projection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hpr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Projection</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Projection.html</Path>
    <Anchor>a1c3883c4a3dc03cef484a9f9f156a58a</Anchor>
    <Abstract>The orientation (head, pitch, roll)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Range</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Range</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Range.html</Path>
    <Abstract>A fractional database range with methods for manipulation.</Abstract>
    <DeclaredIn>range.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Range</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Range</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Range.html</Path>
    <Anchor>ab290b02ee18341024df557db1bf25627</Anchor>
    <Abstract>Construct a new range covering all data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Range</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Range</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Range.html</Path>
    <Anchor>ae0efd403829a65c113a7bc3577e1b636</Anchor>
    <Abstract>Construct a new range with default values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Range</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Range.html</Path>
    <Anchor>a911ae4402d754ad951a95bf645de00da</Anchor>
    <Abstract>The start position.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Range</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Range.html</Path>
    <Anchor>a4040f166fdf60677f9fb505b609ebe20</Anchor>
    <Abstract>The end position.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ALL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Range</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Range.html</Path>
    <Anchor>ad1afb99cfb6a62e00b97519b71d06267</Anchor>
    <Abstract>A full database range.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Range</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Range.html</Path>
    <Anchor>a3c01d831116d3c7a485bb5a2d146b3ce</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Range</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Range.html</Path>
    <Anchor>af54d79870413d472012010e25bddbef4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Range</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Range.html</Path>
    <Anchor>aeba6df1067ce944161a16499b990d466</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::RenderContext</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1RenderContext.html</Path>
    <Abstract>The context applied to a channel during rendering operations.</Abstract>
    <DeclaredIn>renderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1RenderContext.html</Path>
    <Anchor>a11d0f0be3900b14b4303058edca957aa</Anchor>
    <Abstract>frustum for projection matrix</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ortho</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1RenderContext.html</Path>
    <Anchor>ab6712f58ad12e9ca1f033c2400cfb4f1</Anchor>
    <Abstract>ortho frustum for projection matrix</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>headTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1RenderContext.html</Path>
    <Anchor>a6706808f8096479e56aa5f2468193c9b</Anchor>
    <Abstract>frustum transform for modelview</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orthoTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1RenderContext.html</Path>
    <Anchor>a6155059085df3333e9b641e0211d6c88</Anchor>
    <Abstract>orthographic frustum transform</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>view</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1RenderContext.html</Path>
    <Anchor>ac735c0eb8b73af77e6222c5a06e11f69</Anchor>
    <Abstract>destination view id and version</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1RenderContext.html</Path>
    <Anchor>a7732c706570d88bdb2a1fb993131f258</Anchor>
    <Abstract>identifier from Config::beginFrame</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pvp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1RenderContext.html</Path>
    <Anchor>a56855c881c05341574a7771ed298ec1b</Anchor>
    <Abstract>pixel viewport of channel wrt window</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1RenderContext.html</Path>
    <Anchor>a987dc35fa7e5f573418b3c4423bd697b</Anchor>
    <Abstract>pixel decomposition wrt to dest</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1RenderContext.html</Path>
    <Anchor>a055d07fd092ba70c930224401d70105d</Anchor>
    <Abstract>fractional viewport wrt dest view</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>offset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1RenderContext.html</Path>
    <Anchor>a970d48ef9f6bbdd9459f733707cdb12a</Anchor>
    <Abstract>absolute position wrt dest channel</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>range</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1RenderContext.html</Path>
    <Anchor>a88b2b9d575d9527eea9e303a97ec24b6</Anchor>
    <Abstract>database-range wrt to dest channel</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subpixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1RenderContext.html</Path>
    <Anchor>a04c4cee49d50b5f9b3104fae3ef0f8d6</Anchor>
    <Abstract>subpixel decomposition wrt to dest</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1RenderContext.html</Path>
    <Anchor>ab3a268f063c223533ee2acd337297c99</Anchor>
    <Abstract>up/downsampling wrt to dest</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1RenderContext.html</Path>
    <Anchor>a1b0a7ea74d1d27e6a0a962d630a9b108</Anchor>
    <Abstract>buffer as passed to glDrawBuffer()</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>period</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1RenderContext.html</Path>
    <Anchor>ae25b0b07a8c5d679fc1163647f2053cd</Anchor>
    <Abstract>DPlex period.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>phase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1RenderContext.html</Path>
    <Anchor>ad0027a2dc49ffd8d0f0525ae5c91d016</Anchor>
    <Abstract>DPlex phase.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eye</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1RenderContext.html</Path>
    <Anchor>a71dc03d7bb1d3a24c3698c80d8c2dcc7</Anchor>
    <Abstract>current eye pass</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bufferMask</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::RenderContext</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1RenderContext.html</Path>
    <Anchor>a6170e0d3825e9df50d94d8d17d8f669b</Anchor>
    <Abstract>color mask for anaglyph stereo</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Segment</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Segment.html</Path>
    <Abstract>Base data transport class for segments.</Abstract>
    <DeclaredIn>segment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCanvas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Segment.html</Path>
    <Anchor>a48dfc96c74302aae9322ec97e81ad484</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCanvas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Segment.html</Path>
    <Anchor>aeac3d5f87db72b3cb409dbdfb56c5684</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Segment.html</Path>
    <Anchor>a9bc279dfd239e98f68196417c75ba138</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Segment.html</Path>
    <Anchor>a5ce8f76d4493cab0c6fb3eacba390fa9</Anchor>
    <Abstract>Return the output channel of this segment.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Segment.html</Path>
    <Anchor>a0bc4f8a5ce070a2dea0495c54fcaf1a0</Anchor>
    <Abstract>Return the output channel of this segment.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Segment.html</Path>
    <Anchor>a3f404a9d68c5bc396442584497e50cb0</Anchor>
    <Abstract>Set the frustum using a wall description.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Segment.html</Path>
    <Anchor>a21276071486e4e5450559afd6bfc65c6</Anchor>
    <Abstract>Set the frustum using a projection description.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsetFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Segment.html</Path>
    <Anchor>acba7f779bd5421cee591367cd8eb2e76</Anchor>
    <Abstract>Set the last specified frustum to TYPE_NONE.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEyes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Segment.html</Path>
    <Anchor>ac670f33a166f333a5fc1ccff034b0b64</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Segment.html</Path>
    <Anchor>a8bf368cac82f6255f973557e2e248112</Anchor>
    <Abstract>Traverse this segment using a segment visitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Segment.html</Path>
    <Anchor>ae933fbed4740e91fcff523e4a5e830e2</Anchor>
    <Abstract>Const-version of accept().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Segment.html</Path>
    <Anchor>adbc7b44ebef942f14cb4caee7be457d5</Anchor>
    <Abstract>Commit a new version of this object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Visitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Segment.html</Path>
    <Anchor>a938ad63b58e8f5186de455f9a8be3ab0</Anchor>
    <Abstract>The segment visitor type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Segment.html</Path>
    <Anchor>a4fbf39d6d41bbfe404a336f96e846344</Anchor>
    <Abstract>Worker for pack() and getInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Segment.html</Path>
    <Anchor>ac3a959e1a271dd07bf4c5e2a1007d719</Anchor>
    <Abstract>Worker for unpack() and applyInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Segment</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Segment.html</Path>
    <Anchor>a7d51f632ecf69fc371143694351f8987</Anchor>
    <Abstract>Add dirty flags to mark data for distribution.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Server</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Server.html</Path>
    <Abstract>Base co::Node class for a server.</Abstract>
    <DeclaredIn>server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Server.html</Path>
    <Anchor>a3d6b1ee8ee9db219db83db1ea970c468</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Server.html</Path>
    <Anchor>af86db39aaf78e5d3a3410399159442d9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfigs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Server.html</Path>
    <Anchor>a0587ee43f9ec7142e845bea7d6da588e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Server.html</Path>
    <Anchor>aecf8d6f7541cc1ac29cc8da6b57d3214</Anchor>
    <Abstract>Traverse this server and all children using a server visitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Server.html</Path>
    <Anchor>a9a57267a138828c3c5b5f508ab6d2f72</Anchor>
    <Abstract>Const-version of accept().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClientPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Server.html</Path>
    <Anchor>ab0fe0cca18f9b098179bae1a86b55c11</Anchor>
    <Abstract>A reference-counted pointer to the client.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConstClientPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Server.html</Path>
    <Anchor>a1ea97ddcf05243b97083ec4f3fd8dd34</Anchor>
    <Abstract>A reference-counted const pointer to the client.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Server.html</Path>
    <Anchor>a9bd69f16487d4f5d906340606d33579f</Anchor>
    <Abstract>A vector of config pointers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodeFactory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Server</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Server.html</Path>
    <Anchor>a59102e213535e866e19e8e5266e2d789</Anchor>
    <Abstract>The node factory.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::SubPixel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::SubPixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1SubPixel.html</Path>
    <Abstract>Holds a subpixel decomposition specification along with some methods for manipulation.</Abstract>
    <DeclaredIn>subPixel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::SubPixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1SubPixel.html</Path>
    <Anchor>a13175f78acf9f6b7309c57810f706557</Anchor>
    <Abstract>Apply (accumulate) another subpixel specification.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::SubPixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1SubPixel.html</Path>
    <Anchor>a759e35f989f7b4af9913d6a339fd1887</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::SubPixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1SubPixel.html</Path>
    <Anchor>afd7b870a9f824f9ffac982e4797c1deb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invalidate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::SubPixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1SubPixel.html</Path>
    <Anchor>a2a93224587030d78217b8b5bace3d9ad</Anchor>
    <Abstract>Make the subpixel specification invalid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>validate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::SubPixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1SubPixel.html</Path>
    <Anchor>a7537af6ee9966cdae5f2fed166f827c4</Anchor>
    <Abstract>Make the subpixel specification valid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::SubPixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1SubPixel.html</Path>
    <Anchor>ad234f4b630c118a662c122e7104b7376</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SubPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::SubPixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1SubPixel.html</Path>
    <Anchor>aed2398c4189c1010b8d4589a8b72340b</Anchor>
    <Abstract>Construct an empty subpixel specification.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SubPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::SubPixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1SubPixel.html</Path>
    <Anchor>a95cdb3518c379b2cef1690902abf6b57</Anchor>
    <Abstract>Construct a subpixel specification with default values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>index</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::SubPixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1SubPixel.html</Path>
    <Anchor>a12b9120728651fd0e5afe95f78c6ed3f</Anchor>
    <Abstract>The contributor id.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::SubPixel</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1SubPixel.html</Path>
    <Anchor>adf5407d52a9f0d4c4a2407de97486a60</Anchor>
    <Abstract>Total number of contributors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::SwapBarrier</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::SwapBarrier</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1SwapBarrier.html</Path>
    <Abstract>A swapbarrier is set on a Compound to synchronize the swap buffer between windows.</Abstract>
    <DeclaredIn>swapBarrier.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SwapBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::SwapBarrier</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1SwapBarrier.html</Path>
    <Anchor>a5a0bb13f6d2da9a04157801d753e5233</Anchor>
    <Abstract>Constructs a new SwapBarrier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::View</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Abstract>Base data transport class for views.</Abstract>
    <DeclaredIn>view.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a3fe4fad549e3feea155256c53f865782</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a436ae424b13d2a2a92e93f97905c7a0e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>af21573263dcf627ed7aea569163dcfc5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a340f9fb5bf6739048ae2f7551719204e</Anchor>
    <Abstract>Set the entity tracking this view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>ad5d365d828a95a533574790b0c96f256</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getObserver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a84f6a1a2db79bb5e5a8df8799ba51037</Anchor>
    <Abstract>const version of getObserver().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a4be4b91dd9e9e9543997a6ccfc67895c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a4c0491f322f700ea499c6a74052cbd85</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsetFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a125b4221737e4852b8cf5fbd1e193a68</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOverdraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a74c7e3977f2a6b5cac1d3c8ab724c3bf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOverdraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a438db0f5f2cd87f6a04f7d79b6361cd1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useEqualizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a4feaaa528c9118e31cfb97dc478eb4bb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEqualizers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a79c6a601e2df8c37fcc8df9bc079e962</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTileSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a88c492919e955dc13e2d19b712843dac</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a4ed81422fdc8926e16218ae6ef8759cc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a1f47469d27d3e47cf05b6a727dae75d9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changeMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a5538a14b335d3f272d2ebb6f11b5a135</Anchor>
    <Abstract>Set the mode of this view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>aa1e3f2d08ac77f877028b84b90dc93d1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setModelUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a0c29370bbe767fb1a5824d3220093bde</Anchor>
    <Abstract>Set the model unit of this view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getModelUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>acfb9c52a2850a49b7838891c9e0e2c65</Anchor>
    <Abstract>Get the model unit of this view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a96ebb4c8221ba402591de658b0d07434</Anchor>
    <Abstract>Traverse this view using a view visitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a85d7c327102e41ee7f87590d88c77017</Anchor>
    <Abstract>Const-version of accept().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMinimumCapabilities</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a04b1fee2e4364ec5d94c7da847d847de</Anchor>
    <Abstract>Set the minimum required capabilities for this view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinimumCapabilities</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a2235b8a8a84e7a38ea12be04da3cac3b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaximumCapabilities</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a97bd6f198a5ffae87b344dd3c38df6f6</Anchor>
    <Abstract>Set the maximum desired capabilities for this view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaximumCapabilities</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a561e47befd2a5a9a54e165ee6bfdd05a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCapabilities</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a75e97c8a1500f7504ffb58c354f179ce</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMasterUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a47f610e5566c663c581fd1e6988995df</Anchor>
    <Abstract>The application view instance holds the user data master by default.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUserDataLatency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a6b8bfadb73fceb818ca32f33f46b2dd0</Anchor>
    <Abstract>The view user data instance uses the config latency by default.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>acd56325bcb8f41ed2dad8255f5c366fb</Anchor>
    <Abstract>Worker for pack() and getInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a5853b5ea369e8fb11d305e94710b217e</Anchor>
    <Abstract>Worker for unpack() and applyInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a1a2e9c5f76c0867217f1fc5094b1ee2a</Anchor>
    <Abstract>Add dirty flags to mark data for distribution.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MODE_MONO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a0098a81f9680fa4694848e0d811d6f76a6a239583f61db085be382b8255e98540</Anchor>
    <Abstract>Render in mono (cyclop eye)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MODE_STEREO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::View</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1View.html</Path>
    <Anchor>a0098a81f9680fa4694848e0d811d6f76a61f7cc23613e76b5d68c25acad4826d8</Anchor>
    <Abstract>Render in stereo (left &amp;amp; right eye)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Viewport</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Abstract>A fractional viewport with methods for manipulation.</Abstract>
    <DeclaredIn>viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invalidate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Anchor>a6071f94dfc75843e854634498ff2676b</Anchor>
    <Abstract>Make the viewport invalid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Anchor>aaf0bfd9c4986e170a84e712da66be0ab</Anchor>
    <Abstract>Apply (accumulate) another viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Anchor>a1ed9da76066f076bf09ccb907d851594</Anchor>
    <Abstract>Transform this viewport into the rhs viewport space.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Anchor>acb8cda0de904b23d48d0973b4fd60f8f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Anchor>a27505e3b2d4d1b9180594a8256070e78</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Anchor>aafa0ca3cc72ed2458e14bf172ce08c34</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Anchor>a4fc00aa9bfc9432ee89cffa1e3966367</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Anchor>adf0678a4c6f9175e0be49fb802a679a9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getXEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Anchor>a7128957b1ace0314dc319a5034691e13</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getYEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Anchor>aa9a339274671c86964dd4869b7552726</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intersect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Anchor>a44d32f1ccffca17977b0a2ef73b4df40</Anchor>
    <Abstract>Create the intersection of the two viewports.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Anchor>a929f958c9b22d3ff84fcf1ea62a0c4e0</Anchor>
    <Abstract>Create the union of the two viewports.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCoverage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Anchor>a15aa650686601e526acc028b0d2fad6d</Anchor>
    <Abstract>Compute the coverage of another viewport on this viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Anchor>a6f218f2460603ca4bcd280df2e0aeb23</Anchor>
    <Abstract>Apply the view coverage to this viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Viewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Anchor>a288b52fdd1228f351756045501a3185b</Anchor>
    <Abstract>Construct a full fractional viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Viewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Anchor>a04ce630ec6f3bd09a23fc572910cda88</Anchor>
    <Abstract>Construct a fractional viewport with default values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Viewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Anchor>ac1dc4689e3ab5db494a5fb795ce19d0b</Anchor>
    <Abstract>Construct a fractional viewport from a Vector4f.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Anchor>ade1822ae793b0914ddc460aa3bb64171</Anchor>
    <Abstract>The X coordinate.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Anchor>a860e97f910f61ab3269ee4635d6f8ac7</Anchor>
    <Abstract>The Y coordinate.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>w</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Anchor>aaee39bae9a4ff5664112c0a1fb5d9803</Anchor>
    <Abstract>The width.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>h</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Anchor>a0411e9d1de5b50049a28d0b15fabc632</Anchor>
    <Abstract>The height.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FULL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Viewport</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Viewport.html</Path>
    <Anchor>a2151927e8d9312eaf7ca7e8bc94f64fd</Anchor>
    <Abstract>A full viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Wall</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Abstract>A wall defining a view frustum.</Abstract>
    <DeclaredIn>wall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Wall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>a624467827e17b78e1aded38647086a27</Anchor>
    <Abstract>Construct a new wall description.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Wall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>aa86e2d25c798552b16eb74308c0bb05b</Anchor>
    <Abstract>Construct a new wall description with default values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resizeHorizontal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>aeb08b4fd3830bf3dd84b38927866a6d3</Anchor>
    <Abstract>Resize the wall horizontally.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resizeVertical</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>a98a54a8acf272e7bc22a6b5b3da83977</Anchor>
    <Abstract>Resize the wall vertically.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resizeLeft</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>ac100fe30c4038631e5a5ca6ce93b6c22</Anchor>
    <Abstract>Resize the wall on the left side.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resizeRight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>ab3a0f6953195b41073fa67993256b943</Anchor>
    <Abstract>Resize the wall on the right side.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resizeTop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>af3c2157c62db594f5e205055c372bf59</Anchor>
    <Abstract>Resize the wall on the top side.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resizeBottom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>a0ef3f7b3a00a0e190ef2700921f61412</Anchor>
    <Abstract>Resize the wall on the bottom side.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resizeHorizontalToAR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>a56b0bb90489d394205f85c584f978d24</Anchor>
    <Abstract>Resize the wall horizontally to match the given aspect ratio.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveFocus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>a70db8fe3b1432674e155ec7d933324b7</Anchor>
    <Abstract>Resize the wall by the given ratio as observed from the eye position.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>a19331c28498e1dc0981ff33325bd0ba7</Anchor>
    <Abstract>Compute the sub-frustum for a 2D area on the full wall.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>a7327f30593c175c3299f66c0f6e189c0</Anchor>
    <Abstract>Move each wall corner by the given ratio.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>aedceff0aa91e3816d05061ecb5bcc3b2</Anchor>
    <Abstract>Set the wall parameters from a projection description.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>adb6f7c8a6fd449b3f1d62d3ae9a73fd8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>a00544a812342c6aea65d215cafb9165b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>a3e0c37484771f5cdb64c4ec90a47a33c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>af54a6d9ab8705f8e94b44cc8ead6cabe</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getU</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>ace7053cb0b85d38a5291c4c6b7f979dc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>abbdd09941d9d3da491f40de69197ca1b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>a56c08b66704c55b9c08a49ecf935d296</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bottomLeft</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>a9d5f445a20f73dfb434c482fdeab7716</Anchor>
    <Abstract>The bottom-left corner.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bottomRight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>a3c217dec20427a496b86353a713d79c5</Anchor>
    <Abstract>The bottom-right corner.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>topLeft</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>a192d0ed770ddf71640316ebdbe6895ec</Anchor>
    <Abstract>The top-left corner.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>a72d07b4173f858d0e2776bcd1fd9e33b</Anchor>
    <Abstract>The wall type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TYPE_FIXED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>a15a9726124abfb49d72b6f6cfdd2e0aaaeb0dd301b30a6c3f7b1518fe7a00adf6</Anchor>
    <Abstract>A fixed mounted projection wall.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TYPE_HMD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Wall</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Wall.html</Path>
    <Anchor>a15a9726124abfb49d72b6f6cfdd2e0aaab7effabb81e6c720037fac3c4a117eb2</Anchor>
    <Abstract>A wall fixed to the observer (head-mounted display)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Window</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Abstract>Base data transport class for windows.</Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>ada5460d5b9a7517c64fdd61e4081ca00</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>ae0af8bb474a3cf0c909637d94ccf74be</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChannels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a95069aa84b47f78a4d441e6c489d8eea</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDrawableConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a96a41b3052465cf648dfe40b82c12611</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>ad6bc2f8391bd327819df17d108b28a62</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>af739ac940912d4b5d026b7085bb91d0b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>ad1f3c258446ee1b873057e41784f4a55</Anchor>
    <Abstract>Set the window&amp;#39;s pixel viewport wrt its parent pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a74b76f9f0ecba6b38409f7e59586183e</Anchor>
    <Abstract>Set the window&amp;#39;s viewport wrt its parent pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>af7eaf16ab37d74f161c1e51f1ddb7b14</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>aeab4da3a90e16f6d17522fd1c98c839d</Anchor>
    <Abstract>Traverse this window and all children using a window visitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>aa30282c471fa4d2c6bbd9d3e8658ceac</Anchor>
    <Abstract>Const-version of accept().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a4bdc0d1915c7e5a69e0842fef9fdb66a</Anchor>
    <Abstract>Commit a new version of this object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Channels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>acdbffedc639424284502a9e119bdc373</Anchor>
    <Abstract>A vector of pointers to channels.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Visitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a8a98318dfd70dcac32e734bc1747e52c</Anchor>
    <Abstract>The Window visitor type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>ac6fb0803d41c5d20bda78790131fd808</Anchor>
    <Abstract>Worker for pack() and getInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>ade45dd249373aef59010806c317fccd7</Anchor>
    <Abstract>Worker for unpack() and applyInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyDetach</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a3f4fe414e4579abece41ccf812774c69</Anchor>
    <Abstract>Notify that this object will be deregistered or unmapped.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a26017cbb60fa2cbe996a1deb87a25451</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChangeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>ad0622d2afaa8d621188ffa8fe510448d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a6caeb48ff9dcb21aa2cc11890ee5ca66</Anchor>
    <Abstract>Set a window attribute.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a9b6981a9c3f130b83849bb6d79ba8bf6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_STEREO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a01b2c7ae231986574a227d7e9a0ee175a83f69eac9caab7ace36a0af72f920a79</Anchor>
    <Abstract>Active stereo.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_DOUBLEBUFFER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a01b2c7ae231986574a227d7e9a0ee175a8561ad3104e13b5e5ca1c9b47a4a6215</Anchor>
    <Abstract>Front and back buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_FULLSCREEN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a01b2c7ae231986574a227d7e9a0ee175a2b565a70639a3cf20f26751454733e2f</Anchor>
    <Abstract>Fullscreen drawable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_DECORATION</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a01b2c7ae231986574a227d7e9a0ee175a28ec89ee5d2e9ceef02a149156140960</Anchor>
    <Abstract>Window decorations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_SWAPSYNC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a01b2c7ae231986574a227d7e9a0ee175aa5fb31489b73d824ede18a905cb2e862</Anchor>
    <Abstract>Swap sync on vertical retrace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_DRAWABLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a01b2c7ae231986574a227d7e9a0ee175a9c8f97adac0da380a93b9c598391490a</Anchor>
    <Abstract>Window, pbuffer, FBO or OFF.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_STATISTICS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a01b2c7ae231986574a227d7e9a0ee175a97fc087603689e4eb2389a88371ea379</Anchor>
    <Abstract>Statistics gathering hint.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_HINT_SCREENSAVER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a01b2c7ae231986574a227d7e9a0ee175aa89498edf24d9732834926c8a4dd57f3</Anchor>
    <Abstract>Screensaver (de)activation (WGL)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_PLANES_COLOR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a01b2c7ae231986574a227d7e9a0ee175a2248d1e456958a111217595e04a24f1d</Anchor>
    <Abstract>No of per-component color planes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_PLANES_ALPHA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a01b2c7ae231986574a227d7e9a0ee175a6885814885de40740cb52cfac514ce7b</Anchor>
    <Abstract>No of alpha planes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_PLANES_DEPTH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a01b2c7ae231986574a227d7e9a0ee175abbbdb3a89e43688444a23125993dd2ee</Anchor>
    <Abstract>No of z-buffer planes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_PLANES_STENCIL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a01b2c7ae231986574a227d7e9a0ee175a456a3d3b937b6fae3695bddf33c177dd</Anchor>
    <Abstract>No of stencil planes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_PLANES_ACCUM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a01b2c7ae231986574a227d7e9a0ee175a158ff19517ab6056bedaff116826176b</Anchor>
    <Abstract>No of accumulation buffer planes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_PLANES_ACCUM_ALPHA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a01b2c7ae231986574a227d7e9a0ee175ac283e3239403aa3cb853c270d1c23493</Anchor>
    <Abstract>No of alpha accum buffer planes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IATTR_PLANES_SAMPLES</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::fabric::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Window.html</Path>
    <Anchor>a01b2c7ae231986574a227d7e9a0ee175a8b5b625761718fb628351e3c794e9577</Anchor>
    <Abstract>No of multisample (AA) planes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::fabric::Zoom</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::fabric::Zoom</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Zoom.html</Path>
    <Abstract>A zoom specification with methods for manipulation.</Abstract>
    <DeclaredIn>zoom.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Zoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Zoom</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Zoom.html</Path>
    <Anchor>af9b18484c82590c416287488ed965f98</Anchor>
    <Abstract>Construct a new zoom specification set to 1, 1.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Zoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Zoom</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Zoom.html</Path>
    <Anchor>a549d6aab26dfdc829d7e4f084b840555</Anchor>
    <Abstract>Construct a new zoom specification with default values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Zoom</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Zoom.html</Path>
    <Anchor>abb42dac4ed8fb0947b5f58c1583a1163</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>validate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Zoom</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Zoom.html</Path>
    <Anchor>a6d40100e85d42015f630bd4860502441</Anchor>
    <Abstract>Enforce the zoom to be valid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invalidate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Zoom</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Zoom.html</Path>
    <Anchor>aa74dd69d26c327f6c789aad594d81082</Anchor>
    <Abstract>Make the zoom factor invalid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::fabric::Zoom</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Zoom.html</Path>
    <Anchor>a4e57100e5c4fd32c2b85c5bf4afd7be1</Anchor>
    <Abstract>Apply an additional zoom factor to this zoom.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NONE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::fabric::Zoom</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1fabric_1_1Zoom.html</Path>
    <Anchor>a8aa272dc22d864763cd1e1f6019343b3</Anchor>
    <Abstract>The zoom NONE (1,1) value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::glx</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>eq::glx</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1glx.html</Path>
    <Abstract>The system abstraction layer for X11 and glX.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::glx::EventHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::glx::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1EventHandler.html</Path>
    <Abstract>The event handler for glX/X11 windows.</Abstract>
    <DeclaredIn>eventHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1EventHandler.html</Path>
    <Anchor>ab9c68c3c075230e633f520c9fe3f99b1</Anchor>
    <Abstract>Construct a new glX event handler.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~EventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1EventHandler.html</Path>
    <Anchor>afe912a95fb7fd248e4e747d635e20a78</Anchor>
    <Abstract>Destruct the glX event handler.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::glx::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1EventHandler.html</Path>
    <Anchor>af5d286734f10e1db91b055e758ba058a</Anchor>
    <Abstract>Dispatch all pending events on the current thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::glx::MessagePump</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::glx::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1MessagePump.html</Path>
    <Abstract>A message pump receiving and dispatching X11 events.</Abstract>
    <DeclaredIn>messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1MessagePump.html</Path>
    <Anchor>a42b0b1470c6a81642fd0e601f030c1e5</Anchor>
    <Abstract>Construct a new X11 message pump.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1MessagePump.html</Path>
    <Anchor>a77ec0c04a1341faf8f4ed87ecb483e39</Anchor>
    <Abstract>Destruct this message pump.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postWakeup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1MessagePump.html</Path>
    <Anchor>ad75c3e26486ddd7aab8e34dd464f014f</Anchor>
    <Abstract>Unblock dispatchOne().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatchAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1MessagePump.html</Path>
    <Anchor>aa9f3f4ea6766ea890279b22f2f8fbb59</Anchor>
    <Abstract>Dispatch all pending system events, does not block.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatchOne</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1MessagePump.html</Path>
    <Anchor>aef09f0448de82392a945de346d68d602</Anchor>
    <Abstract>Dispatch at least one pending system event, blocks potentially.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>register_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1MessagePump.html</Path>
    <Anchor>afd3747edc9c4b81b24d7792a59675d3e</Anchor>
    <Abstract>Register a new Display connection for event dispatch.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deregister</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1MessagePump.html</Path>
    <Anchor>ae220ec66ed5ccb2db4edf7b2cff7d673</Anchor>
    <Abstract>Deregister a Display connection from event dispatch.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::glx::Pipe</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::glx::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Pipe.html</Path>
    <Abstract>Default implementation of a glX system pipe.</Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Pipe.html</Path>
    <Anchor>a6b5d2b60578a3cd0d6f7a72d1d72ec4b</Anchor>
    <Abstract>Construct a new glX system pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Pipe.html</Path>
    <Anchor>a57c25296d2f85bf7df5a2f8564ff7e8e</Anchor>
    <Abstract>Destruct this glX pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getXDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Pipe.html</Path>
    <Anchor>a66c5d58fe3dcea961215e57d4a9c4655</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glxewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Pipe.html</Path>
    <Anchor>afd815fbf4ebe7e41de0b53729cae6cc9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Pipe.html</Path>
    <Anchor>aba8ea37a6f1c7742a1688a2895d74227</Anchor>
    <Abstract>Initialize this pipe for the GLX window system.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Pipe.html</Path>
    <Anchor>a9e9508cb6c195f58fb548fe9b157e38b</Anchor>
    <Abstract>Deinitialize this pipe for the GLX window system.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setXDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Pipe.html</Path>
    <Anchor>a594ca2574beee4b422dbcafb7657ac51</Anchor>
    <Abstract>Set the X display connection for this pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getXDisplayString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Pipe.html</Path>
    <Anchor>a68b07312b2112fae7fdb26bf0746aff8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Pipe.html</Path>
    <Anchor>aeddc0caf6b8f9c79ce821851a6aad5d8</Anchor>
    <Abstract>Initialize this pipe for OpenGL.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::glx::WindowIF</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::glx::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1WindowIF.html</Path>
    <Abstract>The interface defining the minimum functionality for a glX window.</Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGLXContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1WindowIF.html</Path>
    <Anchor>a066cd29dbeed0894e3c68abd5ae7bac6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getXDrawable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1WindowIF.html</Path>
    <Anchor>a14d9900016e9e8fa6b348a2e7a7c7fa8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getXDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1WindowIF.html</Path>
    <Anchor>ad5f30f0624337cab5aa0d376fc4dfb7c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::glx::Window</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Window.html</Path>
    <Abstract>Equalizer default implementation of a glX window.</Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Window.html</Path>
    <Anchor>a0f6ca6fc515ff5f70a1e5bc4f5a1b877</Anchor>
    <Abstract>Construct a new glX/X11 system window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Window.html</Path>
    <Anchor>a593c24ce146a751a36fe352e2a8c87f7</Anchor>
    <Abstract>Destruct this glX window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Window.html</Path>
    <Anchor>a66e22d74e0e9221215e4cb8aad90ff9b</Anchor>
    <Abstract>Initialize this window for the glX window system.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Window.html</Path>
    <Anchor>ab7b98d25ec09aaebe4fd32a3d16a515c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chooseGLXFBConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Window.html</Path>
    <Anchor>a7ff0240f589b260f1da2d53c14e7d93f</Anchor>
    <Abstract>Choose a GLX framebuffer config based on the window&amp;#39;s attributes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createGLXContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Window.html</Path>
    <Anchor>adbc6730e97f37e96bf273e58f6da891a</Anchor>
    <Abstract>Create a glX context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitGLXDrawable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Window.html</Path>
    <Anchor>a0745ae010302498a2a63edcb72c9c61b</Anchor>
    <Abstract>Initialize the window&amp;#39;s drawable (fullscreen, pbuffer or window) and bind the glX context...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitGLXWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Window.html</Path>
    <Anchor>a10840a4b25636de3603d0230b67e8c6f</Anchor>
    <Abstract>Initialize the window with a window and bind the glX context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitGLXPBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Window.html</Path>
    <Anchor>af3f71f1bca03d763fe74b95aeb2abe84</Anchor>
    <Abstract>Initialize the window with a PBuffer and bind the glX context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initEventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Window.html</Path>
    <Anchor>a1222e4aa3cb418fa7af0953f1730e80e</Anchor>
    <Abstract>Register with the pipe&amp;#39;s GLXEventHandler, called by setXDrawable().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitEventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Window.html</Path>
    <Anchor>ac6b5e1de50e1cb7e07ef3b584b55d25e</Anchor>
    <Abstract>Deregister with the GLXEventHandler, called by setXDrawable().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGLXContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Window.html</Path>
    <Anchor>ac66492fa6e88c92b099a071d1faa39eb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getXDrawable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Window.html</Path>
    <Anchor>ab5af18ac7081628c7f325d031f68c4f7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getXDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Window.html</Path>
    <Anchor>a144363cf6fb9540fb2ca75d996c2e891</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glxewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Window.html</Path>
    <Anchor>a6b9de5377fb93658283066e0147c923e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setXDrawable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Window.html</Path>
    <Anchor>a970ba10efbd5e41d78c339def58d6f29</Anchor>
    <Abstract>Set the X11 drawable ID for this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGLXContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Window.html</Path>
    <Anchor>a5497f644e7e4b205f8fe4c6d193a89a3</Anchor>
    <Abstract>Set the glX rendering context for this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Window.html</Path>
    <Anchor>a01be489b4b2adefe069bace75168bdb8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Window.html</Path>
    <Anchor>afcab8cbaf46e8da893ef4a97528d5c79</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinNVSwapBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Window.html</Path>
    <Anchor>a472dd51ef74b14afa52bc8fa873fe51b</Anchor>
    <Abstract>Implementation untested for glX.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>leaveNVSwapBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::glx::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1Window.html</Path>
    <Anchor>a6c076ef25057b5201e85bb3b0d36a1cf</Anchor>
    <Abstract>Unbind a GLX_NV_swap_barrier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::glx::WindowEvent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::glx::WindowEvent</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1WindowEvent.html</Path>
    <Abstract>A window-system event for a glx::WindowIF.</Abstract>
    <DeclaredIn>windowEvent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::glx::WindowEvent</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1glx_1_1WindowEvent.html</Path>
    <Anchor>a9ec996238e1b14ecf0c51bc93de4810d</Anchor>
    <Abstract>Native event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::util</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>eq::util</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1util.html</Path>
    <Abstract>Equalizer utility classes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Textures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>eq::util</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1util.html</Path>
    <Anchor>a6fa6e88120bfd17c34f51c3b530e7b01</Anchor>
    <Abstract>A vector of pointers to eq::util::Texture.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::util::Accum</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Accum.html</Path>
    <Abstract>A C++ class to abstract an accumulation buffer.</Abstract>
    <DeclaredIn>accum.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Accum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Accum.html</Path>
    <Anchor>acefd59e0f684281ec5813008b78451a0</Anchor>
    <Abstract>Construct a new accumulation buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Accum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Accum.html</Path>
    <Anchor>ac6510cff20544a39b70e257516bcfa22</Anchor>
    <Abstract>Destruct the accumulation buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Accum.html</Path>
    <Anchor>ada5d544351d9e1271e69139b452601c0</Anchor>
    <Abstract>Initialize the accumulation buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Accum.html</Path>
    <Anchor>aff5ae8aa4c75a5d0098579b22c0e5b69</Anchor>
    <Abstract>Exit the accum buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Accum.html</Path>
    <Anchor>a4f8101f26921ec921c6fc08f9bf34cf9</Anchor>
    <Abstract>Resize the accumulation buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Accum.html</Path>
    <Anchor>a285a95f17a6da7d71a4ea8fe4d219d11</Anchor>
    <Abstract>Clear the accumulation buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Accum.html</Path>
    <Anchor>afff61895658f5de20c4d171e461b39a5</Anchor>
    <Abstract>Accumulate a frame from the read buffer into the accumulation buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>display</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Accum.html</Path>
    <Anchor>acd6c7168723b9b1d4f7b4c176fba5b6f</Anchor>
    <Abstract>Copy the result of the accumulation to the current draw buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxSteps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Accum.html</Path>
    <Anchor>a57f7678d99c4cedd752a2ec3ce246d8b</Anchor>
    <Abstract>Get the maximum number of accumulation steps possible.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumSteps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Accum.html</Path>
    <Anchor>a52c9a6f0f374063433c16a8eb19cee32</Anchor>
    <Abstract>Get the current number of accumulation steps done.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTotalSteps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Accum.html</Path>
    <Anchor>a27c89dd642e4a398e0aeda511c2e95ec</Anchor>
    <Abstract>Set the total number of accumulation steps that will be done.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalSteps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Accum.html</Path>
    <Anchor>a57f66a219f46453f776b9598934953fd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usesFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Accum</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Accum.html</Path>
    <Anchor>a902a028819909e7605e2f558933493d1</Anchor>
    <Abstract>Test if the accumulation uses the FBO implementation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::util::AccumBufferObject</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::util::AccumBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1AccumBufferObject.html</Path>
    <Abstract>A class to emulate an OpenGL accumulation buffer using an FBO.</Abstract>
    <DeclaredIn>accumBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AccumBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::AccumBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1AccumBufferObject.html</Path>
    <Anchor>ac71df8d8fc5e1f3f3dee67442dd2cf16</Anchor>
    <Abstract>Construct a new Accumulation Buffer Object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AccumBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::AccumBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1AccumBufferObject.html</Path>
    <Anchor>afe0f65c9fd1ea43055cc0cc7849bd147</Anchor>
    <Abstract>Destruct the Accumulation Buffer Object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::AccumBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1AccumBufferObject.html</Path>
    <Anchor>a81e9b75bd266b4e6e653d37f32a08273</Anchor>
    <Abstract>Initialize the Accumulation Buffer Object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::AccumBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1AccumBufferObject.html</Path>
    <Anchor>a5ef928f9d054311233b7b4f82aeae4d7</Anchor>
    <Abstract>De-initialize the Accumulation Buffer Object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::AccumBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1AccumBufferObject.html</Path>
    <Anchor>a1311865d9b00ef938edde4a08b693031</Anchor>
    <Abstract>Load the current read buffer into the accumulation buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::AccumBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1AccumBufferObject.html</Path>
    <Anchor>a484bdd4de1b62d63116eeeb13e711d7a</Anchor>
    <Abstract>Accumulate the current read buffer into the accumulation buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>display</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::AccumBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1AccumBufferObject.html</Path>
    <Anchor>a23a7aaa677ae579b5f093226744d3b8b</Anchor>
    <Abstract>Transfer accumulation buffer values to the draw buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::util::BitmapFont</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::util::BitmapFont</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1BitmapFont.html</Path>
    <Abstract>A wrapper around AGL, WGL and GLX bitmap fonts.</Abstract>
    <DeclaredIn>bitmapFont.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BitmapFont</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::BitmapFont</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1BitmapFont.html</Path>
    <Anchor>a367e488c6744752d93b291c9641fdf41</Anchor>
    <Abstract>Construct a new bitmap font.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~BitmapFont</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::BitmapFont</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1BitmapFont.html</Path>
    <Anchor>afbc070fc6f4c2e7a3f63733eb03ed325</Anchor>
    <Abstract>Destruct this bitmap font.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::BitmapFont</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1BitmapFont.html</Path>
    <Anchor>a81f4ffcc4ec8864136be8e6ef6ff204a</Anchor>
    <Abstract>Initialize this bitmap font.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::BitmapFont</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1BitmapFont.html</Path>
    <Anchor>aa6a1372003c1410d5e64a4c51731f780</Anchor>
    <Abstract>De-initialize this bitmap font.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>draw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::BitmapFont</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1BitmapFont.html</Path>
    <Anchor>af0b8543570f51b2f1cf604ac1c4c1add</Anchor>
    <Abstract>Draw text on the current raster position.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::util::FrameBufferObject</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1FrameBufferObject.html</Path>
    <Abstract>A C++ class to abstract OpenGL frame buffer objects.</Abstract>
    <DeclaredIn>frameBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1FrameBufferObject.html</Path>
    <Anchor>af94088531944c64899406ec6f32bac27</Anchor>
    <Abstract>Construct a new Frame Buffer Object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FrameBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1FrameBufferObject.html</Path>
    <Anchor>a4f757638a6e1b54ae607546e6a5cadfe</Anchor>
    <Abstract>Destruct the Frame Buffer Object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addColorTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1FrameBufferObject.html</Path>
    <Anchor>ab7cc4006acd0c3765a2dc5e7a081e658</Anchor>
    <Abstract>Add one color texture to the FBO.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1FrameBufferObject.html</Path>
    <Anchor>a6aa094b9cc01670f3e67484093f05c8c</Anchor>
    <Abstract>Initialize the Frame Buffer Object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1FrameBufferObject.html</Path>
    <Anchor>a1bbe305222f1dc3fd6dc23899414e553</Anchor>
    <Abstract>De-initialize the Frame Buffer Object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1FrameBufferObject.html</Path>
    <Anchor>a7cf35b06fb46a603b7fcd7fdc68d4a91</Anchor>
    <Abstract>Bind to the Frame Buffer Object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1FrameBufferObject.html</Path>
    <Anchor>a33440279962dc80f8a9ac2800e4cfb76</Anchor>
    <Abstract>Unbind any Frame Buffer Object and use the default drawable for the current context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1FrameBufferObject.html</Path>
    <Anchor>a5461389a94dac97822b17e2244bdcf9e</Anchor>
    <Abstract>Resize the FBO.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1FrameBufferObject.html</Path>
    <Anchor>a62ec1d1be94a1c6c6bc9f8c18c9cb79f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1FrameBufferObject.html</Path>
    <Anchor>a97583da3daacce333d7991bacde98e61</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getColorTextures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1FrameBufferObject.html</Path>
    <Anchor>a197c19beadb758eee529e10560644e38</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDepthTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1FrameBufferObject.html</Path>
    <Anchor>ab057fc7af98a424be25b00d62f51128c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1FrameBufferObject.html</Path>
    <Anchor>a0f0d1439c54ad98d0da494c6c5ce1de1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1FrameBufferObject.html</Path>
    <Anchor>afed3294f52e951b376a902b364844606</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::FrameBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1FrameBufferObject.html</Path>
    <Anchor>a3bf50f74673b0681212144ba06f312b7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::util::ObjectManager</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>eq::util::ObjectManager</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1ObjectManager.html</Path>
    <Abstract>A facility class to manage OpenGL objects across shared contexts.</Abstract>
    <DeclaredIn>objectManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObjectManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::ObjectManager</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1ObjectManager.html</Path>
    <Anchor>a7a35b977139e4eb6221735c3d91bc661</Anchor>
    <Abstract>Construct a new object manager.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObjectManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::ObjectManager</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1ObjectManager.html</Path>
    <Anchor>a3f672229dfa8a13d5a72869c6fe25249</Anchor>
    <Abstract>Construct a new object manager sharing data with another manager.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isShared</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::ObjectManager</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1ObjectManager.html</Path>
    <Anchor>a79ef80e9e502a798bb88374138bacb69</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::util::PixelBufferObject</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1PixelBufferObject.html</Path>
    <Abstract>A C++ class to abstract OpenGL pixel buffer objects.</Abstract>
    <DeclaredIn>pixelBufferObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1PixelBufferObject.html</Path>
    <Anchor>a585d7bf0577870036684cde8fa27acb9</Anchor>
    <Abstract>Construct a new Pixel Buffer Object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PixelBufferObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1PixelBufferObject.html</Path>
    <Anchor>a4da85c5eb50df4bcaee89dec7b871cf7</Anchor>
    <Abstract>Destruct the Frame Buffer Object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1PixelBufferObject.html</Path>
    <Anchor>a70a86390394c1b004b57e6d0fe8ae27b</Anchor>
    <Abstract>Initialize the Pixel Buffer Object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1PixelBufferObject.html</Path>
    <Anchor>aa95a811d20b1d68d8fc751786d4151b8</Anchor>
    <Abstract>De-initialize the pixel buffer object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1PixelBufferObject.html</Path>
    <Anchor>a8d0270eeabdb9cfbdb91c55b4f4ec8d9</Anchor>
    <Abstract>Bind the PBO and map its data for reading.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapWrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1PixelBufferObject.html</Path>
    <Anchor>a191a408d15e03fbf2cc91e33692b696b</Anchor>
    <Abstract>Bind the PBO and mappe its data for writing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1PixelBufferObject.html</Path>
    <Anchor>a18644b3845fa75b67157b7e69f0a7afe</Anchor>
    <Abstract>Unmap and unbind the PBO.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1PixelBufferObject.html</Path>
    <Anchor>a800966b437ff117d450a81a4bfae2eee</Anchor>
    <Abstract>Bind the PBO.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1PixelBufferObject.html</Path>
    <Anchor>a764936b69a3784ebfd0346d4bcc0eedb</Anchor>
    <Abstract>Unbind the PBO.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1PixelBufferObject.html</Path>
    <Anchor>ae87cc6be07d749ddcb0610b01fb8f63f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1PixelBufferObject.html</Path>
    <Anchor>a55631aa1c735d51e0c16fdef380646d1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInitialized</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1PixelBufferObject.html</Path>
    <Anchor>a6c97bf5427f35a1cb38b5ab7ea191c6e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isThreadSafe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1PixelBufferObject.html</Path>
    <Anchor>aaef49cc18537a521f612eabd1e07854d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::PixelBufferObject</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1PixelBufferObject.html</Path>
    <Anchor>a94fdcec01f0071a5f3a3d6ad551b5462</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::util::Texture</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Abstract>A wrapper around OpenGL textures.</Abstract>
    <DeclaredIn>texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Texture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Anchor>afbfd7fa6cb013e4478bdd20aec3f19bb</Anchor>
    <Abstract>Construct a new Texture.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Texture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Anchor>a010c103bd0294f3f00326a90a4f3fc72</Anchor>
    <Abstract>Destruct the texture.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Anchor>a7ea7368d320d939f82a5ae4a3d188cd0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInternalFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Anchor>ace194f25893796fba1eb9595145afaf7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExternalFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Anchor>a980e0122a1d1705f102f3e978c704b51</Anchor>
    <Abstract>Set the external data format and type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Anchor>a69351377ad8a248d2754ac0fe20a7683</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Anchor>abb6234c995b0db65337cd8bfbab0b5e1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Anchor>a57cd24d99a985fcfffd011bc3b753025</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Anchor>a8399fe6aa76e1a60cf0340066db7c900</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Anchor>a0567340159eac8f156842e3e9fa8a688</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Anchor>a19dd37d2059a3dc70e61f043c8dbda1d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Anchor>ac027efeb59129ccda4ab35a0d30d2335</Anchor>
    <Abstract>Initialize an OpenGL texture.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Anchor>adb9b6c8ba2dbe017fd35cc7d42e0c9e5</Anchor>
    <Abstract>Clear the texture, including deleting the GL texture name.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyFromFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Anchor>af0672407c97ac0d0137a700cf2f18d30</Anchor>
    <Abstract>Copy the specified area from the current read buffer to the texture at 0,0.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upload</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Anchor>abac11cd65c27b9da0a4f40f38cdad51b</Anchor>
    <Abstract>Copy the specified buffer to the texture at 0,0.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>download</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Anchor>a4090f644a902f20ab366b6a42dda3899</Anchor>
    <Abstract>Copy the texture data from the GPU to the given memory address.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Anchor>a25b3caea16f79aaaf8eb1e644590e7f4</Anchor>
    <Abstract>Bind the texture.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindToFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Anchor>a1f817587baf5d8d4a44ea8a46efddd36</Anchor>
    <Abstract>Create and bind a texture to the current FBO.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Anchor>a725a8f5583552fea0d14cc17a32370f4</Anchor>
    <Abstract>Resize the texture.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeRGB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Anchor>af8d28b69d60632d34619a05881c2a32b</Anchor>
    <Abstract>Write the texture data as an rgb image file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flushNoDelete</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Anchor>ac3565710aedbf28da702e2cf44a21476</Anchor>
    <Abstract>Flush the texture without deleting the GL texture name.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGLData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::util::Texture</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1util_1_1Texture.html</Path>
    <Anchor>a149b074588215882978ced95b4d4a682</Anchor>
    <Abstract>Use an OpenGL texture created externally.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::wgl</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>eq::wgl</Scope>
    </TokenIdentifier>
    <Path>namespaceeq_1_1wgl.html</Path>
    <Abstract>The system abstraction layer for Windows OpenGL.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::wgl::EventHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::wgl::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1EventHandler.html</Path>
    <Abstract>The event handler for WGL.</Abstract>
    <DeclaredIn>eventHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1EventHandler.html</Path>
    <Anchor>a8cc261a1908db80e3c1efd5cea1ca41f</Anchor>
    <Abstract>Construct a new WGL event handler for the window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~EventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1EventHandler.html</Path>
    <Anchor>ae7f9b2ac982a57650ffc1eb197ca1172</Anchor>
    <Abstract>Destruct the WGL event handler.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initMagellan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::wgl::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1EventHandler.html</Path>
    <Anchor>af11bd29c175e04f8394fe0ff0a8b9223</Anchor>
    <Abstract>Initialize space mouse event handling for this process.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitMagellan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eq::wgl::EventHandler</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1EventHandler.html</Path>
    <Anchor>ad1b96397f37ac6d33c2271506efba41a</Anchor>
    <Abstract>De-initialize space mouse event handling for this process.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::wgl::MessagePump</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::wgl::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1MessagePump.html</Path>
    <Abstract>Processes OS messages on Win32 systems.</Abstract>
    <DeclaredIn>messagePump.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1MessagePump.html</Path>
    <Anchor>afdd6e3b7863137a5faea2611b2476676</Anchor>
    <Abstract>Construct a new WGL message pump.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MessagePump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1MessagePump.html</Path>
    <Anchor>aa49e566b4bbdc10e0918de70dd670ba3</Anchor>
    <Abstract>Destruct this message pump.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postWakeup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1MessagePump.html</Path>
    <Anchor>a969e4687c8da57722c380a542d3aeb8c</Anchor>
    <Abstract>Unblock dispatchOne().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatchAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1MessagePump.html</Path>
    <Anchor>a2056acc17802325d3e2720a3cb2b3036</Anchor>
    <Abstract>Dispatch all pending system events, does not block.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatchOne</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::MessagePump</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1MessagePump.html</Path>
    <Anchor>a7ad92bb3631795d2543bad568474243e</Anchor>
    <Abstract>Dispatch at least one pending system event, blocks potentially.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::wgl::Pipe</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::wgl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Pipe.html</Path>
    <Abstract>Equalizer default implementation of a WGL GPU.</Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Pipe.html</Path>
    <Anchor>a4b2f0320486d61638f59e22fd7141494</Anchor>
    <Abstract>Construct a new WGL system pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Pipe.html</Path>
    <Anchor>a7c8d2c6206eb2032e436805f8f194667</Anchor>
    <Abstract>Destruct this WGL system pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWGLAffinityDC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Pipe.html</Path>
    <Anchor>a408ca4cd57798422092eae068f411e28</Anchor>
    <Abstract>Create a device context bound only to the display device of this pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWGLDisplayDC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Pipe.html</Path>
    <Anchor>a7ac60c83f1e35af06ce46fd5716e9647</Anchor>
    <Abstract>Create a device context on the display device of this pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wglewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Pipe.html</Path>
    <Anchor>a46cc7d6721bef2cf00d77b745de97b27</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Pipe.html</Path>
    <Anchor>a3b66399e61bc7db819e5ccec3fe1236e</Anchor>
    <Abstract>Initialize this pipe for the WGL window system.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Pipe.html</Path>
    <Anchor>a51c732828d7a30e66bdf20d1b5f940ed</Anchor>
    <Abstract>Deinitialize this pipe for the WGL window system.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Pipe.html</Path>
    <Anchor>a74cbb1df55f3a371bb87c60bf0513ae5</Anchor>
    <Abstract>Initialize this pipe for OpenGL.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::wgl::WindowIF</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1WindowIF.html</Path>
    <Abstract>The interface defining the minimum functionality for a WGL window.</Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WindowIF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1WindowIF.html</Path>
    <Anchor>a088aba43a5eab54daca7043f418a1841</Anchor>
    <Abstract>Construct a new WGL window for the given eq::Window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WindowIF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1WindowIF.html</Path>
    <Anchor>a3acbac8c41ee6c64c9cbebb6dfc08f92</Anchor>
    <Abstract>Destruct the WGL window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1WindowIF.html</Path>
    <Anchor>a22ce6cd17902b23947de5751f4993bb0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLWindowHandle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1WindowIF.html</Path>
    <Anchor>a00f51129142d5e674e8b1e6558c88653</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLPBufferHandle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1WindowIF.html</Path>
    <Anchor>a4415edf5e5bf031e7eaffdbece102440</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLDC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1WindowIF.html</Path>
    <Anchor>aef3446d382fc5e822a71c4fe63039814</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLAffinityDC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1WindowIF.html</Path>
    <Anchor>ae508312e8b85e721c1313e7aff5f5f1d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::WindowIF</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1WindowIF.html</Path>
    <Anchor>abbe9161970080cf04d58bea5945718dd</Anchor>
    <Abstract>Process the given event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::wgl::Window</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Abstract>Equalizer default implementation of a WGL window.</Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a570022d486aebbe64c8c398e2fc367e1</Anchor>
    <Abstract>Create a new WGL window for the given eq::Window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a02751b4bc5f8847cd0f0235e14788056</Anchor>
    <Abstract>Destruct the WGL window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWGLContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>af25286e201c83fc70c7f4f57b9617355</Anchor>
    <Abstract>Set the WGL rendering context for this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWGLWindowHandle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>afd34e7cddf8418699e52c132691ce0cf</Anchor>
    <Abstract>Set the Win32 window handle for this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWGLPBufferHandle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a36aec3d5d2477596206b34fa434dae94</Anchor>
    <Abstract>Set the Win32 off screen pbuffer handle for this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLWindowHandle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>aad9cebede71b0fc1f58d107466732319</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLPBufferHandle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>af6cef8b8c5859f5eb9e01726d13ac3fa</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLDC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a31072adc47f152d8711f2598cd356479</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a5592a399030f9981ad965c2b10e85c86</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLEventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a542e88af882e04e38366696f0b8d805f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a21fee0538946324a218f6e7dd373e172</Anchor>
    <Abstract>Initialize this window for the WGL window system.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a2e99d7a3989d27d2bebe6d962f44b116</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWGLAffinityDC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>ae0df377d9b72966c5dec58cab329565e</Anchor>
    <Abstract>Create, if needed, an affinity device context for this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitWGLAffinityDC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a31ea58ff05040dc063d7e26e8ff2e61b</Anchor>
    <Abstract>Destroy the affinity device context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLAffinityDC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a82786a8628ef2622e2a94b3f6a77c2ed</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWGLDisplayDC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>aae56777cb3d13e3a7e5ee6655a63fed4</Anchor>
    <Abstract>Create a device context for the display device of the window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chooseWGLPixelFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a2cbe399b8e41d87c8e6d522608743236</Anchor>
    <Abstract>Choose a pixel format based on the window&amp;#39;s attributes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitWGLDrawable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a38c4c93f7bfa0c40226645a11b9a5fed</Anchor>
    <Abstract>Initialize the window&amp;#39;s drawable (pbuffer or window) and bind the WGL context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitWGLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a6fed5a4cd4c8d1f9f1077d8839f7bb75</Anchor>
    <Abstract>Initialize the window with an on-screen Win32 window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitWGLPBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a9db6aac36bd23d7dd25ed3fcfcfdee8b</Anchor>
    <Abstract>Initialize the window with an off-screen WGL PBuffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitWGLFBO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a44a16909d2f1797c6191024c894ee838</Anchor>
    <Abstract>Initialize the window for an off-screen FBO.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWGLContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>aeaf17a4c2e2d31490aeab402c814e11c</Anchor>
    <Abstract>Create a WGL context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyWGLContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>abb2531f05a18a413e4c8876265180e57</Anchor>
    <Abstract>Destroy the given WGL context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initEventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a3982eb8626b1bfb581981e5791a4a94d</Anchor>
    <Abstract>Set up an WGLEventHandler, called by setWGLWindowHandle().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitEventHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a0ec193bd65b188697f54d4fbc8cf6958</Anchor>
    <Abstract>Destroy the WGLEventHandler, called by setWGLWindowHandle().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a141b77db83f8f4c27f5c66178855f518</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>af51cb04a19a5164203f5d5d086d3d6f6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joinNVSwapBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>afaa73540906d2a3922d5edc7636192dd</Anchor>
    <Abstract>Join the WGL_NV_swap_group.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>leaveNVSwapBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a6b09fcb86d0fa5763b9ecb423cf73c00</Anchor>
    <Abstract>Unbind a WGL_NV_swap_barrier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a08fc6cbac06f73d2a47152e0b6d550fa</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWGLDC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a8271ca739c7263eb1b3d41d8abd78644</Anchor>
    <Abstract>Set new device context and release the old DC.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wglewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a2e519c4bf0cfd386c5e4d4185a588184</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWGLPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a6e367b719b207d8c098e28de856f08a9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WGL_DC_NONE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a2b2963d9a16d10f18eb317110214b926a201a9a03a8693095b502bf74d5c3cf37</Anchor>
    <Abstract>No device context is set.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WGL_DC_WINDOW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a2b2963d9a16d10f18eb317110214b926ab48a8db42f20d875218ef8df3e55e15c</Anchor>
    <Abstract>The WGL DC belongs to a window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WGL_DC_PBUFFER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a2b2963d9a16d10f18eb317110214b926a6cceb98edd7048d79fe14c423838f744</Anchor>
    <Abstract>The WGL DC belongs to a PBuffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WGL_DC_AFFINITY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a2b2963d9a16d10f18eb317110214b926aa770074dbaba38eb44bd7aeb86828b43</Anchor>
    <Abstract>The WGL DC is an affinity DC.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WGL_DC_DISPLAY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eq::wgl::Window</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1Window.html</Path>
    <Anchor>a2b2963d9a16d10f18eb317110214b926a0e1406534c51ba743f42d683ba3bc473</Anchor>
    <Abstract>The WGL DC is a display DC.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eq::wgl::WindowEvent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eq::wgl::WindowEvent</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1WindowEvent.html</Path>
    <Abstract>A window-system event for a WindowIF.</Abstract>
    <DeclaredIn>windowEvent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::wgl::WindowEvent</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1WindowEvent.html</Path>
    <Anchor>a2924737d4ba44c3d248310f23511038a</Anchor>
    <Abstract>The windows message.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wParam</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::wgl::WindowEvent</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1WindowEvent.html</Path>
    <Anchor>a8620c0ecabe443f8294a65f249a07cd2</Anchor>
    <Abstract>Extra message data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lParam</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eq::wgl::WindowEvent</Scope>
    </TokenIdentifier>
    <Path>classeq_1_1wgl_1_1WindowEvent.html</Path>
    <Anchor>a0bb2bc6839f5ccdd29668caba79db2c6</Anchor>
    <Abstract>Extra message data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqAsync::TextureId</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqAsync::TextureId</Scope>
    </TokenIdentifier>
    <Path>structeqAsync_1_1TextureId.html</Path>
    <Abstract>Structure to associate OpenGL texture ids with an external key.</Abstract>
    <DeclaredIn>asyncFetcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqAsync::AsyncFetcher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqAsync::AsyncFetcher</Scope>
    </TokenIdentifier>
    <Path>classeqAsync_1_1AsyncFetcher.html</Path>
    <Abstract>Asynchronous fetching thread.</Abstract>
    <DeclaredIn>asyncFetcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqAsync::AsyncFetcher</Scope>
    </TokenIdentifier>
    <Path>classeqAsync_1_1AsyncFetcher.html</Path>
    <Anchor>a8cd374602d99ae5b92b986c8afbe7a2d</Anchor>
    <Abstract>Function for creating and holding of shared context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqAsync::Channel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqAsync::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqAsync_1_1Channel.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqAsync::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqAsync_1_1Channel.html</Path>
    <Anchor>a2d39e7a347944a74b1c75127884e0ca5</Anchor>
    <Abstract>Construct a new channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameDraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqAsync::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqAsync_1_1Channel.html</Path>
    <Anchor>ae409c258b26dba907be2464dfa7790e9</Anchor>
    <Abstract>Draw the scene.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqAsync::Window</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqAsync::Window</Scope>
    </TokenIdentifier>
    <Path>classeqAsync_1_1Window.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqAsync::Window</Scope>
    </TokenIdentifier>
    <Path>classeqAsync_1_1Window.html</Path>
    <Anchor>acc4e921a79764c807170b9e7fa104b45</Anchor>
    <Abstract>Construct a new window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqAsync::Window</Scope>
    </TokenIdentifier>
    <Path>classeqAsync_1_1Window.html</Path>
    <Anchor>a54aeaf5642b3ca946691518623c4b4fd</Anchor>
    <Abstract>Initialize the OpenGL state for this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqAsync::Pipe</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqAsync::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeqAsync_1_1Pipe.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqAsync::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeqAsync_1_1Pipe.html</Path>
    <Anchor>aa4cde55ada17e6f7b1ae31ef0378e5be</Anchor>
    <Abstract>Construct a new pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqAsync::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeqAsync_1_1Pipe.html</Path>
    <Anchor>a0e0b0c89aaf176236ad2d587046840ce</Anchor>
    <Abstract>Start rendering a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqAsync::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeqAsync_1_1Pipe.html</Path>
    <Anchor>afe224e70d48a30e292906957d3974ae6</Anchor>
    <Abstract>De-initialize this pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqHello::Renderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqHello::Renderer</Scope>
    </TokenIdentifier>
    <Path>classeqHello_1_1Renderer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Renderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqHello::Renderer</Scope>
    </TokenIdentifier>
    <Path>classeqHello_1_1Renderer.html</Path>
    <Anchor>ad7aae6159744684ee22d56e7727b7f7c</Anchor>
    <Abstract>Construct a new renderer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Renderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqHello::Renderer</Scope>
    </TokenIdentifier>
    <Path>classeqHello_1_1Renderer.html</Path>
    <Anchor>af73792655b575963c765bab335037fd7</Anchor>
    <Abstract>Destruct this renderer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>draw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqHello::Renderer</Scope>
    </TokenIdentifier>
    <Path>classeqHello_1_1Renderer.html</Path>
    <Anchor>ae5d239f808aa9d77a4aa9b417c13c4d5</Anchor>
    <Abstract>The rendering routine, a.k.a., glutDisplayFunc()</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqHello::Application</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqHello::Application</Scope>
    </TokenIdentifier>
    <Path>classeqHello_1_1Application.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Application</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqHello::Application</Scope>
    </TokenIdentifier>
    <Path>classeqHello_1_1Application.html</Path>
    <Anchor>a733cec29d5ea44981142216750a31afd</Anchor>
    <Abstract>Destruct this application instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqHello::Application</Scope>
    </TokenIdentifier>
    <Path>classeqHello_1_1Application.html</Path>
    <Anchor>a0c06ebe114979ee352d394aacd361e85</Anchor>
    <Abstract>Create a new renderer instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqHello::Application</Scope>
    </TokenIdentifier>
    <Path>classeqHello_1_1Application.html</Path>
    <Anchor>aa200a0254fce93c8ff5d72ed07a09849</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqNbody::Channel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqNbody::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Channel.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Channel.html</Path>
    <Anchor>a96dac0055b64132954425234b4000811</Anchor>
    <Abstract>Construct a new channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Channel.html</Path>
    <Anchor>a0c4411f7f51f92e66484c20d92016d54</Anchor>
    <Abstract>Destruct the channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Channel.html</Path>
    <Anchor>a3decf9686a6523376ce313fba709d962</Anchor>
    <Abstract>Initialize this channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameDraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Channel.html</Path>
    <Anchor>a93a98b228d8dfb41a9b4bac201eb7670</Anchor>
    <Abstract>Draw the scene.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqNbody::Client</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqNbody::Client</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Client.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Client</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::Client</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Client.html</Path>
    <Anchor>a59003ef07e9b24f1bf46edcf7b4f9b6d</Anchor>
    <Abstract>Destruct the client.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqNbody::Config</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqNbody::Config</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Config.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Config</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::Config</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Config.html</Path>
    <Anchor>a5d6bcb7b31abc88e8053af30ba16a3dd</Anchor>
    <Abstract>Construct a new config.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::Config</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Config.html</Path>
    <Anchor>ab0f6061674d2812fb05d1b23b3ad67f5</Anchor>
    <Abstract>Exit this configuration.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::Config</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Config.html</Path>
    <Anchor>af249d23088cb17ac1664c09029af47bf</Anchor>
    <Abstract>Handle one config event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Config</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::Config</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Config.html</Path>
    <Anchor>a784e29626fad02fcc437ad8cc23059e8</Anchor>
    <Abstract>Destruct a config.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqNbody::ConfigEvent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqNbody::ConfigEvent</Scope>
    </TokenIdentifier>
    <Path>structeqNbody_1_1ConfigEvent.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eqNbody::ConfigEvent</Scope>
    </TokenIdentifier>
    <Path>structeqNbody_1_1ConfigEvent.html</Path>
    <Anchor>ad6605e5623d7f1f7a714c0f46097646e</Anchor>
    <Abstract>Construct a new config event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqNbody::Controller</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqNbody::Controller</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Controller.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqNbody::FrameData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqNbody::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1FrameData.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1FrameData.html</Path>
    <Anchor>a7a41d03c581316bdfdd5418c63638a49</Anchor>
    <Abstract>Worker for pack() and getInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1FrameData.html</Path>
    <Anchor>a9e22b607909c780cd52e18d7fb30e244</Anchor>
    <Abstract>Worker for unpack() and applyInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqNbody::InitData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqNbody::InitData</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1InitData.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::InitData</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1InitData.html</Path>
    <Anchor>ae3ae5c81bbb5de22bb0336827500fc59</Anchor>
    <Abstract>Serialize all instance information of this distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::InitData</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1InitData.html</Path>
    <Anchor>a2658aea2f874d367f16c0b860f8b8b22</Anchor>
    <Abstract>Deserialize the instance data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqNbody::Node</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqNbody::Node</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Node.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::Node</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Node.html</Path>
    <Anchor>acc25843a6fec10273a8b201539e4502b</Anchor>
    <Abstract>Construct a new node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::Node</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Node.html</Path>
    <Anchor>ac14ad65624bc64357f6b399d666c0f5f</Anchor>
    <Abstract>Destruct the node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::Node</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Node.html</Path>
    <Anchor>a4a70504c9fa2ce5b4e16f137eaa184e4</Anchor>
    <Abstract>Initialize this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::Node</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Node.html</Path>
    <Anchor>a5569a5ead7e0726d92d7012c0177b8c6</Anchor>
    <Abstract>Exit this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqNbody::Pipe</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqNbody::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Pipe.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Pipe.html</Path>
    <Anchor>addfea700390f4154576616f25e15539a</Anchor>
    <Abstract>Construct a new pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Pipe.html</Path>
    <Anchor>a0108215be46f0863b87ecfa14d10c989</Anchor>
    <Abstract>Destruct the pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Pipe.html</Path>
    <Anchor>a0f0a492e3f6155e9541515ac96631496</Anchor>
    <Abstract>Initialize this pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Pipe.html</Path>
    <Anchor>a577265d498ea81c9140c9dec7fa8d32b</Anchor>
    <Abstract>De-initialize this pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Pipe.html</Path>
    <Anchor>a8740680cc6e36020acd3dfae8441588f</Anchor>
    <Abstract>Start rendering a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqNbody::ParticleRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqNbody::ParticleRenderer</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1ParticleRenderer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqNbody::SharedData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqNbody::SharedData</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1SharedData.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqNbody::SharedDataProxy</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqNbody::SharedDataProxy</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1SharedDataProxy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::SharedDataProxy</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1SharedDataProxy.html</Path>
    <Anchor>ac992878b44ef636d2340311ace91bb2d</Anchor>
    <Abstract>Worker for pack() and getInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::SharedDataProxy</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1SharedDataProxy.html</Path>
    <Anchor>ace1dab3f49c71af0f454e38e2f22c8a3</Anchor>
    <Abstract>Worker for unpack() and applyInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChangeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::SharedDataProxy</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1SharedDataProxy.html</Path>
    <Anchor>aee9d53059343bff1e90f62c44721f842</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqNbody::Window</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqNbody::Window</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Window.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::Window</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Window.html</Path>
    <Anchor>a578b4f3f208fa0e3c1ec5ebd00a8d5b5</Anchor>
    <Abstract>Construct a new window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::Window</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Window.html</Path>
    <Anchor>a5414c5bbc3d132b77b3edd084dbf8eae</Anchor>
    <Abstract>Destruct the window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqNbody::Window</Scope>
    </TokenIdentifier>
    <Path>classeqNbody_1_1Window.html</Path>
    <Anchor>a99e54f79950a2cac64e031b09a636bee</Anchor>
    <Abstract>Swap the front and back buffer of the window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPixelBench</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>eqPixelBench</Scope>
    </TokenIdentifier>
    <Path>namespaceeqPixelBench.html</Path>
    <Abstract>The Equalizer Pixel Transfer Benchmark Utility.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPixelBench::Channel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqPixelBench::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqPixelBench_1_1Channel.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPixelBench::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqPixelBench_1_1Channel.html</Path>
    <Anchor>a916b9d0f4ace3da89f18c37f56abc627</Anchor>
    <Abstract>Construct a new channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPixelBench::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqPixelBench_1_1Channel.html</Path>
    <Anchor>a678f62e9d84c6837fa680e0709089a49</Anchor>
    <Abstract>Destruct the channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPixelBench::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqPixelBench_1_1Channel.html</Path>
    <Anchor>a41a98d6811b7b6d5264410763ca866cb</Anchor>
    <Abstract>Start rendering a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameDraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPixelBench::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqPixelBench_1_1Channel.html</Path>
    <Anchor>a9bbe5a2be911d026135b2271eb3ed703</Anchor>
    <Abstract>Draw the scene.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPixelBench::Config</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqPixelBench::Config</Scope>
    </TokenIdentifier>
    <Path>classeqPixelBench_1_1Config.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Config</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPixelBench::Config</Scope>
    </TokenIdentifier>
    <Path>classeqPixelBench_1_1Config.html</Path>
    <Anchor>ad128ef8164c5b0aaaa29edbe534f8875</Anchor>
    <Abstract>Construct a new config.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPixelBench::Config</Scope>
    </TokenIdentifier>
    <Path>classeqPixelBench_1_1Config.html</Path>
    <Anchor>a038130ece29368949f6cbafab5fa1a4e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPixelBench::Config</Scope>
    </TokenIdentifier>
    <Path>classeqPixelBench_1_1Config.html</Path>
    <Anchor>aeb5597d0390211f8aa80903ecdc2e0d4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPixelBench::Config</Scope>
    </TokenIdentifier>
    <Path>classeqPixelBench_1_1Config.html</Path>
    <Anchor>ab80d35f4e3c8647b3bd90d4907ec56fe</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Config</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPixelBench::Config</Scope>
    </TokenIdentifier>
    <Path>classeqPixelBench_1_1Config.html</Path>
    <Anchor>a386ce481849909516138b031915b8c3e</Anchor>
    <Abstract>Destruct a config.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPixelBench::ConfigEvent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqPixelBench::ConfigEvent</Scope>
    </TokenIdentifier>
    <Path>structeqPixelBench_1_1ConfigEvent.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eqPixelBench::ConfigEvent</Scope>
    </TokenIdentifier>
    <Path>structeqPixelBench_1_1ConfigEvent.html</Path>
    <Anchor>ab0ec11efff21b4065f6a1b9058ffcdda</Anchor>
    <Abstract>Construct a new config event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPixelBench::Window</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqPixelBench::Window</Scope>
    </TokenIdentifier>
    <Path>classeqPixelBench_1_1Window.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPixelBench::Window</Scope>
    </TokenIdentifier>
    <Path>classeqPixelBench_1_1Window.html</Path>
    <Anchor>aafd393959da9906ea5839660cdbd5d94</Anchor>
    <Abstract>Construct a new window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPixelBench::Window</Scope>
    </TokenIdentifier>
    <Path>classeqPixelBench_1_1Window.html</Path>
    <Anchor>a374c253826a7ca20dfd487afd4e6e3e3</Anchor>
    <Abstract>Initialize this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPly</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>eqPly</Scope>
    </TokenIdentifier>
    <Path>namespaceeqPly.html</Path>
    <Abstract>The Equalizer polygonal rendering example.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initErrors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eqPly</Scope>
    </TokenIdentifier>
    <Path>namespaceeqPly.html</Path>
    <Anchor>a3679d919cfbf4406d9213f44920ae55e</Anchor>
    <Abstract>Set up eqPly-specific error codes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitErrors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eqPly</Scope>
    </TokenIdentifier>
    <Path>namespaceeqPly.html</Path>
    <Anchor>ab7636cb0cc5e26f9ce2af6f5211cf292</Anchor>
    <Abstract>Clear eqPly-specific error codes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>COLOR_MODEL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eqPly</Scope>
    </TokenIdentifier>
    <Path>namespaceeqPly.html</Path>
    <Anchor>a59bdb7ad42ce116aa3ecbc68b20255e8a72e77fc351801bbe7dabd5949616b82a</Anchor>
    <Abstract>Render using the colors defined in the ply file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>COLOR_DEMO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eqPly</Scope>
    </TokenIdentifier>
    <Path>namespaceeqPly.html</Path>
    <Anchor>a59bdb7ad42ce116aa3ecbc68b20255e8a1669b2248c77fe66932e4e6ca946775c</Anchor>
    <Abstract>Use a unique color to demonstrate decomposition.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>COLOR_WHITE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eqPly</Scope>
    </TokenIdentifier>
    <Path>namespaceeqPly.html</Path>
    <Anchor>a59bdb7ad42ce116aa3ecbc68b20255e8a2a8d9aad1649eb0e8b4f99dc2f4b302d</Anchor>
    <Abstract>Render in solid white (mostly for anaglyph stereo)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPly::CameraAnimation</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqPly::CameraAnimation</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1CameraAnimation.html</Path>
    <Abstract>Loads sequence of camera positions and interpolates them on a per-frame basis.</Abstract>
    <DeclaredIn>cameraAnimation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPly::CameraAnimation::Step</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqPly::CameraAnimation::Step</Scope>
    </TokenIdentifier>
    <Path>structeqPly_1_1CameraAnimation_1_1Step.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPly::Channel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqPly::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Channel.html</Path>
    <Abstract>The rendering entity, updating a part of a Window.</Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Channel.html</Path>
    <Anchor>a6a6bd8ec19bd97bd67dadce0408e656a</Anchor>
    <Abstract>Construct a new channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Channel.html</Path>
    <Anchor>aaea737d8140e265e3b672c0203ff8983</Anchor>
    <Abstract>Destruct the channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Channel.html</Path>
    <Anchor>af2490f45ae22d2581321d02d08cbadc1</Anchor>
    <Abstract>Initialize this channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Channel.html</Path>
    <Anchor>a29d081a6cc2ef70984a6bf2b290b98f9</Anchor>
    <Abstract>Exit this channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameClear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Channel.html</Path>
    <Anchor>a40d64fe8a6a75611d5849fe5ddc9c94c</Anchor>
    <Abstract>Clear the frame buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameDraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Channel.html</Path>
    <Anchor>a2062bda4af8e994fb2f74b4ae043b58b</Anchor>
    <Abstract>Draw the scene.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameAssemble</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Channel.html</Path>
    <Anchor>af026e7f43de551028bfc6f25afba005d</Anchor>
    <Abstract>Assemble all input frames.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameReadback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Channel.html</Path>
    <Anchor>a392bc2a1691c0285efc3c53dffa693bb</Anchor>
    <Abstract>Read back the rendered frame buffer into the output frames.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Channel.html</Path>
    <Anchor>ae89276bb59068785f82d8b9ddeb7b2fd</Anchor>
    <Abstract>Start rendering a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Channel.html</Path>
    <Anchor>a9198ae13071fc7a1e4b8ed4d04a911a6</Anchor>
    <Abstract>Finish rendering a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameViewStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Channel.html</Path>
    <Anchor>aa9a507367252bfb8c29fe6b2c1aafcc0</Anchor>
    <Abstract>Start updating a destination channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameViewFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Channel.html</Path>
    <Anchor>a90736bcf74fd02623707b1e3ae64f085</Anchor>
    <Abstract>Finish updating a destination channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useOrtho</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Channel.html</Path>
    <Anchor>aba7a3b4a81f7381e38d4b988ab562965</Anchor>
    <Abstract>Select perspective or orthographic rendering.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getJitter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Channel.html</Path>
    <Anchor>a4c24dc8bbdfda015974dc9ef1282026d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyStopFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Channel</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Channel.html</Path>
    <Anchor>a843585a9445d407d02033a82f2d1194b</Anchor>
    <Abstract>Notify interruption of the rendering.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPly::Config</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqPly::Config</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Config.html</Path>
    <Abstract>The configuration, run be the EqPly application.</Abstract>
    <DeclaredIn>config.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Config</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Config</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Config.html</Path>
    <Anchor>a61d66bcbd039b529b9360c7cf42511b1</Anchor>
    <Abstract>Construct a new config.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Config</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Config.html</Path>
    <Anchor>a465ae244d86e063f32428a698434933c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Config</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Config.html</Path>
    <Anchor>a437cc20f4f454927350b84e15ba54f04</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Config</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Config.html</Path>
    <Anchor>ae42425b2272e8ee9359349cc5bc0ec32</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Config</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Config.html</Path>
    <Anchor>a660c407466e9feb9d6dfa58c9155d5a5</Anchor>
    <Abstract>Map per-config data to the local node process.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Config</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Config.html</Path>
    <Anchor>a5b5787cc329e30c4e89ee8c33e540053</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Config</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Config.html</Path>
    <Anchor>a0b70bd7df90c011387f612a4cab883a0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isIdleAA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Config</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Config.html</Path>
    <Anchor>a3edf7be32b113da4db0a3361770a115b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>needRedraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Config</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Config.html</Path>
    <Anchor>a9e14dffd480a94cb3bb97a890da5076d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAnimationFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Config</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Config.html</Path>
    <Anchor>a58ec52b9c6b7ea7b060bc72a5f348897</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Config</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Config</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Config.html</Path>
    <Anchor>a87a8c374f626fcf463cb5551f57e0bbd</Anchor>
    <Abstract>Destruct a config.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Config</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Config.html</Path>
    <Anchor>a0db338e3a1ec16648c3de373ef9049a0</Anchor>
    <Abstract>Synchronize config and admin copy.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPly::ConfigEvent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqPly::ConfigEvent</Scope>
    </TokenIdentifier>
    <Path>structeqPly_1_1ConfigEvent.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eqPly::ConfigEvent</Scope>
    </TokenIdentifier>
    <Path>structeqPly_1_1ConfigEvent.html</Path>
    <Anchor>a93c084a8dfe5e123dd964dd0ea47ba11</Anchor>
    <Abstract>Construct a new config event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPly::EqPly</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqPly::EqPly</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1EqPly.html</Path>
    <Abstract>The EqPly application instance.</Abstract>
    <DeclaredIn>eqPly.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::EqPly</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1EqPly.html</Path>
    <Anchor>ac6d09b4c229e0678cc0f3ebf5a6417b4</Anchor>
    <Abstract>Run an eqPly instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHelp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>eqPly::EqPly</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1EqPly.html</Path>
    <Anchor>aeef428ce35d93686cde1a6d6a411a8e2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clientLoop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::EqPly</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1EqPly.html</Path>
    <Anchor>a8ea369adaed6ff07d05f93f6b20a6199</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPly::FrameData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqPly::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1FrameData.html</Path>
    <Abstract>Frame-specific data.</Abstract>
    <DeclaredIn>frameData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1FrameData.html</Path>
    <Anchor>a65b893eb7d7a02d7480177ac9d340e93</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1FrameData.html</Path>
    <Anchor>a97d5b581333e3663b0a5033e61f1110b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChangeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1FrameData.html</Path>
    <Anchor>afba508e3d334c62cea68f97a65b35c9e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1FrameData.html</Path>
    <Anchor>a3f38ecd33059e0c4687074fb08f4f57e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1FrameData.html</Path>
    <Anchor>aac0908fea43badb7951cd88709e0e980</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChangeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1FrameData.html</Path>
    <Anchor>afba508e3d334c62cea68f97a65b35c9e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPly::InitData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqPly::InitData</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1InitData.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::InitData</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1InitData.html</Path>
    <Anchor>aaa0b9481a3b8e099dfdec82b66ef5c12</Anchor>
    <Abstract>Serialize all instance information of this distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::InitData</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1InitData.html</Path>
    <Anchor>a1506a4556bea560840f0ce9417237135</Anchor>
    <Abstract>Deserialize the instance data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPly::LocalInitData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqPly::LocalInitData</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1LocalInitData.html</Path>
    <Abstract>Manages the argument parsing and non-distributed part of the initialization data.</Abstract>
    <DeclaredIn>localInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPly::ModelAssigner</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqPly::ModelAssigner</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1ModelAssigner.html</Path>
    <Abstract>Helper to assign models to views.</Abstract>
    <DeclaredIn>modelAssigner.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPly::Node</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqPly::Node</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Node.html</Path>
    <Abstract>Representation of a node in the cluster.</Abstract>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Node</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Node.html</Path>
    <Anchor>a028e748e434a2b5227802a8aa2fddbd2</Anchor>
    <Abstract>Construct a new node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Node</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Node.html</Path>
    <Anchor>ade40b966a964ab4da738f1e184b7d3cf</Anchor>
    <Abstract>Destruct the node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Node</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Node.html</Path>
    <Anchor>a1a89e45d99193f98d1a0dadec7376f4e</Anchor>
    <Abstract>Initialize this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPly::Pipe</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqPly::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Pipe.html</Path>
    <Abstract>The representation of one GPU.</Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Pipe.html</Path>
    <Anchor>a45fe000e3fef47198f807d7a458227d0</Anchor>
    <Abstract>Construct a new pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Pipe.html</Path>
    <Anchor>a9df7dbbf24ef81b9c018bb5e7e690cc8</Anchor>
    <Abstract>Destruct the pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>selectWindowSystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Pipe.html</Path>
    <Anchor>acbe6e78742ff9b53184c66376757ee1b</Anchor>
    <Abstract>Choose the window system to be used by this pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Pipe.html</Path>
    <Anchor>a281fd0a1253d7f7f263b74c87870d623</Anchor>
    <Abstract>Initialize this pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Pipe.html</Path>
    <Anchor>aa1859b41d70944448bad527a173f897a</Anchor>
    <Abstract>De-initialize this pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Pipe.html</Path>
    <Anchor>a7ad917b07c023a3f9dab690e2e5642c5</Anchor>
    <Abstract>Start rendering a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPly::Tracker</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqPly::Tracker</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Tracker.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tracker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Tracker</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Tracker.html</Path>
    <Anchor>adf214393a14e8bf23de2fc8231e239ec</Anchor>
    <Abstract>Constructs a new Tracker and sets it&amp;#39;s _running state to false.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Tracker</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Tracker.html</Path>
    <Anchor>af162d69b5592a16244d13a918131241f</Anchor>
    <Abstract>Configures the serial port and initialises the tracker.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWorldToEmitter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Tracker</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Tracker.html</Path>
    <Anchor>a1c55e8f56c7fb3b18952b52a667f94b4</Anchor>
    <Abstract>Set the matrix defining the transformation from world coordinates to emitter coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSensorToObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Tracker</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Tracker.html</Path>
    <Anchor>a14e8bf6fbbf47e8eb7736248d8823eaf</Anchor>
    <Abstract>Set the matrix defining the transformation from sensor coordinates to coordinates of the tracked obje...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Tracker</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Tracker.html</Path>
    <Anchor>a5a3622acf0487e4094ddd2fe66ec1d09</Anchor>
    <Abstract>Checks if the tracker is running.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Tracker</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Tracker.html</Path>
    <Anchor>a852f3b8fa6fb2165bcb129c1dbf7f8be</Anchor>
    <Abstract>Gets new position and orientation data from the tracker and stores them in the _pos and _hpr arrays...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Tracker</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Tracker.html</Path>
    <Anchor>a2e6875b6f63977e4282662e5d8da5c41</Anchor>
    <Abstract>Gets the transformation matrix with the position and orientation data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPly::VertexBufferDist</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqPly::VertexBufferDist</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1VertexBufferDist.html</Path>
    <Abstract>co::Object to distribute a model, holds a VertexBufferBase node.</Abstract>
    <DeclaredIn>vertexBufferDist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::VertexBufferDist</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1VertexBufferDist.html</Path>
    <Anchor>adbcaba2ea45015a47320cf1bcea00113</Anchor>
    <Abstract>Serialize all instance information of this distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::VertexBufferDist</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1VertexBufferDist.html</Path>
    <Anchor>ab7694ce0c1defad2a8393e924d90b41c</Anchor>
    <Abstract>Deserialize the instance data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::VertexBufferDist</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1VertexBufferDist.html</Path>
    <Anchor>a39f5fb89904d0a43dd6339c50b6ab2e3</Anchor>
    <Abstract>Serialize all instance information of this distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::VertexBufferDist</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1VertexBufferDist.html</Path>
    <Anchor>a711c262b13f54ff85a134a9ddf8e565c</Anchor>
    <Abstract>Deserialize the instance data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPly::VertexBufferState</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqPly::VertexBufferState</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1VertexBufferState.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPly::View</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqPly::View</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1View.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>View</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::View</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1View.html</Path>
    <Anchor>acd963535f83152acbe8b800f1cbc85d5</Anchor>
    <Abstract>Construct a new view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~View</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::View</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1View.html</Path>
    <Anchor>adea06d79c1ba64494ab98de85a59c522</Anchor>
    <Abstract>Destruct this view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eqPly::Window</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eqPly::Window</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Window.html</Path>
    <Abstract>A window represent an OpenGL drawable and context.</Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Window</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Window.html</Path>
    <Anchor>a64c98460b9439eed87394a43c9632759</Anchor>
    <Abstract>Construct a new window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Window</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Window.html</Path>
    <Anchor>a41933344f9b1844637ef3f478bd9c6de</Anchor>
    <Abstract>Destruct the window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitSystemWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Window</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Window.html</Path>
    <Anchor>a3dd6f714d33374f140fe5cd5d13d8143</Anchor>
    <Abstract>Initialize the OS-specific window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Window</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Window.html</Path>
    <Anchor>a5f98a0b733cbfff18bbd33052552a86e</Anchor>
    <Abstract>Initialize the OpenGL state for this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExitGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Window</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Window.html</Path>
    <Anchor>a62ded7dc8180575ed8b50eb27c8851b3</Anchor>
    <Abstract>De-initialize the OpenGL state for this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eqPly::Window</Scope>
    </TokenIdentifier>
    <Path>classeqPly_1_1Window.html</Path>
    <Anchor>aaedb9361b36d668f45dc3bf65fb4d0cf</Anchor>
    <Abstract>Start rendering a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eVolve</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>eVolve</Scope>
    </TokenIdentifier>
    <Path>namespaceeVolve.html</Path>
    <Abstract>The Equalizer Volume Rendering Example.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initErrors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eVolve</Scope>
    </TokenIdentifier>
    <Path>namespaceeVolve.html</Path>
    <Anchor>af6406eb00092bbadde0e5b313c63bb4b</Anchor>
    <Abstract>Set up eVolve-specific error codes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitErrors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>eVolve</Scope>
    </TokenIdentifier>
    <Path>namespaceeVolve.html</Path>
    <Anchor>aa7e73a1b32a0fc4ea242c716a926a4a1</Anchor>
    <Abstract>Clear eVolve-specific error codes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BG_BLACK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eVolve</Scope>
    </TokenIdentifier>
    <Path>namespaceeVolve.html</Path>
    <Anchor>aab01e8ddc37b0ecbf62a5335cf9cef60ae3dc007ffbbcb230cae2aa1030e03069</Anchor>
    <Abstract>Black background.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BG_WHITE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eVolve</Scope>
    </TokenIdentifier>
    <Path>namespaceeVolve.html</Path>
    <Anchor>aab01e8ddc37b0ecbf62a5335cf9cef60a4611545505c6dc72027ddc3b239604ea</Anchor>
    <Abstract>White background.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BG_COLOR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eVolve</Scope>
    </TokenIdentifier>
    <Path>namespaceeVolve.html</Path>
    <Anchor>aab01e8ddc37b0ecbf62a5335cf9cef60aa433b6749f6a3cb5d929f7b19f33c672</Anchor>
    <Abstract>Unique color.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>COLOR_MODEL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eVolve</Scope>
    </TokenIdentifier>
    <Path>namespaceeVolve.html</Path>
    <Anchor>a0e0e808d492b4ba990b404e0b13e26b7a6a48ef6164ba39c243eb2624268790b3</Anchor>
    <Abstract>Render using the colors defined in the ply file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>COLOR_DEMO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eVolve</Scope>
    </TokenIdentifier>
    <Path>namespaceeVolve.html</Path>
    <Anchor>a0e0e808d492b4ba990b404e0b13e26b7a68415f3f35496db80075360d64724b30</Anchor>
    <Abstract>Use a unique color to demonstrate decomposition.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>COLOR_HALF_DEMO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eVolve</Scope>
    </TokenIdentifier>
    <Path>namespaceeVolve.html</Path>
    <Anchor>a0e0e808d492b4ba990b404e0b13e26b7aa03b30c0981e3eacb92b994d712ec7cd</Anchor>
    <Abstract>50% unique color + 50% original color</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NQ_FULL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eVolve</Scope>
    </TokenIdentifier>
    <Path>namespaceeVolve.html</Path>
    <Anchor>a940fa6c87b4220c2448965ad76b05feaa9f55863d6d3f9a94260e94d4a77e5b27</Anchor>
    <Abstract>Highest normals quality.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NQ_MEDIUM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eVolve</Scope>
    </TokenIdentifier>
    <Path>namespaceeVolve.html</Path>
    <Anchor>a940fa6c87b4220c2448965ad76b05feaaf53f9181f354d3de65fd858cd7c4f5c1</Anchor>
    <Abstract>Average normals quality.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NQ_MINIMAL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>eVolve</Scope>
    </TokenIdentifier>
    <Path>namespaceeVolve.html</Path>
    <Anchor>a940fa6c87b4220c2448965ad76b05feaa12100eb37f3d83d9673f6acdc57155a4</Anchor>
    <Abstract>Basic normal approximation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eVolve::Channel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eVolve::Channel</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Channel.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Channel</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Channel.html</Path>
    <Anchor>aa4ded78534dfff65618b12a2e8d46bef</Anchor>
    <Abstract>Construct a new channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Channel</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Channel.html</Path>
    <Anchor>a011baa72796a9de2f130f61ec873e5ba</Anchor>
    <Abstract>Destruct the channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Channel</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Channel.html</Path>
    <Anchor>a5dc8a81a9d96c7956e010d705da55087</Anchor>
    <Abstract>Initialize this channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Channel</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Channel.html</Path>
    <Anchor>a9cd335779e7ab535cfe8f4e347c991d0</Anchor>
    <Abstract>Start rendering a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameDraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Channel</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Channel.html</Path>
    <Anchor>ac096e216b59d8c9111258507c6da3f13</Anchor>
    <Abstract>Draw the scene.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameAssemble</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Channel</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Channel.html</Path>
    <Anchor>a95c457fbe558dc54922a4cde5a6a8ffa</Anchor>
    <Abstract>Assemble all input frames.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameReadback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Channel</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Channel.html</Path>
    <Anchor>a4807b75738d32bf249f6ba0a371d54cd</Anchor>
    <Abstract>Read back the rendered frame buffer into the output frames.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameViewFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Channel</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Channel.html</Path>
    <Anchor>a2c566d4b440c6fb93778a909873b8979</Anchor>
    <Abstract>Finish updating a destination channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameClear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Channel</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Channel.html</Path>
    <Anchor>a1318abfe55ac4cb3879873085dd4a8b0</Anchor>
    <Abstract>Clear the frame buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useOrtho</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Channel</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Channel.html</Path>
    <Anchor>a0413293c47960b68d49b630a3dd6ab84</Anchor>
    <Abstract>Select perspective or orthographic rendering.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eVolve::Config</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eVolve::Config</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Config.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Config</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Config</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Config.html</Path>
    <Anchor>a31f32f5bbb4bd543e0810e2e72bb6cfe</Anchor>
    <Abstract>Construct a new config.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Config</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Config.html</Path>
    <Anchor>a215906bd830809d498bd46709b75d75e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Config</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Config.html</Path>
    <Anchor>ac9649de9ebd011b574860440fa2b95b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Config</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Config.html</Path>
    <Anchor>a5c20f7eae1a5386d2d1397b4df26f9ee</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Config</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Config.html</Path>
    <Anchor>ab8de9791583fb9ed00f837d7ad70e556</Anchor>
    <Abstract>Map per-config data to the local node process.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Config</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Config</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Config.html</Path>
    <Anchor>a9206ec5bf069377e2ef30c8f600af4ed</Anchor>
    <Abstract>Destruct a config.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Config</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Config.html</Path>
    <Anchor>a2967e024d975b0ff86790be418036705</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eVolve::EVolve</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eVolve::EVolve</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1EVolve.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::EVolve</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1EVolve.html</Path>
    <Anchor>a89f9b766112b647317bf008779fbfdd9</Anchor>
    <Abstract>Run an eqPly instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clientLoop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::EVolve</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1EVolve.html</Path>
    <Anchor>adaa82006edcea99a07d741ef8c51d796</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eVolve::FrameData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eVolve::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1FrameData.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1FrameData.html</Path>
    <Anchor>a4fb3c512ecd7ed27b999c9764b0621d3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1FrameData.html</Path>
    <Anchor>ac7816bff8ba8d8362d4b1d526f461a5b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChangeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::FrameData</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1FrameData.html</Path>
    <Anchor>a55b63b090ecc9daaf78dc7ee93f7b65c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eVolve::GLSLShaders</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eVolve::GLSLShaders</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1GLSLShaders.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eVolve::InitData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eVolve::InitData</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1InitData.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::InitData</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1InitData.html</Path>
    <Anchor>a2b48ea2479635351edba6f96e5efee5d</Anchor>
    <Abstract>Serialize all instance information of this distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::InitData</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1InitData.html</Path>
    <Anchor>ade3e97d07df2729a31e70a326969114c</Anchor>
    <Abstract>Deserialize the instance data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eVolve::LocalInitData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eVolve::LocalInitData</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1LocalInitData.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eVolve::Node</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eVolve::Node</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Node.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Node</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Node.html</Path>
    <Anchor>aa2099702fb28cd697a06e39577f8fc33</Anchor>
    <Abstract>Construct a new node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Node</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Node.html</Path>
    <Anchor>a45050a5db463a5e4f8b94024c2af9d6d</Anchor>
    <Abstract>Destruct the node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Node</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Node.html</Path>
    <Anchor>a2a0104a77e37a4e53733137e07ebc28a</Anchor>
    <Abstract>Initialize this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eVolve::Pipe</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eVolve::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Pipe.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Pipe.html</Path>
    <Anchor>a93cad744a5fabe8e24adce71024c0233</Anchor>
    <Abstract>Construct a new pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Pipe.html</Path>
    <Anchor>a1e657f36a209e7010109b6041f939b60</Anchor>
    <Abstract>Destruct the pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>selectWindowSystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Pipe.html</Path>
    <Anchor>a086b8ad57107c182b79f2aef437124b1</Anchor>
    <Abstract>Choose the window system to be used by this pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Pipe.html</Path>
    <Anchor>a3e70857b3847818ef30c44fd2233c999</Anchor>
    <Abstract>Initialize this pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Pipe.html</Path>
    <Anchor>a27674ce8b1e215804fcc033c96ffc001</Anchor>
    <Abstract>De-initialize this pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Pipe</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Pipe.html</Path>
    <Anchor>a4e59f5b575d05fa11e4d34fc3b10861e</Anchor>
    <Abstract>Start rendering a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eVolve::DataInTextureDimensions</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eVolve::DataInTextureDimensions</Scope>
    </TokenIdentifier>
    <Path>structeVolve_1_1DataInTextureDimensions.html</Path>
    <Abstract>Structure that contain actual dimensions of data that is stored in volume texture.</Abstract>
    <DeclaredIn>rawVolModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>W</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eVolve::DataInTextureDimensions</Scope>
    </TokenIdentifier>
    <Path>structeVolve_1_1DataInTextureDimensions.html</Path>
    <Anchor>a00bfb37de2acb8a6661629839734dfa0</Anchor>
    <Abstract>Width of data in texture (0..1].</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>H</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eVolve::DataInTextureDimensions</Scope>
    </TokenIdentifier>
    <Path>structeVolve_1_1DataInTextureDimensions.html</Path>
    <Anchor>ad6e096fb75abfda12e6065e86b58e7d3</Anchor>
    <Abstract>Height of data in texture (0..1].</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eVolve::DataInTextureDimensions</Scope>
    </TokenIdentifier>
    <Path>structeVolve_1_1DataInTextureDimensions.html</Path>
    <Anchor>a5540b9ae022e3a6deb546178314fe0e8</Anchor>
    <Abstract>Depth of data in texture (0..1].</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Do</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eVolve::DataInTextureDimensions</Scope>
    </TokenIdentifier>
    <Path>structeVolve_1_1DataInTextureDimensions.html</Path>
    <Anchor>a5cf7b716ee7861516af407cefffa7abe</Anchor>
    <Abstract>Depth offset (start of range)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Db</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eVolve::DataInTextureDimensions</Scope>
    </TokenIdentifier>
    <Path>structeVolve_1_1DataInTextureDimensions.html</Path>
    <Anchor>ac032a6c7e907e36d67aea75ecf97960b</Anchor>
    <Abstract>Depth border (necessary for preintegration)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eVolve::VolumeScaling</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eVolve::VolumeScaling</Scope>
    </TokenIdentifier>
    <Path>structeVolve_1_1VolumeScaling.html</Path>
    <Abstract>Contain overal volume proportions relatively [-1,-1,-1]..[1,1,1] cube.</Abstract>
    <DeclaredIn>rawVolModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>W</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eVolve::VolumeScaling</Scope>
    </TokenIdentifier>
    <Path>structeVolve_1_1VolumeScaling.html</Path>
    <Anchor>ab45adc73252e07c9245ded7e6d35334f</Anchor>
    <Abstract>width scale</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>H</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eVolve::VolumeScaling</Scope>
    </TokenIdentifier>
    <Path>structeVolve_1_1VolumeScaling.html</Path>
    <Anchor>a3bc786b8cbfdec62ee049814fcd8e08b</Anchor>
    <Abstract>height scale</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eVolve::VolumeScaling</Scope>
    </TokenIdentifier>
    <Path>structeVolve_1_1VolumeScaling.html</Path>
    <Anchor>ad6de504635cd49e9436e0b3c216149b6</Anchor>
    <Abstract>depth scale</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eVolve::VolumeInfo</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eVolve::VolumeInfo</Scope>
    </TokenIdentifier>
    <Path>structeVolve_1_1VolumeInfo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eVolve::VolumeInfo</Scope>
    </TokenIdentifier>
    <Path>structeVolve_1_1VolumeInfo.html</Path>
    <Anchor>a58a8bfde3c33ac3b5c2f64f3eba18df0</Anchor>
    <Abstract>3D texture ID</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eVolve::VolumeInfo</Scope>
    </TokenIdentifier>
    <Path>structeVolve_1_1VolumeInfo.html</Path>
    <Anchor>acb878d78184240efefeaa3ffe2cff6fe</Anchor>
    <Abstract>preintegration table texture</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volScaling</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eVolve::VolumeInfo</Scope>
    </TokenIdentifier>
    <Path>structeVolve_1_1VolumeInfo.html</Path>
    <Anchor>af8388fea371151f9db9ce7b448b4e0de</Anchor>
    <Abstract>Proportions of volume.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>voxelSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eVolve::VolumeInfo</Scope>
    </TokenIdentifier>
    <Path>structeVolve_1_1VolumeInfo.html</Path>
    <Anchor>a96e676b9a5d8e7bb7310961b903e3e1d</Anchor>
    <Abstract>Relative volume size (0..1].</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eVolve::VolumeInfo</Scope>
    </TokenIdentifier>
    <Path>structeVolve_1_1VolumeInfo.html</Path>
    <Anchor>a5c301de7a7930b340cf5498a1a9609e4</Anchor>
    <Abstract>Data dimensions within volume texture.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasDerivatives</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>eVolve::VolumeInfo</Scope>
    </TokenIdentifier>
    <Path>structeVolve_1_1VolumeInfo.html</Path>
    <Anchor>a125cc8f3e22748826ba9148d44d2db30</Anchor>
    <Abstract>true if raw+der used</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eVolve::RawVolumeModel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eVolve::RawVolumeModel</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1RawVolumeModel.html</Path>
    <Abstract>Load model to texture.</Abstract>
    <DeclaredIn>rawVolModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_createVolumeTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::RawVolumeModel</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1RawVolumeModel.html</Path>
    <Anchor>ae9768e7bbfdc15341d5595aa7cb5bb96</Anchor>
    <Abstract>Reading requested part of volume and derivatives from data file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eVolve::RawVolumeModelRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eVolve::RawVolumeModelRenderer</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1RawVolumeModelRenderer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eVolve::SliceClipper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eVolve::SliceClipper</Scope>
    </TokenIdentifier>
    <Path>structeVolve_1_1SliceClipper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eVolve::Window</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>eVolve::Window</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Window.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Window</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Window.html</Path>
    <Anchor>a2ca3c9f6f317429734171717baf9105d</Anchor>
    <Abstract>Construct a new window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Window</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Window.html</Path>
    <Anchor>a43c16a1c117ec85feef8846b91e65171</Anchor>
    <Abstract>Destruct the window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Window</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Window.html</Path>
    <Anchor>a75a4f02308de024462d01fbc9fc5662e</Anchor>
    <Abstract>Initialize this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Window</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Window.html</Path>
    <Anchor>afd8760043e77b4365be851bca1bc89a0</Anchor>
    <Abstract>Initialize the OpenGL state for this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>eVolve::Window</Scope>
    </TokenIdentifier>
    <Path>classeVolve_1_1Window.html</Path>
    <Anchor>a97c8b1b09d77cc915682f611c4ccb9c6</Anchor>
    <Abstract>Swap the front and back buffer of the window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hlpFuncs::hFile</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>hlpFuncs::hFile</Scope>
    </TokenIdentifier>
    <Path>structhlpFuncs_1_1hFile.html</Path>
    <Abstract>Just helping structure to automatically close files.</Abstract>
    <DeclaredIn>hlp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mesh::MeshException</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>mesh::MeshException</Scope>
    </TokenIdentifier>
    <Path>structmesh_1_1MeshException.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mesh::NullOStream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>mesh::NullOStream</Scope>
    </TokenIdentifier>
    <Path>structmesh_1_1NullOStream.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mesh::NullOStream::NullStreamBuf</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>mesh::NullOStream::NullStreamBuf</Scope>
    </TokenIdentifier>
    <Path>structmesh_1_1NullOStream_1_1NullStreamBuf.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mesh::ArrayWrapper</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mesh::ArrayWrapper</Scope>
    </TokenIdentifier>
    <Path>structmesh_1_1ArrayWrapper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mesh::VertexBufferBase</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>mesh::VertexBufferBase</Scope>
    </TokenIdentifier>
    <Path>classmesh_1_1VertexBufferBase.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mesh::VertexBufferData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>mesh::VertexBufferData</Scope>
    </TokenIdentifier>
    <Path>classmesh_1_1VertexBufferData.html</Path>
    <Abstract>Holds the final kd-tree data, sorted and reindexed.</Abstract>
    <DeclaredIn>vertexBufferData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mesh::VertexBufferLeaf</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>mesh::VertexBufferLeaf</Scope>
    </TokenIdentifier>
    <Path>classmesh_1_1VertexBufferLeaf.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mesh::VertexBufferNode</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>mesh::VertexBufferNode</Scope>
    </TokenIdentifier>
    <Path>classmesh_1_1VertexBufferNode.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mesh::VertexBufferRoot</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>mesh::VertexBufferRoot</Scope>
    </TokenIdentifier>
    <Path>classmesh_1_1VertexBufferRoot.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mesh::VertexBufferState</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>mesh::VertexBufferState</Scope>
    </TokenIdentifier>
    <Path>classmesh_1_1VertexBufferState.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_pmvMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>mesh::VertexBufferState</Scope>
    </TokenIdentifier>
    <Path>classmesh_1_1VertexBufferState.html</Path>
    <Anchor>a384991e02d15abf573dc5441bf9bcd39</Anchor>
    <Abstract>projection * modelView matrix</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_range</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>mesh::VertexBufferState</Scope>
    </TokenIdentifier>
    <Path>classmesh_1_1VertexBufferState.html</Path>
    <Anchor>ae9b1ef1937613effe0a151820422a276</Anchor>
    <Abstract>normalized [0,1] part of the model to draw</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_region</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>mesh::VertexBufferState</Scope>
    </TokenIdentifier>
    <Path>classmesh_1_1VertexBufferState.html</Path>
    <Anchor>a6038503520b92c9d9791b50ac0af9815</Anchor>
    <Abstract>normalized x1 y1 x2 y2 region from cullDraw</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mesh::VertexBufferStateSimple</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>mesh::VertexBufferStateSimple</Scope>
    </TokenIdentifier>
    <Path>classmesh_1_1VertexBufferStateSimple.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mesh::VertexData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>mesh::VertexData</Scope>
    </TokenIdentifier>
    <Path>classmesh_1_1VertexData.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>osgScaleViewer::Channel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>osgScaleViewer::Channel</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Channel.html</Path>
    <Abstract>The Channel renders the frames in frameDraw().</Abstract>
    <DeclaredIn>channel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Channel</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Channel.html</Path>
    <Anchor>a17ffb08bb8569a7faca12ff048877545</Anchor>
    <Abstract>Construct a new channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameClear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Channel</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Channel.html</Path>
    <Anchor>a66ce26e0f6b358b2e3c02c815364c49e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameDraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Channel</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Channel.html</Path>
    <Anchor>a1933a3936fde91899220fb9e025b77f7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameViewFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Channel</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Channel.html</Path>
    <Anchor>a4bcd7cee201441c3e583feb2468d5337</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>osgScaleViewer::Config</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>osgScaleViewer::Config</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Config.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Config</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Config</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Config.html</Path>
    <Anchor>a6c250a8d88073c4cd10adae8343123b0</Anchor>
    <Abstract>Construct a new config.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Config</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Config.html</Path>
    <Anchor>a2923ee01e9ef0f8b9f3e2d33ef91aaa2</Anchor>
    <Abstract>Reimplemented.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Config</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Config.html</Path>
    <Anchor>a15c9e9e6fadec589f265145994797e29</Anchor>
    <Abstract>Reimplemented.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Config</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Config.html</Path>
    <Anchor>ad15e44cd1c4241eeaaa1b0e31ecf30ee</Anchor>
    <Abstract>Reimplemented.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Config</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Config.html</Path>
    <Anchor>a34649e25af2e03a92b9cde4fa6d6237c</Anchor>
    <Abstract>Reimplemented for camera controls.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Config</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Config.html</Path>
    <Anchor>affe4788ac36ccf3a5c2bcdff800b5c30</Anchor>
    <Abstract>Sets the InitData object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Config</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Config.html</Path>
    <Anchor>a454420cbf6f026aea427db25334164ae</Anchor>
    <Abstract>Gets the InitData object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>osgScaleViewer::FrameData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>osgScaleViewer::FrameData</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1FrameData.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCameraPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::FrameData</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1FrameData.html</Path>
    <Anchor>a69a520f9dd74cb326d4faf5d6fbee2d1</Anchor>
    <Abstract>Sets the camera position.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCameraPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::FrameData</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1FrameData.html</Path>
    <Anchor>a93b0249d93ebb0804eee0371f3640f1c</Anchor>
    <Abstract>Gets the camera position.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCameraLookAtPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::FrameData</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1FrameData.html</Path>
    <Anchor>a4652497b4e61516e8e6e4c51ee1b01c8</Anchor>
    <Abstract>Sets the camera look at point.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCameraLookAtPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::FrameData</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1FrameData.html</Path>
    <Anchor>ac87773b78c6bb0c3aa67c037172c7eef</Anchor>
    <Abstract>Gets the camera look at point.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCameraUpVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::FrameData</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1FrameData.html</Path>
    <Anchor>ab8a8799826da3116341d40247ba6c316</Anchor>
    <Abstract>Sets the camera up vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCameraUpVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::FrameData</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1FrameData.html</Path>
    <Anchor>a0fd85d56df3100e564d3dbec02fffa4b</Anchor>
    <Abstract>Gets the camera up vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toggleStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::FrameData</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1FrameData.html</Path>
    <Anchor>ad22d5d3e48dbb10aadc4060d2369693c</Anchor>
    <Abstract>Toggle the display of run-time statistics.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::FrameData</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1FrameData.html</Path>
    <Anchor>ae5f2d420cc47e3eed3d8bcb3baea0850</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::FrameData</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1FrameData.html</Path>
    <Anchor>a9cea0bf30c810abd5e9e39dfab54f1fb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::FrameData</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1FrameData.html</Path>
    <Anchor>a07cb853f37c737a1870b289ca56cc617</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChangeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::FrameData</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1FrameData.html</Path>
    <Anchor>aab5538e07e8e99cc963921ee2c66c078</Anchor>
    <Abstract>Reimplemented.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>osgScaleViewer::InitData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>osgScaleViewer::InitData</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1InitData.html</Path>
    <Abstract>The init data holds all data which is needed during initalization.</Abstract>
    <DeclaredIn>initData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setModelFileName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::InitData</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1InitData.html</Path>
    <Anchor>a4e5cec01fea0ff51662557dc0fa955c7</Anchor>
    <Abstract>Sets the model filename.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getModelFileName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::InitData</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1InitData.html</Path>
    <Anchor>a86e0414a4abf90bb953023893504f5f6</Anchor>
    <Abstract>Gets the model filename.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setImageFileName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::InitData</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1InitData.html</Path>
    <Anchor>a558f55b847defc0d32466d17b8925f26</Anchor>
    <Abstract>Sets the image filename.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImageFileName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::InitData</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1InitData.html</Path>
    <Anchor>a3f9144bfe0c4dc964c41c99b90e275e5</Anchor>
    <Abstract>Gets the image filename.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTrackerPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::InitData</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1InitData.html</Path>
    <Anchor>a7222f5a92d9ddc4aa04112a73c63d8f8</Anchor>
    <Abstract>Gets the tracker port.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseCommandLine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::InitData</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1InitData.html</Path>
    <Anchor>aaebeea9554cdc1b672459c86dca6cd21</Anchor>
    <Abstract>Parses the command line arguments and puts the things it can parse into the init data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::InitData</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1InitData.html</Path>
    <Anchor>ace5a3db33bf19c767b675e434ff46cf5</Anchor>
    <Abstract>Reimplemented.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::InitData</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1InitData.html</Path>
    <Anchor>aaddcaf283904cbcbb19c382b5d715274</Anchor>
    <Abstract>Reimplemented.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>osgScaleViewer::Node</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>osgScaleViewer::Node</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Node.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Node</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Node.html</Path>
    <Anchor>a6e6c429f78751dfe3f54ef7c1c6006da</Anchor>
    <Abstract>Creates a Node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Node</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Node.html</Path>
    <Anchor>ae216bc833abb6aea464984378193cf39</Anchor>
    <Abstract>Initialize this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Node</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Node.html</Path>
    <Anchor>a6dcdcd498e3a7f42074053bdef2943f8</Anchor>
    <Abstract>Exit this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Node</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Node.html</Path>
    <Anchor>ac5f6dc51c407107e28301113f9e81f83</Anchor>
    <Abstract>Start rendering a frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>osgScaleViewer::NodeFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>osgScaleViewer::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1NodeFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1NodeFactory.html</Path>
    <Anchor>ac151d8dd3de8c648be8ff3abc1e6b476</Anchor>
    <Abstract>Create a new config.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1NodeFactory.html</Path>
    <Anchor>a3707a9f295ba508d6aa7624cc9cf1d21</Anchor>
    <Abstract>Create a new node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1NodeFactory.html</Path>
    <Anchor>afb74ffff8eb7e8705d404f72f458ab1e</Anchor>
    <Abstract>Create a new pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1NodeFactory.html</Path>
    <Anchor>a38fde00416b003380dcfa98bbc17dd7c</Anchor>
    <Abstract>Create a new window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::NodeFactory</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1NodeFactory.html</Path>
    <Anchor>a36b54759a9aa17f383cf08898b1c6017</Anchor>
    <Abstract>Create a new channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>osgScaleViewer::OSGScaleViewer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>osgScaleViewer::OSGScaleViewer</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1OSGScaleViewer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OSGScaleViewer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::OSGScaleViewer</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1OSGScaleViewer.html</Path>
    <Anchor>a45aa7ebe258faa8d4f43c84ce0aaee46</Anchor>
    <Abstract>Create an OSG application.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::OSGScaleViewer</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1OSGScaleViewer.html</Path>
    <Anchor>a4baea736d26fed4390743e91964ec924</Anchor>
    <Abstract>Run the application.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>osgScaleViewer::Pipe</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>osgScaleViewer::Pipe</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Pipe.html</Path>
    <Abstract>The Pipe holds the viewer and the frame data.</Abstract>
    <DeclaredIn>pipe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Pipe</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Pipe.html</Path>
    <Anchor>a2b0fcbdb0a12d1845eed10cd6c9e6151</Anchor>
    <Abstract>Creates a Pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Pipe</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Pipe.html</Path>
    <Anchor>a5351055cdff4b8936df2720a3c8a29f2</Anchor>
    <Abstract>Gets the FrameData object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Pipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Pipe</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Pipe.html</Path>
    <Anchor>a43e4c9b69760d34c76d51b99ff4683e9</Anchor>
    <Abstract>Destruct the pipe.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Pipe</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Pipe.html</Path>
    <Anchor>a2d82feaf7192a6664b81303c87cd9dda</Anchor>
    <Abstract>Creates the scene graph and registers the frame data, so it can be synced with the server later...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Pipe</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Pipe.html</Path>
    <Anchor>a1d259817297f2967162c130bc11772d5</Anchor>
    <Abstract>Deregisters the frame data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Pipe</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Pipe.html</Path>
    <Anchor>a2a2986483e1417b3a4a2bb49c9037868</Anchor>
    <Abstract>Syncs the frame data with the server and calls updateSceneGraph().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>osgScaleViewer::Quad</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>osgScaleViewer::Quad</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Quad.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createQuad</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Quad</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Quad.html</Path>
    <Anchor>a1769f66b9ae4791f80afed8c5ed7ad49</Anchor>
    <Abstract>Creates and returns the root node of the quad.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createQuad</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Quad</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Quad.html</Path>
    <Anchor>a2e3156670ab585b85ac0ac15b3a9311c</Anchor>
    <Abstract>Creates and returns the root node of the textured quad.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>osgScaleViewer::SceneReader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>osgScaleViewer::SceneReader</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneReader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SceneReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneReader</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneReader.html</Path>
    <Anchor>a84fb5a5cfb441a3a805edf3a6d9fd819</Anchor>
    <Abstract>Constructs a new SceneReader.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneReader</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneReader.html</Path>
    <Anchor>ab5d32e3d86f0711decca409b604ccacf</Anchor>
    <Abstract>Reads an osg model from its filename.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneReader</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneReader.html</Path>
    <Anchor>ab1ff346959bfc8660580c78daab11fe4</Anchor>
    <Abstract>Reads an osg image from its filename.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>osgScaleViewer::SceneView</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Abstract>Based on osgUtil::SceneView, but stripped done to only render and not interfere with stereo setup...</Abstract>
    <DeclaredIn>sceneView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SceneView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a097e9c408cab70fec15cb2577a450044</Anchor>
    <Abstract>Construct a default scene view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaults</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a3e6940098eff6665e2b421efdce9d651</Anchor>
    <Abstract>Set scene view to use default global state, light, camera and render visitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>af3b8f262d4830de86b8319caa269d280</Anchor>
    <Abstract>Set the camera used to represent the camera view of this SceneView.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>aab34a5b065161e1140e8ae7c4269be1d</Anchor>
    <Abstract>Get the camera used to represent the camera view of this SceneView.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a9a96006e956e6e767c96f8f94e64388c</Anchor>
    <Abstract>Get the const camera used to represent the camera view of this SceneView.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSceneData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>aea86b83d0b910570a8061f623b5384bb</Anchor>
    <Abstract>Set the data to view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSceneData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>aa9587c71e0bda5e7f91df3d75d43ef5c</Anchor>
    <Abstract>Get the scene data to view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSceneData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a226e5ba545fb77a6e2ae8129855b6f57</Anchor>
    <Abstract>Get the const scene data which to view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumSceneData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a21261b76a32e8d7a8dd1af6ded989c4f</Anchor>
    <Abstract>Get the number of scene data subgraphs added to the SceneView&amp;#39;s camera.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>ae1a466dcb1dd9a5716d6cb1677952577</Anchor>
    <Abstract>Set the viewport of the scene view to use specified osg::Viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a770ff5fb5459cc3ab6d645a13465db23</Anchor>
    <Abstract>Set the viewport of the scene view to specified dimensions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a7b73e7ab2fb49c1c6d041eefda01b4c0</Anchor>
    <Abstract>Get the viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>af0e5d80a04002344967a60add8915d04</Anchor>
    <Abstract>Get the const viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDisplaySettings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>aef37321bbc3f17657eb1c1cb97c5fdac</Anchor>
    <Abstract>Set the DisplaySettings.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDisplaySettings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>adf408ecfc77db1423007ec396ff4d509</Anchor>
    <Abstract>Get the const DisplaySettings.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDisplaySettings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>aad46e59fa26b25b1c3adc36448f54225</Anchor>
    <Abstract>Get the DisplaySettings.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClearColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a8b5be1f6e662739d4fe82bcddcec97ee</Anchor>
    <Abstract>Set the color used in glClearColor().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClearColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>ac0e9b4822efaf2034caa8784ffd175cd</Anchor>
    <Abstract>Get the color used in glClearColor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setActiveUniforms</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a95ae9b4be4db0da1050942ec2be16e82</Anchor>
    <Abstract>Set the uniforms that SceneView should set set up on each frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActiveUniforms</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>ac402a76e14460f03e339f3df129b9317</Anchor>
    <Abstract>Get the uniforms that SceneView should set set up on each frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProjectionMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>af5c56a2ab11c93d902c448a19d058f2c</Anchor>
    <Abstract>Set the projection matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProjectionMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a3c5aafe0933cd91974029fdd2cfaf579</Anchor>
    <Abstract>Set the projection matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProjectionMatrixAsOrtho</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>ae6c0590e0c59b64ec12e87852ab59785</Anchor>
    <Abstract>Set to an orthographic projection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProjectionMatrixAsOrtho2D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a3554c38757fc6d16febce21503a7bb6e</Anchor>
    <Abstract>Set to a 2D orthographic projection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProjectionMatrixAsFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a44a99390aa5b8d19368e9806583c1379</Anchor>
    <Abstract>Set to a perspective projection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProjectionMatrixAsPerspective</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>ac113064a9c139fa8eb8e2c20f42a9cb3</Anchor>
    <Abstract>Create a symmetrical perspective projection, See OpenGL gluPerspective documentation for further deta...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProjectionMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a41b2e3cf1378b6e5e0dce98d5f5c9cc3</Anchor>
    <Abstract>Get the projection matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProjectionMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>ac974f00deba97bd8f03e0544dceaa16c</Anchor>
    <Abstract>Get the const projection matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProjectionMatrixAsOrtho</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a7f85cda6f4f1570d35682d78db4d7134</Anchor>
    <Abstract>Get the orthographic settings of the orthographic projection matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProjectionMatrixAsFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a4eb73173e1568cc8c6f9b673f86a3721</Anchor>
    <Abstract>Get the frustum setting of a perspective projection matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProjectionMatrixAsPerspective</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>ac56d63dcbcbca7dc1809e57c461a9a51</Anchor>
    <Abstract>Get the frustum setting of a symmetric perspective projection matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setViewMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a4196cf081f1e9e33a45698250fc3bdc9</Anchor>
    <Abstract>Set the view matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setViewMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a0432b21750d9c45d1d9550e9d2970b1a</Anchor>
    <Abstract>Set the view matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setViewMatrixAsLookAt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>ad9ef70da7016df621b20bd3414f63921</Anchor>
    <Abstract>Set to the position and orientation of view matrix, using the same convention as gluLookAt.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViewMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a6bf52bad3af0e091e3b30c46bb69a1b4</Anchor>
    <Abstract>Get the view matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViewMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>ae622476bb2d29bace43bd6aa897c714d</Anchor>
    <Abstract>Get the const view matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViewMatrixAsLookAt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a11a3589d534d64afc340b90980facfa3</Anchor>
    <Abstract>Get to the position and orientation of a modelview matrix, using the same convention as gluLookAt...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>collateReferencesToDependentCameras</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>ab0db15d1619e092341fe79dceba37ac0</Anchor>
    <Abstract>search through any pre and post RenderStage that reference a Camera, and take a reference to each of ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearReferencesToDependentCameras</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>ab049a76936b77d6c13211edd237fece7</Anchor>
    <Abstract>clear the refence to any any dependent cameras.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDrawBufferValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>aba837cc249a18771516d95a0e466aa2d</Anchor>
    <Abstract>Set the draw buffer value used at the start of each frame draw.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDrawBufferValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>abf0ab489f3efd32eb1289e1edbf43c33</Anchor>
    <Abstract>Get the draw buffer value used at the start of each frame draw.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPrioritizeTextures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>ac92ab809dff59d7bbb4d205c7c442419</Anchor>
    <Abstract>Set whether the draw method should call renderer-&amp;gt;prioritizeTexture.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPrioritizeTextures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a25b24638189c5cac57ff930f7ec25402</Anchor>
    <Abstract>Get whether the draw method should call renderer-&amp;gt;prioritizeTexture.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>projectWindowIntoObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>ac8dd2ed1430fa6ac59d904da2fc8aa79</Anchor>
    <Abstract>Calculate the object coordinates of a point in window coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>projectWindowXYIntoObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a9f3fc3780c5468a84658a43bf3a734fb</Anchor>
    <Abstract>Calculate the object coordinates of a window x,y when projected onto the near and far planes...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>projectObjectIntoWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a9422c20cfb5a1de58b1a9af9cfd7ea14</Anchor>
    <Abstract>Calculate the window coordinates of a point in object coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameStamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a0f8136e8702bc7a80a3799a622fce26d</Anchor>
    <Abstract>Set the frame stamp for the current frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameStamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>adedc36c97a15bb93f6e5bb5ab9dc7ef2</Anchor>
    <Abstract>Get the frame stamp for the current frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inheritCullSettings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a4813c282cc63d31b17abf1ccb015d08d</Anchor>
    <Abstract>Inherit the local cull settings variable from specified CullSettings object, according to the inherit...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inheritCullSettings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a1ac9cdb1a1d05dd36265be82618e3a8b</Anchor>
    <Abstract>Inherit the local cull settings variable from specified CullSettings object, according to the inherit...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>acd5aaeeb0593b1d24d15340f4456e7f4</Anchor>
    <Abstract>Do init traversal of attached scene graph using Init NodeVisitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cull</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a2a8d4dd6fe81faec1d1e8a1854169221</Anchor>
    <Abstract>Do cull traversal of attached scene graph using Cull NodeVisitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>draw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>aa60d2660fd296096da011b898891c237</Anchor>
    <Abstract>Do draw traversal of draw bins generated by cull traversal.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDynamicObjectCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>ae5f29288316e5ba56a878dad3d74a174</Anchor>
    <Abstract>Compute the number of dynamic objects that will be held in the rendering backend.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseAllGLObjects</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a918c57900356ca9c2209cd2e311abe89</Anchor>
    <Abstract>Release all OpenGL objects from the scene graph, such as texture objects, display lists etc...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flushAllDeletedGLObjects</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a2756bcd898d6f8d83914eb4906c11fff</Anchor>
    <Abstract>Flush all deleted OpenGL objects, such as texture objects, display lists etc.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flushDeletedGLObjects</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a0691ec1d51f8bf07c9c6227c0b2ae500</Anchor>
    <Abstract>Flush deleted OpenGL objects, such as texture objects, display lists etc within specified available t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>a95e9ffd41243283efa78634e5a9e6df7</Anchor>
    <Abstract>Extract stats for current draw list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cullStage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::SceneView</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1SceneView.html</Path>
    <Anchor>ad3bac6c25f90c56d1e93b4d787f558d6</Anchor>
    <Abstract>Do cull traversal of attached scene graph using Cull NodeVisitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>osgScaleViewer::Window</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>osgScaleViewer::Window</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Window.html</Path>
    <Abstract>A window represents an OpenGL drawable and context.</Abstract>
    <DeclaredIn>window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Window</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Window.html</Path>
    <Anchor>a06ac7b156f5c5113d62e3fb4048d780d</Anchor>
    <Abstract>Construct a new window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Window</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Window.html</Path>
    <Anchor>a43e15616436c74c140ea92393ac02eff</Anchor>
    <Abstract>Destruct the window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configInitGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Window</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Window.html</Path>
    <Anchor>ad1a4c28ed8f16480b58a646390bdaec2</Anchor>
    <Abstract>Initialize the OpenGL state for this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>configExitGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>osgScaleViewer::Window</Scope>
    </TokenIdentifier>
    <Path>classosgScaleViewer_1_1Window.html</Path>
    <Anchor>a5a3889cfb00df52dc0ade7f122bb1d8d</Anchor>
    <Abstract>De-initialize the OpenGL state for this window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seq</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>seq</Scope>
    </TokenIdentifier>
    <Path>namespaceseq.html</Path>
    <Abstract>Sequel - A simple interface to the Equalizer parallel rendering framework.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initErrors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>seq</Scope>
    </TokenIdentifier>
    <Path>namespaceseq.html</Path>
    <Anchor>a722a06a537d8774394dd3c129f4872fd</Anchor>
    <Abstract>Set up Sequel-specific error codes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitErrors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>seq</Scope>
    </TokenIdentifier>
    <Path>namespaceseq.html</Path>
    <Anchor>a96de08e505674c076e156ad4f1a3abb0</Anchor>
    <Abstract>Clear Sequel-specific error codes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OBJECTTYPE_INITDATA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>seq</Scope>
    </TokenIdentifier>
    <Path>namespaceseq.html</Path>
    <Anchor>a1c6086b05a1be12cfe02c8245b650ed4a0a434a5cd4d786278c0545e2decdb3cb</Anchor>
    <Abstract>The object passed to Application::init()</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OBJECTTYPE_FRAMEDATA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>seq</Scope>
    </TokenIdentifier>
    <Path>namespaceseq.html</Path>
    <Anchor>a1c6086b05a1be12cfe02c8245b650ed4a50972212269b5e46e645fd119ba156cc</Anchor>
    <Abstract>The object passed to Application::run()</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OBJECTTYPE_MODELMATRIX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>seq</Scope>
    </TokenIdentifier>
    <Path>namespaceseq.html</Path>
    <Anchor>a1c6086b05a1be12cfe02c8245b650ed4aaf4fb6bc99745f7847abe01dc3a70eec</Anchor>
    <Abstract>Per-view global model transformation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OBJECTTYPE_CUSTOM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>seq</Scope>
    </TokenIdentifier>
    <Path>namespaceseq.html</Path>
    <Anchor>a1c6086b05a1be12cfe02c8245b650ed4a769f13f53bdbea89a0cf0dcfc86e8c8f</Anchor>
    <Abstract>Application-specific objects.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seq::Application</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Application.html</Path>
    <Abstract>The main application object.</Abstract>
    <DeclaredIn>application.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Application</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Application.html</Path>
    <Anchor>a439e68167f324c6a922a56f919abdef3</Anchor>
    <Abstract>Construct a new application instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Application</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Application.html</Path>
    <Anchor>afcc1ba9e6820613dad7f2bff7e4c4c94</Anchor>
    <Abstract>Destruct this application instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMasterNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Application.html</Path>
    <Anchor>a85b039eab99b228ff6dbc5ed69cf7b92</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Application.html</Path>
    <Anchor>af0b17856709596b2c7896d9722ab2070</Anchor>
    <Abstract>Initialize the application instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Application.html</Path>
    <Anchor>a8231549b82f84ffe9aaca60564219c94</Anchor>
    <Abstract>Run the application main loop.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Application.html</Path>
    <Anchor>ac64eece999a2f25a83d8eceeaa7be0a4</Anchor>
    <Abstract>Exit this application instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Application.html</Path>
    <Anchor>a450118b11e3eeb00edccc2a5b6cc1126</Anchor>
    <Abstract>Request that the application leaves its run loop.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clientInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Application.html</Path>
    <Anchor>ae0df51932e99913e2a2e09ca6d133899</Anchor>
    <Abstract>Initialize a render client.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clientExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Application.html</Path>
    <Anchor>ad6bc75f9f678e74f1bfa07ecf3cb2344</Anchor>
    <Abstract>Exit a render client.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Application.html</Path>
    <Anchor>a5db9b1bc45dcba01af2e9ade3e4f7d63</Anchor>
    <Abstract>Create a new renderer instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Application.html</Path>
    <Anchor>a490dcfd4f8e9729a03f5d0145c93edae</Anchor>
    <Abstract>Delete the given renderer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createViewData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Application.html</Path>
    <Anchor>a54779f8bf6982fbb6ced528389f40e86</Anchor>
    <Abstract>Create a new per-view data instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyViewData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Application</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Application.html</Path>
    <Anchor>a25ca881b0137e4000799a10ff834f6e3</Anchor>
    <Abstract>Delete the given view data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seq::Renderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Renderer.html</Path>
    <Abstract>A renderer instance.</Abstract>
    <DeclaredIn>renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Renderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Renderer.html</Path>
    <Anchor>ab13afa61b9078fef9dfe0e7b12452914</Anchor>
    <Abstract>Construct a new renderer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Renderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Renderer.html</Path>
    <Anchor>ac04dae3fa17e4dd8f2fa7e69de38f51a</Anchor>
    <Abstract>Destruct this renderer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Renderer.html</Path>
    <Anchor>a52cb957d60416947b924d186f289b0d6</Anchor>
    <Abstract>Initialize the renderer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Renderer.html</Path>
    <Anchor>a46914118c38fa6fb4c2bd97b9fd56833</Anchor>
    <Abstract>De-initialize the renderer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Renderer.html</Path>
    <Anchor>a217a1849c5822578dada9ce6baea421b</Anchor>
    <Abstract>Initialize an OpenGL context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Renderer.html</Path>
    <Anchor>af23fc0b2e9486ac4e933fcf767dbd8b6</Anchor>
    <Abstract>De-initialize an OpenGL context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Renderer.html</Path>
    <Anchor>a5e6fdc6b3df7028c79c394b720b8288e</Anchor>
    <Abstract>Clear the frame buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>draw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Renderer.html</Path>
    <Anchor>a2b111a25986bb48f35a1e9cd3afa664b</Anchor>
    <Abstract>Render the scene.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyRenderContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Renderer.html</Path>
    <Anchor>ae735562c7d70c0e08c6765021ca020a9</Anchor>
    <Abstract>Apply the current rendering parameters to OpenGL.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyModelMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Renderer.html</Path>
    <Anchor>afaa869c23beaea5295c3df639e40d75f</Anchor>
    <Abstract>Apply the current model matrix to OpenGL.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getApplication</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Renderer.html</Path>
    <Anchor>a85dbac178ee40b8ecc666fc563bdd6c6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getApplication</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Renderer.html</Path>
    <Anchor>aef35309931a8e72baf9e034d37a0d693</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createViewData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Renderer.html</Path>
    <Anchor>a2eedd7d667ace780b8ab87e03ce81e48</Anchor>
    <Abstract>Create a new per-view data instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyViewData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Renderer.html</Path>
    <Anchor>a8fa59bf002f63309ed62945c4f833c4c</Anchor>
    <Abstract>Delete the given view data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Renderer.html</Path>
    <Anchor>a36669f734c07968cf7a7dc42b1dd4481</Anchor>
    <Abstract>Get the GLEW context for this renderer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Renderer.html</Path>
    <Anchor>a34171172def45b593f66f36e296842c5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViewMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Renderer.html</Path>
    <Anchor>a416d8b7614cb46fdf877b57417e2b166</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getModelMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Renderer.html</Path>
    <Anchor>a3e80759957885eef06dbc6967e73fa2d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Renderer.html</Path>
    <Anchor>a3ed8634b8be2db2b99a95fb28d62145d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroyObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1Renderer.html</Path>
    <Anchor>a3a59048b3cbb58507e83822587fecc30</Anchor>
    <Abstract>Delete the given object of the given type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seq::ViewData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1ViewData.html</Path>
    <Abstract>Stores per-view data.</Abstract>
    <DeclaredIn>viewData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ViewData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1ViewData.html</Path>
    <Anchor>ad379bbd1bdfa111466779d8d3c9d1574</Anchor>
    <Abstract>Construct a new view data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ViewData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1ViewData.html</Path>
    <Anchor>a7f396b582cf226ff0d6a1a424ac144b1</Anchor>
    <Abstract>Destruct this view data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useOrtho</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1ViewData.html</Path>
    <Anchor>a1ed2238e07405faf0f0c1dfe9c5290e2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1ViewData.html</Path>
    <Anchor>a58fb5827b3d6c39d25451d4bd9fd4a6f</Anchor>
    <Abstract>Handle the given event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spinModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1ViewData.html</Path>
    <Anchor>ab9951f6f2d2b76e2143505461b74cb03</Anchor>
    <Abstract>Rotate the model matrix by the given increments.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1ViewData.html</Path>
    <Anchor>a42a928bbc778d31618203133af031ebf</Anchor>
    <Abstract>Move the model matrix by the given increments.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1ViewData.html</Path>
    <Anchor>af00cbd25eac035ad26c9c4c32d3c9601</Anchor>
    <Abstract>Enable or disable statistics rendering.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrtho</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1ViewData.html</Path>
    <Anchor>aea12e19b19415a9c4c4bb35b122b690f</Anchor>
    <Abstract>Enable or disable orthographic rendering.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1ViewData.html</Path>
    <Anchor>af897778a5d704994d3610b478a102f2c</Anchor>
    <Abstract>Update the view data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getModelMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1ViewData.html</Path>
    <Anchor>a0f20719cd3ad2d0044fb3eebdb865ed5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1ViewData.html</Path>
    <Anchor>a8a06911cc821586fee8d4a83e10f4c61</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1ViewData.html</Path>
    <Anchor>af7a2ea55371867c517e38ff82a89ffd3</Anchor>
    <Abstract>Worker for pack() and getInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seq::ViewData</Scope>
    </TokenIdentifier>
    <Path>classseq_1_1ViewData.html</Path>
    <Anchor>a34a8508cab06f0470787e5fecba06def</Anchor>
    <Abstract>Worker for unpack() and applyInstanceData().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seqPly</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>seqPly</Scope>
    </TokenIdentifier>
    <Path>namespaceseqPly.html</Path>
    <Abstract>The Sequel polygonal rendering example.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seqPly::Renderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>seqPly::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseqPly_1_1Renderer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Renderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seqPly::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseqPly_1_1Renderer.html</Path>
    <Anchor>a81d9da89c08c38a383f9b84cb9410323</Anchor>
    <Abstract>Construct a new renderer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Renderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seqPly::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseqPly_1_1Renderer.html</Path>
    <Anchor>a64e4e33feca5295feb13879309bef1e2</Anchor>
    <Abstract>Destruct this renderer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seqPly::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseqPly_1_1Renderer.html</Path>
    <Anchor>ad2683d89089397187ab8fcbbf70ba1b2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seqPly::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseqPly_1_1Renderer.html</Path>
    <Anchor>af867be01525b0a3f5bba181394755248</Anchor>
    <Abstract>Initialize the renderer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seqPly::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseqPly_1_1Renderer.html</Path>
    <Anchor>a8f7c0c545a381dcc49c55f5f52559d97</Anchor>
    <Abstract>De-initialize the renderer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>draw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seqPly::Renderer</Scope>
    </TokenIdentifier>
    <Path>classseqPly_1_1Renderer.html</Path>
    <Anchor>a527310c2632f5560ef5adc742cca74b3</Anchor>
    <Abstract>Render the scene.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seqPly::Application</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>seqPly::Application</Scope>
    </TokenIdentifier>
    <Path>classseqPly_1_1Application.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Application</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seqPly::Application</Scope>
    </TokenIdentifier>
    <Path>classseqPly_1_1Application.html</Path>
    <Anchor>af5aa658be4835778aecc579acbc04114</Anchor>
    <Abstract>Construct a new application instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Application</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seqPly::Application</Scope>
    </TokenIdentifier>
    <Path>classseqPly_1_1Application.html</Path>
    <Anchor>a8da4200afafe7053fa4d5abf27674e00</Anchor>
    <Abstract>Destruct this application instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seqPly::Application</Scope>
    </TokenIdentifier>
    <Path>classseqPly_1_1Application.html</Path>
    <Anchor>a0474771dbc385d55e00e7e72d764dff3</Anchor>
    <Abstract>Exit this application instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seqPly::Application</Scope>
    </TokenIdentifier>
    <Path>classseqPly_1_1Application.html</Path>
    <Anchor>a0086326719e88544f160082ecc8b22b8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>seqPly::Application</Scope>
    </TokenIdentifier>
    <Path>classseqPly_1_1Application.html</Path>
    <Anchor>a40ab19c592b19fd9c497f01e9e376ff4</Anchor>
    <Abstract>Create a new renderer instance.</Abstract>
  </Token>
</Tokens>
