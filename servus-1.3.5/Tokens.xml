<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>Strings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>servus</Scope>
    </TokenIdentifier>
    <Path>namespaceservus.html</Path>
    <Anchor>ad45a52e8c476244a51debbe0e50bedc4</Anchor>
    <Abstract>A vector of std::strings.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>servus</Scope>
    </TokenIdentifier>
    <Path>namespaceservus.html</Path>
    <Anchor>a987433ae40ed7fe19e359afb64e9d9c1</Anchor>
    <Abstract>A const iterator over Strings.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>servus</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>servus</Scope>
    </TokenIdentifier>
    <Path>namespaceservus.html</Path>
    <Abstract>Simple C++ wrapper for ZeroConf key/value pairs.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Strings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>servus</Scope>
    </TokenIdentifier>
    <Path>namespaceservus.html</Path>
    <Anchor>ad45a52e8c476244a51debbe0e50bedc4</Anchor>
    <Abstract>A vector of std::strings.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StringsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>servus</Scope>
    </TokenIdentifier>
    <Path>namespaceservus.html</Path>
    <Anchor>a987433ae40ed7fe19e359afb64e9d9c1</Anchor>
    <Abstract>A const iterator over Strings.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IF_ALL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>servus</Scope>
    </TokenIdentifier>
    <Path>namespaceservus.html</Path>
    <Anchor>a6ac756b24846ae46123f1ec2682aadefa2cda4c7e57de6a348ea1b869ac9ce1d5</Anchor>
    <Abstract>use all interfaces</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IF_LOCAL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>servus</Scope>
    </TokenIdentifier>
    <Path>namespaceservus.html</Path>
    <Anchor>a6ac756b24846ae46123f1ec2682aadefaa896e5f0d277d6c6687b80ef13f94244</Anchor>
    <Abstract>only local interfaces</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>servus::Service</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>servus::Service</Scope>
    </TokenIdentifier>
    <Path>classservus_1_1Service.html</Path>
    <Abstract>A handle for a ZeroConf service.</Abstract>
    <DeclaredIn>service.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Service</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>servus::Service</Scope>
    </TokenIdentifier>
    <Path>classservus_1_1Service.html</Path>
    <Anchor>a8f6d8871a71ce266cabc5b92c9d5cf6f</Anchor>
    <Abstract>Create a new service handle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Service</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>servus::Service</Scope>
    </TokenIdentifier>
    <Path>classservus_1_1Service.html</Path>
    <Anchor>a335708aeb5cd2a9e48502b2383cbe1fb</Anchor>
    <Abstract>Destruct this service.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>servus::Service</Scope>
    </TokenIdentifier>
    <Path>classservus_1_1Service.html</Path>
    <Anchor>a467a71ecc798cea5e8a3e0792f0d61d5</Anchor>
    <Abstract>Set a key/value pair to be announced.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>announce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>servus::Service</Scope>
    </TokenIdentifier>
    <Path>classservus_1_1Service.html</Path>
    <Anchor>a8fad30e4c3ed0c1c0f13fbf88271ba9e</Anchor>
    <Abstract>Start announcing the registered key/value pairs.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withdraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>servus::Service</Scope>
    </TokenIdentifier>
    <Path>classservus_1_1Service.html</Path>
    <Anchor>a6e809bf24d71b6f2ae24a6099da13eb0</Anchor>
    <Abstract>Stop announcing the registered key/value pairs.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAnnounced</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>servus::Service</Scope>
    </TokenIdentifier>
    <Path>classservus_1_1Service.html</Path>
    <Anchor>aed35a86667b6ace24b1f95f571b85bd7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>discover</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>servus::Service</Scope>
    </TokenIdentifier>
    <Path>classservus_1_1Service.html</Path>
    <Anchor>a0fee435f3eecf95e25ba932dcca24472</Anchor>
    <Abstract>Discover all announced key/value pairs.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInstances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>servus::Service</Scope>
    </TokenIdentifier>
    <Path>classservus_1_1Service.html</Path>
    <Anchor>af84f941b1ed4dd42d670cad52b13e72e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeys</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>servus::Service</Scope>
    </TokenIdentifier>
    <Path>classservus_1_1Service.html</Path>
    <Anchor>a16de215a9a7d80e164d0e5725a5e1227</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>servus::Service</Scope>
    </TokenIdentifier>
    <Path>classservus_1_1Service.html</Path>
    <Anchor>a24a7f0f920c1fba359957110f270cc11</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>servus::Service</Scope>
    </TokenIdentifier>
    <Path>classservus_1_1Service.html</Path>
    <Anchor>ac1f62a741d8c78be0f51555869ef4711</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>servus::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>servus::Version</Scope>
    </TokenIdentifier>
    <Path>classservus_1_1Version.html</Path>
    <Abstract>Information about the current servus version.</Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>servus::Version</Scope>
    </TokenIdentifier>
    <Path>classservus_1_1Version.html</Path>
    <Anchor>a8e2a5e01daa4a940bbe33f968fda38a8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>servus::Version</Scope>
    </TokenIdentifier>
    <Path>classservus_1_1Version.html</Path>
    <Anchor>a1b50986d6c24267fe65ee3039a7ae865</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>servus::Version</Scope>
    </TokenIdentifier>
    <Path>classservus_1_1Version.html</Path>
    <Anchor>af5adec8dc8ca4ebee303a0456cebefce</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>servus::Version</Scope>
    </TokenIdentifier>
    <Path>classservus_1_1Version.html</Path>
    <Anchor>a5bc48216002f686b422ea291f3680403</Anchor>
  </Token>
</Tokens>
