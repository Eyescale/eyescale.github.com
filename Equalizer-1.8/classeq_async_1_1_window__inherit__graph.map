<map id="eqAsync::Window" name="eqAsync::Window">
<area shape="rect" id="node2" href="$classeq_1_1_window.html" title="A Window represents an on&#45;screen or off&#45;screen drawable. " alt="" coords="79,1643,299,3069"/>
<area shape="rect" id="node3" href="$classeq_1_1fabric_1_1_window.html" title="{eq::fabric::Window\l\&lt; Pipe, Window, Channel,\l WindowSettings \&gt;\n||+ getPath()\l+ init()\l+ getPipe()\l+ getPipe()\l+ getChannels()\l+ getDrawableConfig()\l+ getPixelViewport()\l+ getViewport()\l+ setName()\l+ setPixelViewport()\l+ setViewport()\l+ hasFixedViewport()\l+ notifyViewportChanged()\l+ accept()\l+ accept()\l+ backup()\l+ restore()\l+ create()\l+ release()\l+ output()\l+ commit()\l# Window()\l# ~Window()\l# attach()\l# serialize()\l# deserialize()\l# notifyDetach()\l# setDirty()\l# _setDrawableConfig()\l# getChangeType()\l# _findChannel()\l# getRedistributableBits()\l* init()\l* getPipe()\l* getPipe()\l* getChannels()\l* getDrawableConfig()\l* getPixelViewport()\l* getViewport()\l* setName()\l* setPixelViewport()\l* setViewport()\l* hasFixedViewport()\l* notifyViewportChanged()\l* accept()\l* accept()\l* setSettings()\l* getSettings()\l* setIAttribute()\l* getIAttribute()\l* getIAttributeString()\l* backup()\l* restore()\l* create()\l* release()\l* output()\l* commit()\l}" alt="" coords="5,667,185,1595"/>
<area shape="rect" id="node4" href="$classeq_1_1fabric_1_1_object.html" title="Internal base class for all distributed, inheritable Equalizer objects. " alt="" coords="13,131,177,619"/>
<area shape="rect" id="node6" href="$classeq_1_1_notifier_interface.html" title="A base class for notifying errors and events. " alt="" coords="210,1077,354,1184"/>
</map>
