digraph "lunchbox::Request&lt; T &gt;"
{
  edge [fontname="Sans",fontsize="10",labelfontname="Sans",labelfontsize="10"];
  node [fontname="Sans",fontsize="10",shape=record];
  Node1 [label="{lunchbox::Request\< T \>\n||+ Request()\l+ ~Request()\l+ getID()\l+ relinquish()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Sans"];
  Node2 [label="{lunchbox::Future\< T \>\n||+ Future()\l+ ~Future()\l+ wait()\l+ isReady()\l+ operator bool_t()\l+ operator!()\l+ operator==()\l+ operator!=()\l+ operator\<()\l+ operator\>()\l+ operator\<=()\l+ operator\>=()\l* operator bool_t()\l* operator!()\l* operator==()\l* operator!=()\l* operator\<()\l* operator\>()\l* operator\<=()\l* operator\>=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlunchbox_1_1_future.html",tooltip="A future represents a asynchronous operation. "];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #impl_" ,arrowhead="odiamond",fontname="Sans"];
  Node3 [label="{lunchbox::RefPtr\< Future\lImpl\< T \> \>\n||+ RefPtr()\l+ RefPtr()\l+ RefPtr()\l+ RefPtr()\l+ ~RefPtr()\l+ operator=()\l+ operator=()\l+ operator==()\l+ operator==()\l+ operator!=()\land 12 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlunchbox_1_1_ref_ptr.html"];
}
