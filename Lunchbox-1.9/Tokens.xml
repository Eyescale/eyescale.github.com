<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_VERSION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>a1d51ce5f0244528aa917bc49d6028dec</Anchor>
    <Abstract>The version of the Compressor API described by this header. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_VERSION_1</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>a73e3544bef283514b5404cfd8504c9b7</Anchor>
    <Abstract>At least version 1 of the Compressor API is described by this header. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_VERSION_2</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>ac88609b538391219e61844e3ecc70ce2</Anchor>
    <Abstract>At least version 2 of the Compressor API is described by this header. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_VERSION_3</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>ab04beacee20a7cf909636b812b30636e</Anchor>
    <Abstract>At least version 3 of the Compressor API is described by this header. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_VERSION_4</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>a3c26ccbaebc9e79490f1ec459051cd39</Anchor>
    <Abstract>At least version 4 of the Compressor API is described by this header. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_INPLACE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>a173cd0cc6074e479774efaf9866764c7</Anchor>
    <Abstract>The compressor can (query time) or should (compress) write the compressed data in the same place as t...</Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATA_1D</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>a236e333245c13d38f69f04f3d8c576f8</Anchor>
    <Abstract>The compressor can handle linear data (query time), or the input data is linear (compress, decompress). </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATA_2D</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>af91c63c27e93c17d87ab66e9242cc6ed</Anchor>
    <Abstract>The compressor can handle two-dimensional data (query time), or the input data is two-dimensional (co...</Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_IGNORE_ALPHA</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>a41f698f99a730b71794407af791425d1</Anchor>
    <Abstract>The compressor can, does or should drop the alpha channel. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_IGNORE_MSE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>ac1e582b8b405b1d441c94077899cb587</Anchor>
    <Abstract>Deprecated. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CPU</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>a311a438e742d0a2c6863d52e3d3918ea</Anchor>
    <Abstract>The compressor is a CPU compressor. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_TRANSFER</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>ab9cdfbb7d31237c83b4faeae6a11bb0d</Anchor>
    <Abstract>The compressor is a CPU-GPU transfer engine. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_USE_TEXTURE_RECT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>a95c653f27f6f6ce1501f3362bb81ccf1</Anchor>
    <Abstract>Capability to use a GL_TEXTURE_RECTANGLE_ARB texture as source or destination. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_USE_TEXTURE_2D</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>a631f4e55fc0fd01586027dd03d898c4c</Anchor>
    <Abstract>Capability to use a GL_TEXTURE_2D texture as source or destination. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_USE_FRAMEBUFFER</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>af38c4f877c9393e7bcaa3a4e04eb54a8</Anchor>
    <Abstract>Capability to use the frame buffer as source or destination. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_USE_ASYNC_DOWNLOAD</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>ae99a5deb5d129f5cdc4839f5543d5510</Anchor>
    <Abstract>Capability to use asynchronous downloads. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorGetNumCompressors</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>ae52553ae282ce687cca471bbdfb233fb</Anchor>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorGetInfo</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>a777d0298b72d8aa6838607dc2144eb07</Anchor>
    <Abstract>Query information of the nth compressor in the DSO. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorNewCompressor</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>a5e7c2180cffa2dd75bbbf337315629dc</Anchor>
    <Abstract>Instantiate a new compressor or a new downloader. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorDeleteCompressor</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>a4af897a56b806583b5c4b093446e07c5</Anchor>
    <Abstract>Release a compressor or downloader instance. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorNewDecompressor</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>a3bdbfcd8f109347cfb600ad6df36f5bf</Anchor>
    <Abstract>Instantiate a new decompressor or a new uploader. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorDeleteDecompressor</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>ab34434eafc0cb92b0b898e9381593c09</Anchor>
    <Abstract>Release a decompressor instance. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorCompress</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>a9b57dfdccdb79bc01a3ca7c6d6cfff1a</Anchor>
    <Abstract>Compress data. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorGetNumResults</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>a3646188a0b27e50620ea1bf2ff2cfe87</Anchor>
    <Abstract>Return the number of results produced by the last compression. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorGetResult</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>ad1ffb6ee7db430b05413be0e8b920e07</Anchor>
    <Abstract>Return the ith result of the last compression. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorDecompress</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>a033a5642aec0832c6a603f9ed1b35520</Anchor>
    <Abstract>Decompress data. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorIsCompatible</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>a80ac98b11fc3a146c758871c024fda59</Anchor>
    <Abstract>Check if the compressor may be used with the current OpenGL context. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorDownload</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>a529e9fbf75442ee8d62c406898c1c8d1</Anchor>
    <Abstract>Transfer frame buffer data into main memory. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorStartDownload</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>a6ee01b34d4af891256d259ddf135fd5f</Anchor>
    <Abstract>Start transferring frame buffer data into main memory. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorFinishDownload</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>a60e5f2e0a8115dc01a19f0a14d7f5d85</Anchor>
    <Abstract>Finish transferring frame buffer data into main memory. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorUpload</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>plugins_2compressor_8h.html</Path>
    <Anchor>a60382962fabfbc0cc7180ff0c2f6f562</Anchor>
    <Abstract>Transfer data from main memory into GPU memory. </Abstract>
    <DeclaredIn>plugins/compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_NONE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>ada6cf176f24f340ee2fb086ea6811642</Anchor>
    <Abstract>Invalid data. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BYTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a64b4e32b9fc704d69c31467eddc8305d</Anchor>
    <Abstract>Data is processed in one-byte tokens. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_UNSIGNED</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a7bafbfaeb300e23b840698b0945dce1d</Anchor>
    <Abstract>Data is processed in four-byte tokens. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_HALF_FLOAT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a1405308ea9271a4d699b3592e7003574</Anchor>
    <Abstract>Data is processed in float16 tokens. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_FLOAT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a679b5eeb3c428c18de287fa8d37c0f37</Anchor>
    <Abstract>Data is processed in float32 tokens. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_3_BYTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>afb5fa363942ff9d54e18ac22034e4ebe</Anchor>
    <Abstract>Data is processed in three interleaved streams of one-byte tokens. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_4_BYTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a427ee2177eab3e19f2e6dc6584693a44</Anchor>
    <Abstract>Data is processed in four interleaved streams of one-byte tokens. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_3_HALF_FLOAT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>aa9ac8ac07856eedfabb3f1ca0b2b6bd4</Anchor>
    <Abstract>Data is processed in four interleaved streams of float16 tokens. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_4_HALF_FLOAT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a7c0e6c187471e75a9fb81d965fe657ba</Anchor>
    <Abstract>Data is processed in four interleaved streams of float16 tokens. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_3_FLOAT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a5d903ca8019c270163935ac36416ff72</Anchor>
    <Abstract>Data is processed in four interleaved streams of three float32 tokens. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_4_FLOAT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a741e423f0945b740a709886c8edec727</Anchor>
    <Abstract>Data is processed in four interleaved streams of four float32 tokens. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_3BYTE_1BYTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a74fb96927efc499af24122309a0225d3</Anchor>
    <Abstract>Data is processed in one 24 bit and one 8 bit interleaved streams. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGR10_A2</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>ac807efbb79730b1308f0e65c77bea006</Anchor>
    <Abstract>Data is processed in three 10-bit color tokens and one 2-bit alpha token. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGBA</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>af973712fd1d87a41f63327b882d3d001</Anchor>
    <Abstract>Data is processed in four interleaved streams of RGBA color of unsigned Byte tokens. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGBA_UINT_8_8_8_8_REV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a43d38ec44ec3454e8c4f58cfd113c12d</Anchor>
    <Abstract>Data is processed in four interleaved streams of RGBA color of unsigned byte tokens. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGBA16F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>af36e12369d957f31f2aec05f05bd6509</Anchor>
    <Abstract>Data is processed in four interleaved streams of RGBA color of half float tokens. ...</Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGBA32F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a4f00d0c46cee0db351b9df9e9c540aec</Anchor>
    <Abstract>Data is processed in four interleaved streams of RGBA color of float tokens. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGRA</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>ac5d9264420ac6dc85460dda13be36752</Anchor>
    <Abstract>Data is processed in four interleaved streams of BGRA color of unsigned byte tokens. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGRA_UINT_8_8_8_8_REV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>af6bdacb06b19f9f2e0104dab58067c70</Anchor>
    <Abstract>Data is processed in four interleaved streams of BGRA color of unsigned byte tokens. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGRA16F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a80a0f25ea28ee20c11c89f0c6699f9fa</Anchor>
    <Abstract>Data is processed in four interleaved streams of BGRA color of half float tokens. ...</Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGRA32F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a920dc0fc8060055e0698f0f19a2579e5</Anchor>
    <Abstract>Data is processed in four interleaved streams of BGRA color of float tokens. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_DEPTH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a8270ad16682a229771fd36e794927a85</Anchor>
    <Abstract>Data is a (source) depth buffer. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_DEPTH_FLOAT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a1e3de6802c69bc5b77e1ae81cc15316e</Anchor>
    <Abstract>Data is processed in one stream of depth of float tokens. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_DEPTH_UNSIGNED_INT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>af57580a0b54c48dced48156442483840</Anchor>
    <Abstract>Data is processed in one stream of unsigned int depth tokens. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGB</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a9cf922644e8de8ea1aa605a9266971fd</Anchor>
    <Abstract>Data is processed in three interleaved streams of RGB unsigned byte color tokens. ...</Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGB16F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a0332606c3ed3428bca2be0dc0e591e9b</Anchor>
    <Abstract>Data is processed in three interleaved streams of RGB half float color tokens. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGB32F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a1c985e33f96291d3082ff1b711ccd955</Anchor>
    <Abstract>Data is processed in three interleaved streams of RGB float color tokens. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a4f4346088c2c271a2a7f992595d2caf3</Anchor>
    <Abstract>Data is processed in three interleaved streams of BGR unsigned byte color tokens. ...</Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGR16F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a9bd9cbbea615db69c8ef521f57018457</Anchor>
    <Abstract>Data is processed in three interleaved streams of BGR half float color tokens. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGR32F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>ad345388ba0ce33844b75b7f98174de9f</Anchor>
    <Abstract>Data is processed in three interleaved streams of BGR float color tokens. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_YUVA_50P</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>aff4c54efd0a8c62e87bb063cb7257ccf</Anchor>
    <Abstract>Data is processed in four interleaved streams of YUVA components. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGB10_A2</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a5828ee3eb373d45ffac14317d4ef8242</Anchor>
    <Abstract>Data is processed in three 10-bit color tokens and one 2-bit alpha token. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_INVALID</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a805f2f33c74caeeecc9c264ba9d338ce</Anchor>
    <Abstract>Invalid data type. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_PRIVATE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_tokens_8h.html</Path>
    <Anchor>a032965521e2f4f650c3ba695833514a7</Anchor>
    <Abstract>Private token types -FOR DEVELOPMENT ONLY-. </Abstract>
    <DeclaredIn>compressorTokens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_INVALID</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>aef61c477b34cce7af60e4f68547ecef6</Anchor>
    <Abstract>Invalid Compressor. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_NONE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a22000e8d4a4f298ee39a7bb819eecd9f</Anchor>
    <Abstract>No Compressor. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_UNSIGNED</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>aa22757fad44b0b5fb99ee7f965f26efd</Anchor>
    <Abstract>RLE compression of 4-byte tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_BYTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>accfd6805535e3ab63279c5627a75bc5e</Anchor>
    <Abstract>RLE compression of 1-byte tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_3_BYTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>ad11bfedd0116c7a2ba15cbb5058b952c</Anchor>
    <Abstract>RLE compression of three 1-byte tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_4_BYTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>acdefb599af7363fe8667c3a7d19c14af</Anchor>
    <Abstract>RLE compression of four 1-byte tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_4_FLOAT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a16ceec2bf512ac560feda7528e03b370</Anchor>
    <Abstract>RLE compression of four float32 tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_4_HALF_FLOAT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a52e0dc735af1d6d223cc1038a440ddcb</Anchor>
    <Abstract>RLE compression of four float16 tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DIFF_RLE_3_BYTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a0fd34429947d60c38b9942abe36d0c8b</Anchor>
    <Abstract>Differential RLE compression of three 1-byte tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DIFF_RLE_4_BYTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a68cf94d8fe07f36661120d34b4b74695</Anchor>
    <Abstract>Differential RLE compression of four 1-byte tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_4_BYTE_UNSIGNED</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a096face1d27d580098ce751e31381b43</Anchor>
    <Abstract>RLE compression of one 4-byte token. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_565</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a1e55ef7016fed1a0a2f7f6ea1860fe90</Anchor>
    <Abstract>Lossy Differential RLE compression. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_BGR10_A2</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>abad30f075e041679b6c88de59eb7a11c</Anchor>
    <Abstract>RLE compression of three token of 10-bits and one toke of 2-bits. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_4_HALF_FLOAT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a8fabd93cb366e4eb5dd954c37d7a96d8</Anchor>
    <Abstract>RLE compression of four float16 tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_YUVA_50P</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a0953ef6a5d11868f10cb1d194f38ebb4</Anchor>
    <Abstract>Differential RLE compression of YUV tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_YUVA_50P</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>ab02f18cf4c9d69424dddaa015de7241d</Anchor>
    <Abstract>RLE compression of YUV tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_RGBA</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a130550df2ede35efa9daa8e61e49c941</Anchor>
    <Abstract>Differential RLE compression of RGBA bytes tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_BGRA</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a8c76871866dd2cf4f5ee31cd0a8d3298</Anchor>
    <Abstract>Differential RLE compression of BGRA bytes tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_RGBA_UINT_8_8_8_8_REV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a31f04c45e86447fde26834005e21df9e</Anchor>
    <Abstract>Differential RLE compression of RGBA UINT_8_8_8_8_REV tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_BGRA_UINT_8_8_8_8_REV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>aa313031f21df17573fdc4bd2efdce28f</Anchor>
    <Abstract>Differential RLE compression of BGRA UINT_8_8_8_8_REV tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_DEPTH_UNSIGNED_INT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a0f751d4f135a07ef78a85953354e2349</Anchor>
    <Abstract>Differential RLE compression of DEPTH UNSIGNED INT tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_RGBA16F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>ad6001916c3275515a21b84fd0fe9746e</Anchor>
    <Abstract>RLE compression of RGBA half float tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_BGRA16F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a6999be62b1f4c742145964482a9ecbb1</Anchor>
    <Abstract>RLE compression of BGRA half float tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_RGBA16F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>aa68a9db9d073bf4495bddaf5f8df20d5</Anchor>
    <Abstract>Differential RLE compression of RGBA half float tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_BGRA16F</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>aa9c9a90589a991025fcf11c8609ea802</Anchor>
    <Abstract>Differential RLE compression of BGRA half float tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_565_RGBA</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a8b10016927ca23be31571be0cd51ee75</Anchor>
    <Abstract>Lossy Differential RLE compression of RGBA bytes tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_565_BGRA</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a68024febd695710409ab4c0b575c299d</Anchor>
    <Abstract>Lossy Differential RLE compression of RGBA bytes tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_565_RGBA_UINT_8_8_8_8_REV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a1c0ba3bd09f5e5f74822b3aa0abe29ca</Anchor>
    <Abstract>Lossy Differential RLE compression of RGBA UINT_8_8_8_8_REV tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_565_BGRA_UINT_8_8_8_8_REV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a1c3c68bb2d33a5e46a0c5c72fc7c52d3</Anchor>
    <Abstract>Lossy Differential RLE compression of BGRA UINT_8_8_8_8_REV tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_RGBA</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>ae288575133515166cf42f7817ddcf5f3</Anchor>
    <Abstract>RLE compression of RGBA bytes tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_BGRA</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>ae8736c8c414998d9c2b3d59120d65718</Anchor>
    <Abstract>RLE compression of BGRA bytes tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_RGBA_UINT_8_8_8_8_REV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>ad8fcbdde916c109b41b27b92c676094f</Anchor>
    <Abstract>RLE compression of RGBA UINT_8_8_8_8_REV tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_BGRA_UINT_8_8_8_8_REV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>ae8d2bed2cfd3ed2a8ab2f5ba79911042</Anchor>
    <Abstract>RLE compression of BGRA UINT_8_8_8_8_REV tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_RGB10_A2</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>abff56a1a521d5bc53f62fe2396c74a65</Anchor>
    <Abstract>RLE compression of RGBA 10_10_10_2 tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_BGR10_A2</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a1d521b403a46f68dbba84f76b6815217</Anchor>
    <Abstract>RLE compression of BGRA 10_10_10_2 tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DEPTH_UNSIGNED_INT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>aafceca2f5d9c36eb48c4579f449c2faa</Anchor>
    <Abstract>RLE compression of depth unsigned int tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_UNSIGNED</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a01c73b3fbdb53e66ddbb5b095405c238</Anchor>
    <Abstract>RLE compression of unsigned tokens. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_LZF_BYTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>ae5f156dbc7f8b603d77e097f82d1674e</Anchor>
    <Abstract>LZF compression of bytes. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_FASTLZ_BYTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>afa546c67ccdb40b3acc4ca67b05886b8</Anchor>
    <Abstract>LZF compression of bytes. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_SNAPPY_BYTE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a6d627672f69e14524b62f52cacbf8bd0</Anchor>
    <Abstract>Snappy compression of bytes. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_AUTO</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a9288c949d72e5e76763cb12b1e141b1d</Anchor>
    <Abstract>Automatic selection of compressor. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_AG_RTT_JPEG_HQ</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a9d31e6f66a6b4c29694f4aa0d1561c22</Anchor>
    <Abstract>Quasi-lossless CPU jpeg compressor from rtt.ag. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_AG_RTT_JPEG_MQ</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a3a3e25fc03848909b6486064e830d5cf</Anchor>
    <Abstract>Medium quality CPU jpeg compressor from rtt.ag. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_AG_RTT_JPEG_LQ</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a5730fcb20298e51e86e9e7920880a33e</Anchor>
    <Abstract>Low quality CPU jpeg compressor from rtt.ag. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_AG_RTT_JPEG_HQ_A</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a774b845b5be0b194a34a325b7c3af87d</Anchor>
    <Abstract>Quasi-lossless CPU jpeg compressor from rtt.ag retaining alpha. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_AG_RTT_JPEG_MQ_A</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>aa3238d3b3f5341b4f632627caa8ffe28</Anchor>
    <Abstract>Medium quality CPU jpeg compressor from rtt.ag retaining alpha. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_AG_RTT_JPEG_LQ_A</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a41eb32aeee2fba12f57f9b15a21bbd01</Anchor>
    <Abstract>Low quality CPU jpeg compressor from rtt.ag retaining alpha. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_RGBA100</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>aab04c57f8a75d0e79b11647a76d59fc7</Anchor>
    <Abstract>Eyescale quasi-lossless CPU jpeg RGBA compressor. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_RGBA90</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a8cc0749e2ca57ddbc6262e761ef91681</Anchor>
    <Abstract>Eyescale 90% quality CPU jpeg RGBA compressor. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_RGBA80</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a8b0c44ad9e4f2f0d61b2bb768f53f31d</Anchor>
    <Abstract>Eyescale 80% quality CPU jpeg RGBA compressor. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_BGRA100</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a5ccaf11754c89210272c664a7fff088d</Anchor>
    <Abstract>Eyescale quasi-lossless CPU jpeg BGRA compressor. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_BGRA90</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a0fbc14f882bd26a73325d3da6b6e8355</Anchor>
    <Abstract>Eyescale 90% quality CPU jpeg BGRA compressor. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_BGRA80</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a7957c30c7f1d9cb2389f1aabc6ac76ea</Anchor>
    <Abstract>Eyescale 80% quality CPU jpeg BGRA compressor. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_RGB100</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>ace11a52ad2781833928cdbdf33692c8f</Anchor>
    <Abstract>Eyescale quasi-lossless CPU jpeg RGB compressor. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_RGB90</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a3923f4ae63969e4868ce6de39a8d078a</Anchor>
    <Abstract>Eyescale 90% quality CPU jpeg RGB compressor. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_RGB80</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>aada794546f4932ee866c96ef8849639f</Anchor>
    <Abstract>Eyescale 80% quality CPU jpeg RGB compressor. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_BGR100</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a85abdd7930d22535bb1699940d75ff57</Anchor>
    <Abstract>Eyescale quasi-lossless CPU jpeg BGR compressor. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_BGR90</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>aee7f2d82ca8ec749936fd3ae619510f5</Anchor>
    <Abstract>Eyescale 90% quality CPU jpeg BGR compressor. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_BGR80</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a4d483c33b8d0c52d24ae905838fa9a28</Anchor>
    <Abstract>Eyescale 80% quality CPU jpeg BGR compressor. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_PRIVATE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_types_8h.html</Path>
    <Anchor>a0f41c834aeb373f89f0a74760a44adde</Anchor>
    <Abstract>Private types -FOR DEVELOPMENT ONLY-. </Abstract>
    <DeclaredIn>compressorTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LBERROR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>log_8h.html</Path>
    <Anchor>a92e4d12e3e46c1bfc6621841912c1244</Anchor>
    <Abstract>Output an error message to the per-thread Log stream. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LBWARN</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>log_8h.html</Path>
    <Anchor>aa6ce5b1840ab1d9bfc7fcc9a70b4ec07</Anchor>
    <Abstract>Output a warning message to the per-thread Log stream. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LBINFO</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>log_8h.html</Path>
    <Anchor>a4aa7eab491821715f6b2913196d60e92</Anchor>
    <Abstract>Output an informational message to the per-thread Log. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LBVERB</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>log_8h.html</Path>
    <Anchor>ae5bad30c3702f35f20e3b7d821884ec3</Anchor>
    <Abstract>Output a verbatim message to the per-thread Log stream. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LBLOG</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>log_8h.html</Path>
    <Anchor>affdf07fed2dd75e991e08606bd88eb68</Anchor>
    <Abstract>Output a message pertaining to a topic to the per-thread Log stream. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LBTHROW</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>log_8h.html</Path>
    <Anchor>a1c4f0781f02a5270cc9aa50217f74577</Anchor>
    <Abstract>Log a std::exception if topic LOG_EXCEPTION is set before throwing exception. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ab4ea924f4bdd8c6cff365ec08e059e72</Anchor>
    <Abstract>Increases the indentation level of the Log stream, causing subsequent lines to be intended by four ch...</Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exdent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a2fdbe25dbd0b91e5667835c469030d09</Anchor>
    <Abstract>Decrease the indentation level of the Log stream. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableFlush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ab98b61ed042caf0e51dc3c1526c6643f</Anchor>
    <Abstract>Disable flushing of the Log stream. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableFlush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ad4ce8b306d68a2766f1c1f0f928dd3ad</Anchor>
    <Abstract>Re-enable flushing of the Log stream. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forceFlush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ad555e60064d1e85a1fca5088c430843a</Anchor>
    <Abstract>Flush the Log stream regardless of the auto-flush state. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a506432da52fa6c13536a4d494c1d8e1d</Anchor>
    <Abstract>Disable printing of the Log header for subsequent lines. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aed866f9ec01058df16e51fcb4fa0eeb8</Anchor>
    <Abstract>Re-enable printing of the Log header. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startBlock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a42683bd6e840eaf1d77531a31e786f73</Anchor>
    <Abstract>Indent, disable flush and header for block printing. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopBlock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aee80b1ad913496843dca2a8e37d7d089</Anchor>
    <Abstract>Exdent, denable flush and header to stop block print. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usort</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>std_ext_8h.html</Path>
    <Anchor>a51d68f640f3cf2ae35561e3d71e37708</Anchor>
    <Abstract>MSVC. </Abstract>
    <DeclaredIn>stdExt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LB_UNDEFINED_UINT16</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>types_8h.html</Path>
    <Anchor>ab13e3fc319bb42e552f679425f0b3dd7</Anchor>
    <Abstract>A &amp;#39;NULL&amp;#39; value for an uint16. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LB_UNDEFINED_UINT32</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>types_8h.html</Path>
    <Anchor>a6c534b359ad7f231cc88d62cc8b48f3f</Anchor>
    <Abstract>A &amp;#39;NULL&amp;#39; value for an uint32. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LB_UNDEFINED_UINT64</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>types_8h.html</Path>
    <Anchor>a5fc3714d3be39f82194604200f0830ea</Anchor>
    <Abstract>A &amp;#39;NULL&amp;#39; value for an uint64. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LB_MAX_UINT32</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>types_8h.html</Path>
    <Anchor>a3b1b0b72ecd87e86483d8684aa2b9a0f</Anchor>
    <Abstract>The biggest usable value when using special uint32 values. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LB_TIMEOUT_INDEFINITE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>types_8h.html</Path>
    <Anchor>ad7fc29d236872f874fb81a43937dda7f</Anchor>
    <Abstract>Constant defining &amp;#39;wait forever&amp;#39; in methods with wait parameters. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LB_TIMEOUT_DEFAULT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>types_8h.html</Path>
    <Anchor>a14416b723284980c57259a8678935a50</Anchor>
    <Abstract>Constant defining use global default in methods with wait parameters. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LB_MAX</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>types_8h.html</Path>
    <Anchor>ad68ab8ea456ab30b7bdfe17ec3d4eb33</Anchor>
    <Abstract>returns the maximum of two values </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LB_MIN</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>types_8h.html</Path>
    <Anchor>a6a78ec50fe9d6fdf1efb293ba6a686bc</Anchor>
    <Abstract>returns the minimum of two values </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Strings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aea35aa9bfc7484de290c0ed0dbcfeceb</Anchor>
    <Abstract>A vector of std::strings. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>a_int32_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a4f4ba0a198a145a091514d20275f97bf</Anchor>
    <Abstract>An atomic 32 bit integer variable. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>a_ssize_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a836a09793d6520b6ac44485b20f5b438</Anchor>
    <Abstract>An atomic signed size variable. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Bufferb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>af4d147a89a2b79db1a733c657fb9944f</Anchor>
    <Abstract>a byte buffer </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>f_bool_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aa261b8f6ba5c537e45f28677aa2fc251</Anchor>
    <Abstract>A future with a boolean return value. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>f_uint32_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a11adc1062876dcfd282b2cbd6f887eda</Anchor>
    <Abstract>A future 32 bit unsigned promise. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>f_ssize_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a991aefd3c12460d03fe621fc1b1aa8d6</Anchor>
    <Abstract>A future signed size promise. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>f_void_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a6cf6ff7309d9a29cb2b479e4e75079a3</Anchor>
    <Abstract>A future signed size promise. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RelNotes</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>_rel_notes.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deprecated</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>deprecated.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bitops</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group__bitops.html</Path>
    <Abstract>Example: </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIndexOfLastBit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>group__bitops.html</Path>
    <Anchor>gae448417a963ee82fe4a16259336f9f8c</Anchor>
    <DeclaredIn>bitOperation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>byteswap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>group__bitops.html</Path>
    <Anchor>ga0aaebb5bbd8362dcdaa0b0b757f815fd</Anchor>
    <Abstract>Swap the byte order of the given value. </Abstract>
    <DeclaredIn>bitOperation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorInfo</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>struct_eq_compressor_info.html</Path>
    <Abstract>Information about one compressor. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>struct_eq_compressor_info.html</Path>
    <Anchor>a53a85431bc9f0e9a5d60141dc6562136</Anchor>
    <Abstract>The compressor API version used. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>struct_eq_compressor_info.html</Path>
    <Anchor>a3d2f2d44c8d175fc0791d2d058d899dd</Anchor>
    <Abstract>The type name of the compressor. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tokenType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>struct_eq_compressor_info.html</Path>
    <Anchor>ae848919427e79ef6073da9a483ebc793</Anchor>
    <Abstract>The input token type supported by the compressor. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capabilities</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>struct_eq_compressor_info.html</Path>
    <Anchor>ab0ddae05d1d45bab5d8db7962aac6302</Anchor>
    <Abstract>Capabilities supported by the compressor. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>struct_eq_compressor_info.html</Path>
    <Anchor>a0d21f4d6634b516c656a4f587a17d9e2</Anchor>
    <Abstract>Compression quality (1.0f: loss-less, &amp;lt;1.0f: lossy). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ratio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>struct_eq_compressor_info.html</Path>
    <Anchor>a3ab85c8d8bf4485e4f129ef54e2bd9a0</Anchor>
    <Abstract>Approximate compression ratio (sizeCompressed/sizeIn). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>struct_eq_compressor_info.html</Path>
    <Anchor>a5618cd8db6fca238c2f34d1fd6b64b32</Anchor>
    <Abstract>Approximate compression speed relative to BYTE_RLE. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputTokenType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>struct_eq_compressor_info.html</Path>
    <Anchor>a57640c08fee57277c73aeb72c2bb44e5</Anchor>
    <Abstract>The output token type of a plugin. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputTokenSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>struct_eq_compressor_info.html</Path>
    <Anchor>a9123aced0d007768c496fc7108ca051d</Anchor>
    <Abstract>The size of one output token in bytes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash&lt; lunchbox::uint128_t &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>hash&lt; lunchbox::uint128_t &gt;</Scope>
    </TokenIdentifier>
    <Path>structhash_3_01lunchbox_1_1uint128__t_01_4.html</Path>
    <Abstract>uint128_t hash function. </Abstract>
    <DeclaredIn>stdExt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Abstract>Abstraction layer and common utilities for multi-threaded programming. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>podTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a2ba706c975a11fa6736d4df7ca92f228</Anchor>
    <Abstract>List of supported POD types for lunchbox::Any serialization. </Abstract>
    <DeclaredIn>anySerialization.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Monitorb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a5b17ccd4a5baea475ece5b3f5528d7b7</Anchor>
    <Abstract>A boolean monitor variable. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Monitoru</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a9225c9132da8788f84a8ce137b57fc84</Anchor>
    <Abstract>An unsigned 32bit integer monitor. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedFastRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a38f2dd0d032969c1e99325b137151fbf</Anchor>
    <Abstract>A scoped mutex for a fast uncontended read operation. </Abstract>
    <DeclaredIn>scopedMutex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedFastWrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a0c118c0f203f0c74f28c771bb44323dc</Anchor>
    <Abstract>A scoped mutex for a fast uncontended write operation. </Abstract>
    <DeclaredIn>scopedMutex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a616d2b35671649b3bd000281c26af03a</Anchor>
    <Abstract>A scoped mutex for a read operation. </Abstract>
    <DeclaredIn>scopedMutex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedWrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ab8e3e9002decffb853f466e4fc24adc2</Anchor>
    <Abstract>A scoped mutex for a write operation. </Abstract>
    <DeclaredIn>scopedMutex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedCondition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>afa595b8617cdaca22a42f2adf6233aed</Anchor>
    <Abstract>A scoped mutex for a write operation on a condition. </Abstract>
    <DeclaredIn>scopedMutex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Strings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aea35aa9bfc7484de290c0ed0dbcfeceb</Anchor>
    <Abstract>A vector of std::strings. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>a_int32_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a4f4ba0a198a145a091514d20275f97bf</Anchor>
    <Abstract>An atomic 32 bit integer variable. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>a_ssize_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a836a09793d6520b6ac44485b20f5b438</Anchor>
    <Abstract>An atomic signed size variable. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Bufferb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>af4d147a89a2b79db1a733c657fb9944f</Anchor>
    <Abstract>a byte buffer </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>f_bool_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aa261b8f6ba5c537e45f28677aa2fc251</Anchor>
    <Abstract>A future with a boolean return value. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>f_uint32_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a11adc1062876dcfd282b2cbd6f887eda</Anchor>
    <Abstract>A future 32 bit unsigned promise. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>f_ssize_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a991aefd3c12460d03fe621fc1b1aa8d6</Anchor>
    <Abstract>A future signed size promise. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>f_void_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a6cf6ff7309d9a29cb2b479e4e75079a3</Anchor>
    <Abstract>A future signed size promise. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ac1069eddee61a1f3731e4817945e8209</Anchor>
    <Abstract>Find the element in the given vector. </Abstract>
    <DeclaredIn>algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a25048c45d085a1e5318051519517e1d6</Anchor>
    <Abstract>Find the element in the given vector. </Abstract>
    <DeclaredIn>algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ab006e6878d798df39eb9596c403ea0cc</Anchor>
    <Abstract>Find the element matching the predicate. </Abstract>
    <DeclaredIn>algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_if</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a3a5703f1c4536e749f067cf9f90f28b0</Anchor>
    <Abstract>Find the element matching the predicate. </Abstract>
    <DeclaredIn>algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a6b3e87e61194bd33e19790d79e581b73</Anchor>
    <Abstract>Uniquely sort and eliminate duplicates in a container. </Abstract>
    <DeclaredIn>algorithm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>any_cast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a7aea7913c27e87795ad4a2b9491e7dc4</Anchor>
    <Abstract>Retrieve the value stored in an Any including type checking. </Abstract>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>any_cast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a00ef0d2f1234fd9f4c31b9b3d226fbd4</Anchor>
    <Abstract>Retrieve the value stored in an Any including type checking. </Abstract>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>any_cast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ade30adb20a3f6620b60ab6047088f0ad</Anchor>
    <Abstract>Retrieve the value stored in an Any including type checking. </Abstract>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>any_cast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ad53cbc49981ed0a3c9cf88c1d5779764</Anchor>
    <Abstract>Retrieve the value stored in an Any including type checking. </Abstract>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsafe_any_cast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a38a14ba67cf704679d258d0329d69656</Anchor>
    <Abstract>Retrieve the value stored in an Any without type checking. </Abstract>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsafe_any_cast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a73a0eb6facd4906ce41bc36b1f1d382c</Anchor>
    <Abstract>Retrieve the value stored in an Any without type checking. </Abstract>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsafe_any_cast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a9d56defcb1c937b137906fb4cf795fed</Anchor>
    <Abstract>Retrieve the value stored in an Any without type checking. </Abstract>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsafe_any_cast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a55922c7c1c6fae5f6f380b2af8359b25</Anchor>
    <Abstract>Retrieve the value stored in an Any without type checking. </Abstract>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerTypelist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a6df8f7a30947140b28ee3faddd241448</Anchor>
    <Abstract>Registers the types from the given type list for serializing it inside a lunchbox::Any through the gi...</Abstract>
    <DeclaredIn>anySerialization.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serializeAny</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a4c1d7012d8d1926e531d2342276ae0c4</Anchor>
    <Abstract>Serializes the given object which can be a lunchbox::Any through the given archive type to/from the g...</Abstract>
    <DeclaredIn>anySerialization.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveAny</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a231d1c2eee1f3eb73aaabb9950e39410</Anchor>
    <Abstract>Saves the given object which can be a lunchbox::Any through the given archive type to/from the given ...</Abstract>
    <DeclaredIn>anySerialization.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadAny</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ae74a941f06e7a7c383a9e674a5f83d4b</Anchor>
    <Abstract>Loads the given object which can be a lunchbox::Any through the given archive type to/from the given ...</Abstract>
    <DeclaredIn>anySerialization.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>memoryBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aa8dcc0970325a4fd73b2d5decc7e06a8</Anchor>
    <Abstract>Perform a full memory barrier. </Abstract>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>memoryBarrierAcquire</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a03c7e124a13bd2f4fbd0640eba30e455</Anchor>
    <Abstract>Perform a load-with-acquire memory barrier. </Abstract>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>memoryBarrierRelease</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a850a24d6c1a39b7451529af5b3b482bb</Anchor>
    <Abstract>Perform a store-with-release memory barrier. </Abstract>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIndexOfLastBit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>group__bitops.html</Path>
    <Anchor>gae448417a963ee82fe4a16259336f9f8c</Anchor>
    <DeclaredIn>bitOperation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>byteswap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>group__bitops.html</Path>
    <Anchor>ga0aaebb5bbd8362dcdaa0b0b757f815fd</Anchor>
    <Abstract>Swap the byte order of the given value. </Abstract>
    <DeclaredIn>bitOperation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>daemonize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>afa143f2591789c65778038f95aa3c587</Anchor>
    <Abstract>Turn the calling process into a daemon. </Abstract>
    <DeclaredIn>daemon.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sysError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aec9c14a9fccca3462ee8731d27842ee9</Anchor>
    <Abstract>Print a textual description of the current system error. </Abstract>
    <DeclaredIn>debug.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sysError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>abf6e612decfbc53a7e8173aba5c78791</Anchor>
    <DeclaredIn>debug.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backtrace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ae589d176c1bd3694625b0afcb4d22e94</Anchor>
    <Abstract>Get the current call stack. </Abstract>
    <DeclaredIn>debug.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backtrace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a3efc310428d603fabf7697706638a1ab</Anchor>
    <Abstract>Print the current call stack. </Abstract>
    <DeclaredIn>debug.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>className</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ac28d8481881bf01ae4a9d61de07f968d</Anchor>
    <Abstract>Print the RTTI name of the given class. </Abstract>
    <DeclaredIn>debug.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>className</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a33c2e28150e3af1c376d9d7454aa4ea1</Anchor>
    <Abstract>Print the RTTI name of the given class. </Abstract>
    <DeclaredIn>debug.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>format</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ab4e8f1a56151c5147ae7752c313ec1c6</Anchor>
    <Abstract>Format the given array in a human-readable form. </Abstract>
    <DeclaredIn>debug.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>searchDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a6ac7e85fb2b640d5d73c1bd28b93a883</Anchor>
    <Abstract>Retrieve a list of files in a directory matching a boost::regex pattern. </Abstract>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aafe55d692ce643be71e9a636957bf8ab</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirname</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ab5aeb846f59cf5faabaea581f510729d</Anchor>
    <DeclaredIn>file.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>addfb414d13184d23aa1e7da80ca87b80</Anchor>
    <Abstract>Initialize the Lunchbox base classes. </Abstract>
    <DeclaredIn>init.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aeeabf5966e81d8453f3d49a1df3f7c2e</Anchor>
    <Abstract>De-initialize the Lunchbox base classes. </Abstract>
    <DeclaredIn>init.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a718c7a1b90dcf102e96ebf94ad44e984</Anchor>
    <Abstract>Output the vector and up to 256 items to the ostream. </Abstract>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aa0b59f28886629aed23b6e45d9950788</Anchor>
    <Abstract>Print the data to the given output stream. </Abstract>
    <DeclaredIn>lockable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ab4ea924f4bdd8c6cff365ec08e059e72</Anchor>
    <Abstract>Increases the indentation level of the Log stream, causing subsequent lines to be intended by four ch...</Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exdent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a2fdbe25dbd0b91e5667835c469030d09</Anchor>
    <Abstract>Decrease the indentation level of the Log stream. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableFlush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ab98b61ed042caf0e51dc3c1526c6643f</Anchor>
    <Abstract>Disable flushing of the Log stream. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableFlush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ad4ce8b306d68a2766f1c1f0f928dd3ad</Anchor>
    <Abstract>Re-enable flushing of the Log stream. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forceFlush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ad555e60064d1e85a1fca5088c430843a</Anchor>
    <Abstract>Flush the Log stream regardless of the auto-flush state. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a506432da52fa6c13536a4d494c1d8e1d</Anchor>
    <Abstract>Disable printing of the Log header for subsequent lines. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aed866f9ec01058df16e51fcb4fa0eeb8</Anchor>
    <Abstract>Re-enable printing of the Log header. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startBlock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a42683bd6e840eaf1d77531a31e786f73</Anchor>
    <Abstract>Indent, disable flush and header for block printing. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopBlock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aee80b1ad913496843dca2a8e37d7d089</Anchor>
    <Abstract>Exdent, denable flush and header to stop block print. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a840cd0fc7a87c0a6894543b5604941e1</Anchor>
    <Abstract>Print the monitor to the given output stream. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perThreadDelete</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a684a461c314e03b66095c8e70c610a1a</Anchor>
    <Abstract>Default PerThread destructor deleting the object. </Abstract>
    <DeclaredIn>perThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perThreadNoDelete</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a65b97169734b823f257d0e37f29bf84a</Anchor>
    <Abstract>Empty PerThread destructor. </Abstract>
    <DeclaredIn>perThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a5e634a75f53dc7a5ba418dadc8e26eb2</Anchor>
    <Abstract>Print the reference pointer to the given output stream. </Abstract>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a16a92d64dd67fa003c83d91f8eb80c5c</Anchor>
    <Abstract>Output the servus instance in human-readable format. </Abstract>
    <DeclaredIn>servus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sleep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a12172a8b66232f77c0c373ba70666bd2</Anchor>
    <Abstract>Sleep the current thread for a number of milliseconds. </Abstract>
    <DeclaredIn>sleep.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>acaadd2ca08d31ab2e79f37ceada18ca1</Anchor>
    <Abstract>Output the affinity setting in human-readable form. </Abstract>
    <DeclaredIn>thread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a00f6c759bb43480fb2260bb8e4d8b893</Anchor>
    <Abstract>Print the thread to the given output stream. </Abstract>
    <DeclaredIn>threadID.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a353cbc3167353070321e1108aa7eef3c</Anchor>
    <Abstract>ostream operator for 128 bit unsigned integers. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ab034a0cf699c8700689bfcde888ac3c0</Anchor>
    <Abstract>istream operator for 128 bit unsigned integers. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a25b174411d00d5c2c1aa25cd55a738e0</Anchor>
    <Abstract>Add a 64 bit value to a 128 bit value. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a53a0bf3a8fd02a8411152da87ed1c0db</Anchor>
    <Abstract>Add two 128 bit values. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a0654c68d13115d755ce89e978dad58e5</Anchor>
    <Abstract>Subtract a 64 bit value from a 128 bit value. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&amp;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>af072d337c0f9f89535e17b8dae5c4e01</Anchor>
    <Abstract>Bitwise and operation on two 128 bit values. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator|</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a96d624a6f24869b2ba2336815645f137</Anchor>
    <Abstract>Bitwise or operation on two 128 bit values. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_uint128</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a2bf60b0eb4737576505a404b129cba47</Anchor>
    <Abstract>Create a 128 bit integer based on a string. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_UUID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a94de31efc9fed4a5ab6c77d027e28836</Anchor>
    <Abstract>Construct a new 128 bit integer with a generated universally unique identifier. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_ERROR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ae68656dc67ec561fdc56a0f06f3bb99da872a7f262c105038340247a341de8c4d</Anchor>
    <Abstract>Output critical errors. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_WARN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ae68656dc67ec561fdc56a0f06f3bb99da7bda497438ca08d2edb7bf3fed525da9</Anchor>
    <Abstract>Output potentially critical warnings. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_INFO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ae68656dc67ec561fdc56a0f06f3bb99dae146d2ab02b18351aadceb180fac4b60</Anchor>
    <Abstract>Output informational messages. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_VERB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ae68656dc67ec561fdc56a0f06f3bb99da6c14877cc6a7c9e0667eabc23851d86c</Anchor>
    <Abstract>Be noisy. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_EXCEPTION</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a68115890651a788f5e8e38de12cc6682adabe255430653f57ca46749e73c00c22</Anchor>
    <Abstract>Log exception within LBTHROW. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_PLUGIN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a68115890651a788f5e8e38de12cc6682aba51991b2bf3aedce6bfb9240ed989ea</Anchor>
    <Abstract>Log plugin handling. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_CUSTOM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a68115890651a788f5e8e38de12cc6682a3b62a7d6b3fc0b0d52499cf839247209</Anchor>
    <Abstract>Log topics for other namespaces start here. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_ANY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a68115890651a788f5e8e38de12cc6682aaea6b56f6b96fa283b7cd52f0ff290e7</Anchor>
    <Abstract>Log all Lunchbox topics. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TRAVERSE_CONTINUE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aca78acf5551966f165963ad82d1adf55ae20fab5a481d9c70ad75aeb0718943ee</Anchor>
    <Abstract>continue the traversal </Abstract>
    <DeclaredIn>visitorResult.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TRAVERSE_TERMINATE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aca78acf5551966f165963ad82d1adf55a26dbc17a6354462cd98610242c693728</Anchor>
    <Abstract>abort the traversal </Abstract>
    <DeclaredIn>visitorResult.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TRAVERSE_PRUNE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aca78acf5551966f165963ad82d1adf55a5d37372e6aebd173927d49e263895233</Anchor>
    <Abstract>do not traverse current entity downwards </Abstract>
    <DeclaredIn>visitorResult.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Any</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Any</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_any.html</Path>
    <Abstract>A class which can hold instances of any type. </Abstract>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Any</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Any</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_any.html</Path>
    <Anchor>af76b1c02be8430c2a3b9b3410c8dc715</Anchor>
    <Abstract>Construct a new, empty Any. </Abstract>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Any</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Any</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_any.html</Path>
    <Anchor>a5f81419849314c276660e961781da57f</Anchor>
    <Abstract>Construct a new Any with the given value. </Abstract>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Any</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Any</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_any.html</Path>
    <Anchor>aed52e63269796f99cafc3c34791c2e1e</Anchor>
    <Abstract>Copy-construct a new Any with copying content of other. </Abstract>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Any</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Any</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_any.html</Path>
    <Anchor>a5b5eabc9e98d302c25253100c4a2e8b9</Anchor>
    <Abstract>Destruct this Any. </Abstract>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Any</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_any.html</Path>
    <Anchor>a195a15f9404524fbe4ea448dbad38fb3</Anchor>
    <Abstract>Exchange the content of this and rhs. </Abstract>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Any</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_any.html</Path>
    <Anchor>a748ab8479f9201e1ae661de99dbdefc3</Anchor>
    <Abstract>Assign a new value to this Any. </Abstract>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Any</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_any.html</Path>
    <Anchor>a7785d7134b95deb428393e18d248306a</Anchor>
    <Abstract>Exchange the content of this and rhs. </Abstract>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Any</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_any.html</Path>
    <Anchor>affefe336ceb4b4a7e919aaeb3ca96453</Anchor>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Any</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_any.html</Path>
    <Anchor>a04c199a530accb9316f8b94cb040f69e</Anchor>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Any</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_any.html</Path>
    <Anchor>a75b9e1bc04e45304b110ede2131983b6</Anchor>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Any</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_any.html</Path>
    <Anchor>a4daee9d778ea9e509c3dca8a11f78145</Anchor>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>any_cast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>lunchbox::Any</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_any.html</Path>
    <Anchor>ad52fddf4aadae22e9471b6d76cf9749f</Anchor>
    <Abstract>Retrieve the value stored in an Any including type checking. </Abstract>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsafe_any_cast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>lunchbox::Any</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_any.html</Path>
    <Anchor>a390278691df87bff430e531520eb0d0d</Anchor>
    <Abstract>Retrieve the value stored in an Any without type checking. </Abstract>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::bad_any_cast</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::bad_any_cast</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1bad__any__cast.html</Path>
    <Abstract>A specialization for exceptions thrown by an unsuccessful any_cast. </Abstract>
    <DeclaredIn>any.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Atomic</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_atomic.html</Path>
    <Abstract>A variable with atomic semantics and standalone atomic operations. </Abstract>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Atomic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_atomic.html</Path>
    <Anchor>aa068c6d172b517045abc47605fae1113</Anchor>
    <Abstract>Construct a new atomic variable with an initial value. </Abstract>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Atomic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_atomic.html</Path>
    <Anchor>a4485228d93a342f575b5c8b1ebfe2f2b</Anchor>
    <Abstract>Construct a copy of an atomic variable. </Abstract>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator T</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_atomic.html</Path>
    <Anchor>a54e40ceec8c08744ad5998475fbc82ad</Anchor>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_atomic.html</Path>
    <Anchor>a4968bef8eac8bf6b1258fec7b203a610</Anchor>
    <Abstract>Assign a new value. </Abstract>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_atomic.html</Path>
    <Anchor>a8c0d063f4fc4a718368cdd32316fb20f</Anchor>
    <Abstract>Assign a new value. </Abstract>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_atomic.html</Path>
    <Anchor>a20318865bc041b3eaab2241d08c75983</Anchor>
    <Abstract>Atomically add a value and return the new value. </Abstract>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_atomic.html</Path>
    <Anchor>a9ed268b21266bf4f07cd9592c6010b02</Anchor>
    <Abstract>Atomically substract a value and return the new value. </Abstract>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_atomic.html</Path>
    <Anchor>a191a7b6c79e6dc31a29ca656a9f520ba</Anchor>
    <Abstract>Atomically increment by one and return the new value. </Abstract>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_atomic.html</Path>
    <Anchor>a9c4d4088e737ddbe05afb08abffef762</Anchor>
    <Abstract>Atomically decrement by one and return the new value. </Abstract>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_atomic.html</Path>
    <Anchor>a5c57b649b9545498242c5b75839e9408</Anchor>
    <Abstract>Atomically increment by one and return the old value. </Abstract>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_atomic.html</Path>
    <Anchor>a1143253262d63c0e8c5110aef712f6bf</Anchor>
    <Abstract>Atomically decrement by one and return the old value. </Abstract>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_atomic.html</Path>
    <Anchor>aaca2e330dcb51a465ea6ae78dc6983e1</Anchor>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_atomic.html</Path>
    <Anchor>a214844e71fd07c4b17abac996e5061cc</Anchor>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compareAndSwap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_atomic.html</Path>
    <Anchor>ad1651aa31eb0602f4766b17197aec083</Anchor>
    <Abstract>Perform a compare-and-swap atomic operation. </Abstract>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAndAdd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_atomic.html</Path>
    <Anchor>a8fb33d116f79d5795e43a2725ae0512c</Anchor>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAndSub</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_atomic.html</Path>
    <Anchor>a99c5f941bc7e14157b50dffb1a4fa50c</Anchor>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAndGet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_atomic.html</Path>
    <Anchor>a8501225f5fe1e2fa1ab89631ba5f8204</Anchor>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subAndGet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_atomic.html</Path>
    <Anchor>ac1ea25bf3cc380a48cdcb7229bbac063</Anchor>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>incAndGet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_atomic.html</Path>
    <Anchor>a369ba693fab5d7127403476e21a31163</Anchor>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decAndGet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_atomic.html</Path>
    <Anchor>afa2a4bed0665cb02569acc79064c68a6</Anchor>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compareAndSwap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_atomic.html</Path>
    <Anchor>abef8a1977ec1454249ca829adc18c857</Anchor>
    <Abstract>Perform a compare-and-swap atomic operation. </Abstract>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Buffer</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Abstract>A simple memory buffer with some helper functions. </Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>a88f26982ff4d1a672dcee7b53b7983f2</Anchor>
    <Abstract>Construct a new, empty buffer. </Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>a32895990741832f8dbf03aa0a25ee1e4</Anchor>
    <Abstract>Construct a new buffer of the given size. </Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>a14904ae28b13b446a0cb084187a91493</Anchor>
    <Abstract>&amp;quot;Move&amp;quot; constructor, transfers ownership to new Buffer. </Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>adf219be3b028ea8346fcb74ec886a343</Anchor>
    <Abstract>Destruct the buffer. </Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>a064df0e0b830f853318005100f9bde78</Anchor>
    <Abstract>Flush the buffer, deleting all data. </Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>ad6cccc583766ed9112d28b4c8928eb14</Anchor>
    <Abstract>Tighten the allocated memory to the size of the buffer. </Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>a8abe3f8ac660f7fd1f99aae09abc4952</Anchor>
    <Abstract>Assignment operator, copies data from Buffer. </Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>ad1b0094394b40d20cd04ac7e87f449da</Anchor>
    <Abstract>Direct access to the element at the given index. </Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>a87e982d22e38bc9b707d7eef4848162c</Anchor>
    <Abstract>Direct const access to an element. </Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>a6c598fbe76366611703cf7935388185a</Anchor>
    <Abstract>Ensure that the buffer contains at least newSize elements. </Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>grow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>ab394923fd663070ec104a642877cfaee</Anchor>
    <Abstract>Ensure that the buffer contains at least newSize elements. </Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reserve</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>a08776c868da50571dc37a0a5be09fa0f</Anchor>
    <Abstract>Ensure that the buffer contains at least newSize elements. </Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>abaeaaced5408d9fbcdf0d46bd0006c60</Anchor>
    <Abstract>Set the buffer size and malloc enough memory. </Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZero</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>a94ef962575db703402f17c3f95528af3</Anchor>
    <Abstract>Set the buffer content to 0. </Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>af11b17b0addbd13ff11f1b9ff711f4aa</Anchor>
    <Abstract>Append elements to the buffer, increasing the size. </Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>a74df2718b78522818bea4978a08c8589</Anchor>
    <Abstract>Append one element to the buffer. </Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>ab76c09eaf723245d92f0fda130d2a465</Anchor>
    <Abstract>Replace the existing data with new data. </Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>a00bc8c285e494fba634e880a3bc3f014</Anchor>
    <Abstract>Replace the existing data. </Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>a5602040c109325be55419c870b855079</Anchor>
    <Abstract>Swap the buffer contents with another Buffer. </Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>a3c27774d120a491efba6523a8389649f</Anchor>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>ab9f62833f958c3eff66540b544aecf3b</Anchor>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>ab344aba82be7d2ab62ccbe6df3b9b9a9</Anchor>
    <Abstract>Set the size of the buffer without changing its allocation. </Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>a27779c8d5742a8eb6d72e66b4e6a468a</Anchor>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumBytes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>a5b83936dca29a1aa84a61e2c637f7873</Anchor>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>a3f0d8b889d50ff0ce4b668c062947a5a</Anchor>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_buffer.html</Path>
    <Anchor>a50e35b21a3506679e188ffc5d5caa119</Anchor>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Clock</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Clock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_clock.html</Path>
    <Abstract>A class for time measurements. </Abstract>
    <DeclaredIn>clock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Clock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Clock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_clock.html</Path>
    <Anchor>a1ccb01d237296bc5fa50329a62157914</Anchor>
    <Abstract>Construct a new clock. </Abstract>
    <DeclaredIn>clock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Clock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Clock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_clock.html</Path>
    <Anchor>a8dc6ea20b80550f4113167f7ece058a7</Anchor>
    <Abstract>Copy-construct a new clock with the same start time . </Abstract>
    <DeclaredIn>clock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Clock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Clock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_clock.html</Path>
    <Anchor>a329cc4a5fb6e87937104a35cd31f8d66</Anchor>
    <Abstract>Destroy the clock. </Abstract>
    <DeclaredIn>clock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Clock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_clock.html</Path>
    <Anchor>a29a1215f489acc9b9071e88cb47ae344</Anchor>
    <Abstract>Assignment operator. </Abstract>
    <DeclaredIn>clock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Clock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_clock.html</Path>
    <Anchor>aea3649fbbc158870f9c0c129eb288bb2</Anchor>
    <Abstract>Reset the base time of the clock to the current time. </Abstract>
    <DeclaredIn>clock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Clock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_clock.html</Path>
    <Anchor>ac1c4483b0874ad90dd83c3a42b15bfed</Anchor>
    <Abstract>Set the current time of the clock. </Abstract>
    <DeclaredIn>clock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimef</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Clock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_clock.html</Path>
    <Anchor>a32ece0ba32e7d74845df2cefe903cdaf</Anchor>
    <DeclaredIn>clock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTimef</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Clock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_clock.html</Path>
    <Anchor>af82cbc8db8842db1023a32ab182a75b7</Anchor>
    <DeclaredIn>clock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTime64</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Clock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_clock.html</Path>
    <Anchor>ac179509d5d78d8a795ea7459803aef14</Anchor>
    <DeclaredIn>clock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Clock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_clock.html</Path>
    <Anchor>ac72b7076b0e4ce68d8a993249fb6889d</Anchor>
    <DeclaredIn>clock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMilliSecondsf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Clock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_clock.html</Path>
    <Anchor>a36489e98e42be380190e3c2a3a5715cd</Anchor>
    <Abstract>Returns the millisecond part of the time elapsed since the last reset. </Abstract>
    <DeclaredIn>clock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Compressor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Compressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_compressor.html</Path>
    <Abstract>A C++ class to handle one compressor plugin instance. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Compressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Compressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_compressor.html</Path>
    <Anchor>a01e5ad4f29e1c267892262b218fe0239</Anchor>
    <Abstract>Construct a new, invalid compressor instance. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Compressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Compressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_compressor.html</Path>
    <Anchor>a3a714b4449ff6c05a4b5793aa0826002</Anchor>
    <Abstract>Construct a new, named compressor instance. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Compressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Compressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_compressor.html</Path>
    <Anchor>a131e979ea0627413de557fd8d4fbac45</Anchor>
    <Abstract>Destruct the compressor. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGood</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Compressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_compressor.html</Path>
    <Anchor>a1378c257cbeaabc61eede8b05b0b4821</Anchor>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Compressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_compressor.html</Path>
    <Anchor>a6cc1a3def7e34c658f4b30a280a6216c</Anchor>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Compressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_compressor.html</Path>
    <Anchor>a4237c2394792ff6597bebc065205f211</Anchor>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Compressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_compressor.html</Path>
    <Anchor>a50a5aa3231b6311b9f76c313ee91df23</Anchor>
    <Abstract>Set up a new, named compressor instance. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Compressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_compressor.html</Path>
    <Anchor>a34b0a58ccd339e395902c9059c432c21</Anchor>
    <Abstract>Set up a new, auto-selected compressor instance. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realloc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Compressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_compressor.html</Path>
    <Anchor>af11c2c81278a51edb3bf0e87fc70daf7</Anchor>
    <Abstract>Reallocate the current instance. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Compressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_compressor.html</Path>
    <Anchor>ac265cd7aa90d908c21cf443585299f96</Anchor>
    <Abstract>Reset to EQ_COMPRESSOR_NONE. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Compressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_compressor.html</Path>
    <Anchor>aab47b827cce94b6d6cf4b787615754c8</Anchor>
    <Abstract>Compress one-dimensional data. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Compressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_compressor.html</Path>
    <Anchor>ad441d8095972720965bb6e8bd33c2c71</Anchor>
    <Abstract>Compress two-dimensional data. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumResults</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Compressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_compressor.html</Path>
    <Anchor>a965fa56ef015d21f60c24a403c651772</Anchor>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getResult</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Compressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_compressor.html</Path>
    <Anchor>a0b0dfd62ca9c6f02cbed885b4fc33a7f</Anchor>
    <Abstract>Get one compressed chunk of the last compression. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>choose</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Compressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_compressor.html</Path>
    <Anchor>a022b9326d8cc1558e816e30dc7bf7a39</Anchor>
    <Abstract>Find the best compressor in all plugins for the given parameters. </Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::CompressorChunk</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::CompressorChunk</Scope>
    </TokenIdentifier>
    <Path>structlunchbox_1_1_compressor_chunk.html</Path>
    <Abstract>A structure to hold one compression chunk. </Abstract>
    <DeclaredIn>compressorChunk.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::CompressorResult</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::CompressorResult</Scope>
    </TokenIdentifier>
    <Path>structlunchbox_1_1_compressor_result.html</Path>
    <Abstract>A structure to hold one compression results. </Abstract>
    <DeclaredIn>compressorResult.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox::CompressorResult</Scope>
    </TokenIdentifier>
    <Path>structlunchbox_1_1_compressor_result.html</Path>
    <Anchor>ac10f115c4bf094fb06c20ee8cbf64a00</Anchor>
    <Abstract>&amp;lt; </Abstract>
    <DeclaredIn>compressorResult.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Condition</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Condition</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_condition.html</Path>
    <Abstract>A condition variable and associated lock. </Abstract>
    <DeclaredIn>condition.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Condition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Condition</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_condition.html</Path>
    <Anchor>aac04ad915ce2f94309315b86e26801a5</Anchor>
    <Abstract>Construct a new condition variable. </Abstract>
    <DeclaredIn>condition.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Condition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Condition</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_condition.html</Path>
    <Anchor>a35d8a467b40cd4d541bee3ee69cf6c72</Anchor>
    <Abstract>Destruct this condition variable. </Abstract>
    <DeclaredIn>condition.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Condition</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_condition.html</Path>
    <Anchor>ab9de310e9e06c6af655622f2538e47ca</Anchor>
    <Abstract>Lock the mutex. </Abstract>
    <DeclaredIn>condition.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unlock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Condition</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_condition.html</Path>
    <Anchor>aad91a28847818a59912e2fb394c012c9</Anchor>
    <Abstract>Unlock the mutex. </Abstract>
    <DeclaredIn>condition.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>signal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Condition</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_condition.html</Path>
    <Anchor>a820f9ff52f074356971504853c106bee</Anchor>
    <Abstract>Signal the condition. </Abstract>
    <DeclaredIn>condition.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>broadcast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Condition</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_condition.html</Path>
    <Anchor>a7ace94d2032a6480b6fe16756c88eb64</Anchor>
    <Abstract>Broadcast the condition. </Abstract>
    <DeclaredIn>condition.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wait</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Condition</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_condition.html</Path>
    <Anchor>a17fbae1cce7a00da055818943a4ea3a1</Anchor>
    <Abstract>Atomically unlock the mutex, wait for a signal and relock the mutex. </Abstract>
    <DeclaredIn>condition.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timedWait</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Condition</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_condition.html</Path>
    <Anchor>a5681687beef87459d78b6f5fe4164157</Anchor>
    <Abstract>Atomically unlock the mutex, wait for a signal and relock the mutex. </Abstract>
    <DeclaredIn>condition.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Decompressor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Decompressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_decompressor.html</Path>
    <Abstract>A C++ class to handle one decompressor plugin instance. </Abstract>
    <DeclaredIn>decompressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Decompressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Decompressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_decompressor.html</Path>
    <Anchor>a0842f3c46782dae704679431e8cf1def</Anchor>
    <Abstract>Construct a new, invalid decompressor instance. </Abstract>
    <DeclaredIn>decompressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Decompressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Decompressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_decompressor.html</Path>
    <Anchor>ae1faa62a1c5367de1dd5b5f7baf1f50e</Anchor>
    <Abstract>Construct a new decompressor instance. </Abstract>
    <DeclaredIn>decompressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Decompressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Decompressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_decompressor.html</Path>
    <Anchor>ad5ab01af33bb8f2a4daa0be6e232a2a0</Anchor>
    <Abstract>Destruct this decompressor. </Abstract>
    <DeclaredIn>decompressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGood</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Decompressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_decompressor.html</Path>
    <Anchor>aecaf60a99565c7a6ce0cfd731eff2e56</Anchor>
    <DeclaredIn>decompressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Decompressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_decompressor.html</Path>
    <Anchor>aa91e66f3416e85c0f3ccf490263b64a5</Anchor>
    <DeclaredIn>decompressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Decompressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_decompressor.html</Path>
    <Anchor>a3dd7e5616a5471d09cd61cbc8ac763f9</Anchor>
    <DeclaredIn>decompressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Decompressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_decompressor.html</Path>
    <Anchor>a2773806d645f17970bf64e0852199498</Anchor>
    <Abstract>Set up a new, named decompressor instance. </Abstract>
    <DeclaredIn>decompressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Decompressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_decompressor.html</Path>
    <Anchor>a131edef3d1d5da47b91db0e28629d214</Anchor>
    <Abstract>Reset to EQ_COMPRESSOR_NONE. </Abstract>
    <DeclaredIn>decompressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decompress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Decompressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_decompressor.html</Path>
    <Anchor>a32e66ad0222673c6987f59d5f3ff4494</Anchor>
    <Abstract>Decompress one-dimensional data. </Abstract>
    <DeclaredIn>decompressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decompress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Decompressor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_decompressor.html</Path>
    <Anchor>a6a1b7cf4c71315ab699132ae65b0ba78</Anchor>
    <Abstract>Decompress two-dimensional data. </Abstract>
    <DeclaredIn>decompressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Downloader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Downloader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_downloader.html</Path>
    <Abstract>A C++ class to handle one downloader plugin instance. </Abstract>
    <DeclaredIn>downloader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Downloader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Downloader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_downloader.html</Path>
    <Anchor>a3da73811b05cee9c31b73a6a3acebdea</Anchor>
    <Abstract>Construct a new, invalid downloader instance. </Abstract>
    <DeclaredIn>downloader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Downloader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Downloader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_downloader.html</Path>
    <Anchor>afda1292d72fc76ffd894a4c173f24b2c</Anchor>
    <Abstract>Construct a new, named downloader instance. </Abstract>
    <DeclaredIn>downloader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Downloader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Downloader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_downloader.html</Path>
    <Anchor>a32c23d68b52458303527f4b2c757a84c</Anchor>
    <Abstract>Destruct this downloader. </Abstract>
    <DeclaredIn>downloader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGood</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Downloader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_downloader.html</Path>
    <Anchor>a458b15be277b83a73f0ba17cd6065daa</Anchor>
    <DeclaredIn>downloader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Downloader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_downloader.html</Path>
    <Anchor>ab2fba53c38dc12e6438acbb1987fd342</Anchor>
    <DeclaredIn>downloader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Downloader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_downloader.html</Path>
    <Anchor>a98ca0d42236cdfdfb5e5d3b54bc79862</Anchor>
    <DeclaredIn>downloader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Downloader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_downloader.html</Path>
    <Anchor>a2f42e9865a28dcdc6ffdb749db82a1cb</Anchor>
    <DeclaredIn>downloader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Downloader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_downloader.html</Path>
    <Anchor>a5b0e63d9d01dd30ad274b6d24ce5cd55</Anchor>
    <Abstract>Set up a new, named downloader instance. </Abstract>
    <DeclaredIn>downloader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Downloader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_downloader.html</Path>
    <Anchor>afe60dd0a4363baccbbb3bc6f8945ffad</Anchor>
    <Abstract>Set up a new, auto-selected downloader instance. </Abstract>
    <DeclaredIn>downloader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Downloader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_downloader.html</Path>
    <Anchor>abe5e5f1da560a108442ff67579a78d0b</Anchor>
    <Abstract>Reset to EQ_COMPRESSOR_NONE. </Abstract>
    <DeclaredIn>downloader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Downloader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_downloader.html</Path>
    <Anchor>af184750deaad21e115e1dd44410c10ff</Anchor>
    <Abstract>Start downloading data from the GPU to the CPU. </Abstract>
    <DeclaredIn>downloader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Downloader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_downloader.html</Path>
    <Anchor>a0784aca9e4ba4d2381ccbfe3157e9611</Anchor>
    <Abstract>Finish download data from the GPU to the CPU. </Abstract>
    <DeclaredIn>downloader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>choose</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Downloader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_downloader.html</Path>
    <Anchor>a6d5898947969d0fe63bdee7950506485</Anchor>
    <Abstract>Find the best downloader in all plugins for the given parameters. </Abstract>
    <DeclaredIn>downloader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::DSO</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_d_s_o.html</Path>
    <Abstract>Helper to access dynamic shared objects (DSO) </Abstract>
    <DeclaredIn>dso.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DSO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_d_s_o.html</Path>
    <Anchor>a6fb22d27230da53e2a3b95a506086b96</Anchor>
    <Abstract>Construct a new dynamic shared object. </Abstract>
    <DeclaredIn>dso.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DSO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_d_s_o.html</Path>
    <Anchor>a35eb90d1a2fe998645fb247d2418569d</Anchor>
    <Abstract>Construct and initialize a dynamic shared object. </Abstract>
    <DeclaredIn>dso.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DSO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_d_s_o.html</Path>
    <Anchor>a7cec876c76a81b4e0486bbfb505c3f16</Anchor>
    <Abstract>Destruct this DSO handle. </Abstract>
    <DeclaredIn>dso.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_d_s_o.html</Path>
    <Anchor>a88e31a7f487d3ab3a32c2f19dc176187</Anchor>
    <Abstract>Open a dynamic shared object. </Abstract>
    <DeclaredIn>dso.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_d_s_o.html</Path>
    <Anchor>a72792c9ef9ca67f0eb8be9efe3819798</Anchor>
    <Abstract>Close the DSO, invalidates retrieved function pointers. </Abstract>
    <DeclaredIn>dso.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFunctionPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_d_s_o.html</Path>
    <Anchor>ae0419ab05e56b6a4913a8a18d6d043e8</Anchor>
    <DeclaredIn>dso.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFunctionPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_d_s_o.html</Path>
    <Anchor>a80a6cc38fcda3c62f644fbdde627787c</Anchor>
    <DeclaredIn>dso.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOpen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_d_s_o.html</Path>
    <Anchor>af64721db57ae431940d0e1bbf4057d21</Anchor>
    <DeclaredIn>dso.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::FutureImpl</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::FutureImpl</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future_impl.html</Path>
    <Abstract>Base class to implement the wait method fulfilling the future. </Abstract>
    <DeclaredIn>future.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FutureImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::FutureImpl</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future_impl.html</Path>
    <Anchor>a1ee75be9764b89a3a3b7cf6d162c70c6</Anchor>
    <Abstract>Destruct the future. </Abstract>
    <DeclaredIn>future.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wait</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::FutureImpl</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future_impl.html</Path>
    <Anchor>a66b9bff064e66ca1eee7a69fa304bdda</Anchor>
    <Abstract>Wait for the promise to be fullfilled. </Abstract>
    <DeclaredIn>future.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::FutureImpl</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future_impl.html</Path>
    <Anchor>ab33fd09abba7cca03df94dc058596981</Anchor>
    <DeclaredIn>future.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ref</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>afeaa3a28f63f263a703c015724939609</Anchor>
    <Abstract>Increase the reference count. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unref</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>af4a138f8494231a115fb4effbe8ee939</Anchor>
    <Abstract>Decrease the reference count. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRefCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>a9dcfda6594deb51305dd3d5936568f6d</Anchor>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Referenced</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>a4194650cb8c1f901cd3dd8c1ae3a02b0</Anchor>
    <Abstract>Construct a new reference-counted object. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Referenced</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>a254310e9ede333af755434a529a85b77</Anchor>
    <Abstract>Construct a new copy of a reference-counted object. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Referenced</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>aaa461cf3467f30517b4ca4dfddc34ba6</Anchor>
    <Abstract>Destruct a reference-counted object. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>a5a96a73f8a8f7b9b9943a905197a001c</Anchor>
    <Abstract>Assign another object to this object. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Future</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::Future</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Abstract>A future represents a asynchronous operation. </Abstract>
    <DeclaredIn>future.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Impl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox::Future</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>abe7797708b4323b00b8be91e26d9d7fc</Anchor>
    <Abstract>The wait implementation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Future</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>a76ed077d7196cbaa39b4ebce424ae760</Anchor>
    <Abstract>Construct a new future. </Abstract>
    <DeclaredIn>future.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Future</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>ade97c12a4b3fded660c5f68db3c6b7b2</Anchor>
    <Abstract>Destruct the future. </Abstract>
    <DeclaredIn>future.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wait</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>a79b2ef0c379f1cb79f24a5bcc519d2ed</Anchor>
    <Abstract>Wait for the promise to be fullfilled. </Abstract>
    <DeclaredIn>future.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>af349a2b76540d7b11a0f64fc2fd44fbc</Anchor>
    <DeclaredIn>future.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator bool_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>aaa892d7cd41729b40af845590e155446</Anchor>
    <DeclaredIn>future.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>adc3ef50e647be50dde0fa026ef07120c</Anchor>
    <DeclaredIn>future.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>a704177dc96c94ae1cbe30950a8ef7790</Anchor>
    <DeclaredIn>future.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>a471199c5a83455223250e39d32ddaae6</Anchor>
    <DeclaredIn>future.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>add4271bf59752f2310d6d140ac3616cb</Anchor>
    <DeclaredIn>future.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>a5ae95204a6405618a7bf4ca1065b94a8</Anchor>
    <DeclaredIn>future.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>a2f21c713fab2d41e8e023f12ea7ec672</Anchor>
    <DeclaredIn>future.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>a9439fe94c3e746f09fadf70926eb8ab7</Anchor>
    <DeclaredIn>future.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::FutureTrue</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::FutureTrue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future_true.html</Path>
    <Abstract>A boolean future always returning true. </Abstract>
    <DeclaredIn>futureFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wait</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::FutureTrue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future_true.html</Path>
    <Anchor>a25761ec4cfd7bcdf27fc22d9f64fe4cc</Anchor>
    <Abstract>Wait for the promise to be fullfilled. </Abstract>
    <DeclaredIn>futureFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::FutureTrue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future_true.html</Path>
    <Anchor>aa04f9f8aa5795b17a863cee7f9d1633c</Anchor>
    <DeclaredIn>futureFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Referenced</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>a4194650cb8c1f901cd3dd8c1ae3a02b0</Anchor>
    <Abstract>Construct a new reference-counted object. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Referenced</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>a254310e9ede333af755434a529a85b77</Anchor>
    <Abstract>Construct a new copy of a reference-counted object. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Referenced</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>aaa461cf3467f30517b4ca4dfddc34ba6</Anchor>
    <Abstract>Destruct a reference-counted object. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>a5a96a73f8a8f7b9b9943a905197a001c</Anchor>
    <Abstract>Assign another object to this object. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FutureImpl</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::FutureImpl&lt; bool &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future_impl.html</Path>
    <Anchor>a1ee75be9764b89a3a3b7cf6d162c70c6</Anchor>
    <Abstract>Destruct the future. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ref</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>afeaa3a28f63f263a703c015724939609</Anchor>
    <Abstract>Increase the reference count. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unref</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>af4a138f8494231a115fb4effbe8ee939</Anchor>
    <Abstract>Decrease the reference count. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRefCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>a9dcfda6594deb51305dd3d5936568f6d</Anchor>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::FutureFunction</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::FutureFunction</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future_function.html</Path>
    <Abstract>A Future implementation using a boost::function for fulfilment. </Abstract>
    <DeclaredIn>futureFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Func</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox::FutureFunction</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future_function.html</Path>
    <Anchor>a61be37f0d0ed7e79f252d4e07973bec9</Anchor>
    <Abstract>The fulfilling function. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FutureImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::FutureImpl</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future_impl.html</Path>
    <Anchor>a1ee75be9764b89a3a3b7cf6d162c70c6</Anchor>
    <Abstract>Destruct the future. </Abstract>
    <DeclaredIn>future.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ref</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>afeaa3a28f63f263a703c015724939609</Anchor>
    <Abstract>Increase the reference count. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unref</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>af4a138f8494231a115fb4effbe8ee939</Anchor>
    <Abstract>Decrease the reference count. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRefCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>a9dcfda6594deb51305dd3d5936568f6d</Anchor>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wait</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::FutureFunction</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future_function.html</Path>
    <Anchor>a7e5e63d0557bac0aad69255732881e6f</Anchor>
    <Abstract>Wait for the promise to be fullfilled. </Abstract>
    <DeclaredIn>futureFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::FutureFunction</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future_function.html</Path>
    <Anchor>aa5c15075298ef9b5e36a21c5abdd62a2</Anchor>
    <DeclaredIn>futureFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Referenced</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>a4194650cb8c1f901cd3dd8c1ae3a02b0</Anchor>
    <Abstract>Construct a new reference-counted object. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Referenced</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>a254310e9ede333af755434a529a85b77</Anchor>
    <Abstract>Construct a new copy of a reference-counted object. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Referenced</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>aaa461cf3467f30517b4ca4dfddc34ba6</Anchor>
    <Abstract>Destruct a reference-counted object. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>a5a96a73f8a8f7b9b9943a905197a001c</Anchor>
    <Abstract>Assign another object to this object. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::PtrHash</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::PtrHash</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ptr_hash.html</Path>
    <Abstract>A hash for pointer keys. </Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::hashRefPtr</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::hashRefPtr</Scope>
    </TokenIdentifier>
    <Path>structlunchbox_1_1hash_ref_ptr.html</Path>
    <Abstract>A hash function for RefPtr keys. </Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::RefPtrHash</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::RefPtrHash</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr_hash.html</Path>
    <Abstract>A hash for RefPtr keys. </Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::IndexIterator</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Abstract>Counter-based, as opposed to pointer-based, iterator for any container. </Abstract>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndexIterator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>abc487930183edaa4eee1ebf56477b1c4</Anchor>
    <Abstract>Construct an iterator for a given container and position. </Abstract>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndexIterator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>ab8530408f6729c03bff28c225c440bc4</Anchor>
    <Abstract>Copy-construct an iterator. </Abstract>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndexIterator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>a0e9a6d603c4dd4c3d11ee1be8d6543ba</Anchor>
    <Abstract>Copy-construct an iterator. </Abstract>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>a096f9a173e256042f366c43bee2fbf5c</Anchor>
    <Abstract>Assign the container and position from another iterator. </Abstract>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>abe12aa3c995713280b74126fcec0abf8</Anchor>
    <Abstract>Assign the container and position from another iterator. </Abstract>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>ae6ef366e6bf11038968b77079162ff5e</Anchor>
    <Abstract>Increment the iterator position. </Abstract>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>af223a200ea2a8b95a3d3d343bb5b12ff</Anchor>
    <Abstract>Decrement the iterator position. </Abstract>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>a6ee1dec795251c2bddc02484ff56d2fb</Anchor>
    <Abstract>Increment the iterator position. </Abstract>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>a7f38d8e117204ccb0c249c1ef853cfd0</Anchor>
    <Abstract>Decrement the iterator position. </Abstract>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>a97dc7c6d9b66ebc1ced157f1fc2b1391</Anchor>
    <Abstract>Increment the iterator position by a given amount. </Abstract>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>a72db1b27aaf6497bd459464507ff8c6f</Anchor>
    <Abstract>Increment the iterator position by a given amount. </Abstract>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>abd687f0368b088f0eca012bb0af23915</Anchor>
    <Abstract>Decrement the iterator position by a given amount. </Abstract>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>ae09d4181b1a414536afc473caf55d9c0</Anchor>
    <Abstract>Decrement the iterator position by a given amount. </Abstract>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>ac38eded7f996826b18b806132950d7ae</Anchor>
    <Abstract>Compute the distance between this and another iterator. </Abstract>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>a1f0cc9d015c7a0ef693255d77955baab</Anchor>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>a3c05c1d6af0403fc2870e7745a01e6a7</Anchor>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>ac63dbd0425167fd40b43cf08b273b7e4</Anchor>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>a80c6ea03c8b1b8c3fa82e4939e841586</Anchor>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>a710ed8e1b72b0434e30ec1d4dcc83dd6</Anchor>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>a2ae9ff293caa0ad228c57f5d144f5720</Anchor>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>accef379c4b4007e70153905c25830d4e</Anchor>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Launcher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Launcher</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_launcher.html</Path>
    <Abstract>The launcher executes a command from a separate process. </Abstract>
    <DeclaredIn>launcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Launcher</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_launcher.html</Path>
    <Anchor>acec088a9a2a226c59412a8f1ba248891</Anchor>
    <Abstract>Execute the given command in a new process. </Abstract>
    <DeclaredIn>launcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::LFQueue</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_queue.html</Path>
    <Abstract>A thread-safe, lock-free queue with non-blocking access. </Abstract>
    <DeclaredIn>lfQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LFQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_queue.html</Path>
    <Anchor>ab81f6db5cfd932741a4db1307038429e</Anchor>
    <Abstract>Construct a new queue. </Abstract>
    <DeclaredIn>lfQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~LFQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_queue.html</Path>
    <Anchor>a7cc3c5bc72dbbfca71c5a2ea8541cc8e</Anchor>
    <Abstract>Destruct this queue. </Abstract>
    <DeclaredIn>lfQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_queue.html</Path>
    <Anchor>a2febf57c0e90faadc2a0031e934eac8b</Anchor>
    <DeclaredIn>lfQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_queue.html</Path>
    <Anchor>ab9b9e20309e4e7670ded69c00d6a0be2</Anchor>
    <Abstract>Reset (empty) the queue. </Abstract>
    <DeclaredIn>lfQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_queue.html</Path>
    <Anchor>aa43df91e458ae30aed03d00d77362a70</Anchor>
    <Abstract>Resize and reset the queue. </Abstract>
    <DeclaredIn>lfQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_queue.html</Path>
    <Anchor>aff32197fe03d8398047850e2227bb554</Anchor>
    <Abstract>Retrieve and pop the front element from the queue. </Abstract>
    <DeclaredIn>lfQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_queue.html</Path>
    <Anchor>afd6b8a0a92e974d356232795a4451d0a</Anchor>
    <Abstract>Retrieve the front element from the queue. </Abstract>
    <DeclaredIn>lfQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_queue.html</Path>
    <Anchor>a9b7ef3653b6163779209810eec58c2a4</Anchor>
    <Abstract>Push a new element to the back of the queue. </Abstract>
    <DeclaredIn>lfQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCapacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_queue.html</Path>
    <Anchor>aeeb9a83bc7e6fc3cb08cf35e79b21d3b</Anchor>
    <DeclaredIn>lfQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::LFVector</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Abstract>STL-like vector implementation providing certain thread-safety guarantees. </Abstract>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>ac24df70e49a70c87919a13ce144874b9</Anchor>
    <Abstract>Iterator over the vector elements. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>const_iterator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>aaca1d38e47dc0f6ad4722ffa9380b303</Anchor>
    <Abstract>Iterator over the const vector elements. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LFVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>a5acd5b06b6aca7495f6f6185ed2279a6</Anchor>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LFVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>a0ebf32602c36f3d47decdb7ee0a2f8b8</Anchor>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LFVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>a5ef939fa9ac24318a68fd88db437557d</Anchor>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LFVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>af91c3073508b7febfe2020de56ae5758</Anchor>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LFVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>a96fe5c22db75756d925490105d779033</Anchor>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~LFVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>a509fce5075a4dc34a95a8b9a3b61e70c</Anchor>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>a0584df4c45e3b4ad8c1774267819e62f</Anchor>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>a33c1e064a92280134d68146da1c16519</Anchor>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>a342a3ef537e7c09d800b073dd897cda7</Anchor>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>aa8501cd6da063b5460c69f4bdc1ecb5b</Anchor>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>a4d77897f414a129531a925bfd3a5f4e7</Anchor>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>a4058b018a2e5305207eb642246a2fdb4</Anchor>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>adb134213e9278d853b2c8a33bcee66af</Anchor>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>front</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>a4b4bbfacfd32e828fefa9d5d4c14353a</Anchor>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>back</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>a419b08282c02560f57e456f7004689fc</Anchor>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>a7ba6772e64ec85ffdc0e3d805ed3ffbe</Anchor>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>a46bd5e2a4119ed19ed1c367dde01113c</Anchor>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>a53f4f89b37f982bed7565fd48a148588</Anchor>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>ac12b33dc792e5efce939f1b7a6aba38a</Anchor>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>expand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>aa00de75ca31c968b398e2725b291cd9c</Anchor>
    <Abstract>Resize the vector to at least the given size. </Abstract>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push_back</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>a6dbc2c53129183d373c5f9f64d3707ec</Anchor>
    <Abstract>Add an element to the vector. </Abstract>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop_back</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>ad0366264ecccb336fb94f0bbfc5578d5</Anchor>
    <Abstract>Remove the last element (STL version). </Abstract>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop_back</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>a822c6c9a12e2d33ff8c6ee84834ad39a</Anchor>
    <Abstract>Remove the last element (atomic version). </Abstract>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>erase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>aedd2c53ee7822cc09fab97d0d89eb6de</Anchor>
    <Abstract>Remove an element. </Abstract>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>erase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>a83d8abfe7321a07d0a54f19c8313d106</Anchor>
    <Abstract>Remove the last occurence of the given element. </Abstract>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>afe5da93274a1b15588eb32d38349fa96</Anchor>
    <Abstract>Resize the vector. </Abstract>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>a5f70230f674ba4e64287169320e233ff</Anchor>
    <Abstract>Clear the vector and all storage. </Abstract>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWriteLock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector.html</Path>
    <Anchor>a199b641af96b56def4e8b83a3bce0982</Anchor>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::LFVectorIterator</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::LFVectorIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector_iterator.html</Path>
    <Abstract>An iterator for LFVector. </Abstract>
    <DeclaredIn>lfVectorIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LFVectorIterator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVectorIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector_iterator.html</Path>
    <Anchor>a00a924751d9c1c85977601d1c817bf4d</Anchor>
    <Abstract>Construct an iterator for a given vector and position. </Abstract>
    <DeclaredIn>lfVectorIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LFVectorIterator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVectorIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector_iterator.html</Path>
    <Anchor>a738501dbdbfb367f9c8ecc686f3cad93</Anchor>
    <Abstract>Copy-construct an iterator. </Abstract>
    <DeclaredIn>lfVectorIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVectorIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector_iterator.html</Path>
    <Anchor>a990bd33d9d6ddaafe2ddb6768eb61559</Anchor>
    <Abstract>Dereference the element at the current position. </Abstract>
    <DeclaredIn>lfVectorIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVectorIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector_iterator.html</Path>
    <Anchor>abdb8ae8802113b32ce6c476314809c0f</Anchor>
    <Abstract>Address the element at the current position. </Abstract>
    <DeclaredIn>lfVectorIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVectorIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_l_f_vector_iterator.html</Path>
    <Anchor>aca56247e378a1cf7381b7c237f907547</Anchor>
    <Abstract>Address the element at the given position. </Abstract>
    <DeclaredIn>lfVectorIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndexIterator</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator&lt; LFVectorIterator&lt; V, T &gt;, V, T &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>abc487930183edaa4eee1ebf56477b1c4</Anchor>
    <Abstract>Construct an iterator for a given container and position. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndexIterator</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator&lt; LFVectorIterator&lt; V, T &gt;, V, T &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>ab8530408f6729c03bff28c225c440bc4</Anchor>
    <Abstract>Copy-construct an iterator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndexIterator</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator&lt; LFVectorIterator&lt; V, T &gt;, V, T &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>a0e9a6d603c4dd4c3d11ee1be8d6543ba</Anchor>
    <Abstract>Copy-construct an iterator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator&lt; LFVectorIterator&lt; V, T &gt;, V, T &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>a096f9a173e256042f366c43bee2fbf5c</Anchor>
    <Abstract>Assign the container and position from another iterator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator&lt; LFVectorIterator&lt; V, T &gt;, V, T &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>abe12aa3c995713280b74126fcec0abf8</Anchor>
    <Abstract>Assign the container and position from another iterator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator&lt; LFVectorIterator&lt; V, T &gt;, V, T &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>ae6ef366e6bf11038968b77079162ff5e</Anchor>
    <Abstract>Increment the iterator position. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator&lt; LFVectorIterator&lt; V, T &gt;, V, T &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>a6ee1dec795251c2bddc02484ff56d2fb</Anchor>
    <Abstract>Increment the iterator position. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator&lt; LFVectorIterator&lt; V, T &gt;, V, T &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>af223a200ea2a8b95a3d3d343bb5b12ff</Anchor>
    <Abstract>Decrement the iterator position. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator&lt; LFVectorIterator&lt; V, T &gt;, V, T &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>a7f38d8e117204ccb0c249c1ef853cfd0</Anchor>
    <Abstract>Decrement the iterator position. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator&lt; LFVectorIterator&lt; V, T &gt;, V, T &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>a97dc7c6d9b66ebc1ced157f1fc2b1391</Anchor>
    <Abstract>Increment the iterator position by a given amount. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator&lt; LFVectorIterator&lt; V, T &gt;, V, T &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>a72db1b27aaf6497bd459464507ff8c6f</Anchor>
    <Abstract>Increment the iterator position by a given amount. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator&lt; LFVectorIterator&lt; V, T &gt;, V, T &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>abd687f0368b088f0eca012bb0af23915</Anchor>
    <Abstract>Decrement the iterator position by a given amount. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator&lt; LFVectorIterator&lt; V, T &gt;, V, T &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>ac38eded7f996826b18b806132950d7ae</Anchor>
    <Abstract>Compute the distance between this and another iterator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator&lt; LFVectorIterator&lt; V, T &gt;, V, T &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>ae09d4181b1a414536afc473caf55d9c0</Anchor>
    <Abstract>Decrement the iterator position by a given amount. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator&lt; LFVectorIterator&lt; V, T &gt;, V, T &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>a1f0cc9d015c7a0ef693255d77955baab</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator&lt; LFVectorIterator&lt; V, T &gt;, V, T &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>a3c05c1d6af0403fc2870e7745a01e6a7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator&lt; LFVectorIterator&lt; V, T &gt;, V, T &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>ac63dbd0425167fd40b43cf08b273b7e4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator&lt; LFVectorIterator&lt; V, T &gt;, V, T &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>a80c6ea03c8b1b8c3fa82e4939e841586</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;=</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator&lt; LFVectorIterator&lt; V, T &gt;, V, T &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>a710ed8e1b72b0434e30ec1d4dcc83dd6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;=</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator&lt; LFVectorIterator&lt; V, T &gt;, V, T &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>a2ae9ff293caa0ad228c57f5d144f5720</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::IndexIterator&lt; LFVectorIterator&lt; V, T &gt;, V, T &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_index_iterator.html</Path>
    <Anchor>accef379c4b4007e70153905c25830d4e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Lock</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Lock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_lock.html</Path>
    <Abstract>A lock (mutex) primitive. </Abstract>
    <DeclaredIn>lock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Lock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_lock.html</Path>
    <Anchor>a6c6f4ebc57ccf108313d2a3a460b400d</Anchor>
    <Abstract>Construct a new lock. </Abstract>
    <DeclaredIn>lock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Lock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_lock.html</Path>
    <Anchor>a47b5efe96acfc5c5bc703da4edc3daa3</Anchor>
    <Abstract>Destruct the lock. </Abstract>
    <DeclaredIn>lock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_lock.html</Path>
    <Anchor>afe21500195841b1ac2d53ede1fed1c08</Anchor>
    <Abstract>Acquire the lock. </Abstract>
    <DeclaredIn>lock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_lock.html</Path>
    <Anchor>a41e870b0399534bd46d16e0d820dddf8</Anchor>
    <Abstract>Release the lock. </Abstract>
    <DeclaredIn>lock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_lock.html</Path>
    <Anchor>af0a397d78384d226fffb69b81434d676</Anchor>
    <Abstract>Acquire the lock shared with other readers. </Abstract>
    <DeclaredIn>lock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsetRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_lock.html</Path>
    <Anchor>a947fe1709d7c2e7cca198c02724ba25a</Anchor>
    <Abstract>Release a shared read lock. </Abstract>
    <DeclaredIn>lock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trySet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_lock.html</Path>
    <Anchor>a58c96748d5e23dbb1973badbde7fd378</Anchor>
    <Abstract>Attempt to acquire the lock. </Abstract>
    <DeclaredIn>lock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_lock.html</Path>
    <Anchor>a431ea7213aec20859ae310d474e46494</Anchor>
    <Abstract>Test if the lock is set. </Abstract>
    <DeclaredIn>lock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Lockable</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::Lockable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_lockable.html</Path>
    <Abstract>A convenience structure to hold data together with a lock for access. </Abstract>
    <DeclaredIn>lockable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Lockable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lockable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_lockable.html</Path>
    <Anchor>a545266d20a7a99f623ef34eea1d86c08</Anchor>
    <Abstract>Construct a new lockable data structure. </Abstract>
    <DeclaredIn>lockable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Lockable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lockable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_lockable.html</Path>
    <Anchor>ad09578bf94a32b3fa346124cd8e1a7b6</Anchor>
    <Abstract>Construct and initialize a new data structure. </Abstract>
    <DeclaredIn>lockable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Lockable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lockable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_lockable.html</Path>
    <Anchor>ab913952bac275dcfbd74c8d5fdf052c6</Anchor>
    <Abstract>Construct and initialize a new data structure. </Abstract>
    <DeclaredIn>lockable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lockable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_lockable.html</Path>
    <Anchor>ae4aa823b216b7044f45f2563b394cde0</Anchor>
    <Abstract>Access the held data. </Abstract>
    <DeclaredIn>lockable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lockable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_lockable.html</Path>
    <Anchor>afbf82da3f3b0da5a7cdc0b1938e4161d</Anchor>
    <Abstract>Access the held data. </Abstract>
    <DeclaredIn>lockable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lockable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_lockable.html</Path>
    <Anchor>a9be37f4f4d204cc1f6f49e15f130e2fa</Anchor>
    <Abstract>Access the held data. </Abstract>
    <DeclaredIn>lockable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lockable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_lockable.html</Path>
    <Anchor>a8dee219c4cdb65e77bb66a1855fb98cd</Anchor>
    <Abstract>Access the held data. </Abstract>
    <DeclaredIn>lockable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lockable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_lockable.html</Path>
    <Anchor>a56f70e36e58b55312c70f5b8e5c5646d</Anchor>
    <DeclaredIn>lockable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lockable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_lockable.html</Path>
    <Anchor>a12bd8647540f303fdd5e3c50a32615c7</Anchor>
    <Abstract>Assign another value to the data. </Abstract>
    <DeclaredIn>lockable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Log</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_log.html</Path>
    <Abstract>The logging class. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_log.html</Path>
    <Anchor>a64ba80a46c430e691ebf82f30381e106</Anchor>
    <Abstract>Indent subsequent log output by one level. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exdent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_log.html</Path>
    <Anchor>aa646267302922e1e598e114c1cc0b00b</Anchor>
    <Abstract>Un-indent subsequent log output by one level. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableFlush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_log.html</Path>
    <Anchor>acbeacde4dfe1e015210a7399174f09ed</Anchor>
    <Abstract>Disable flushing of the log on endl. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableFlush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_log.html</Path>
    <Anchor>a0e9dc26c37fba7997b5a5e0eff3a275c</Anchor>
    <Abstract>Re-enable flushing of the log on endl. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forceFlush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_log.html</Path>
    <Anchor>a78f6a8a1475d1e1d72ca6cda0ced076b</Anchor>
    <Abstract>Flush all buffered log data. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_log.html</Path>
    <Anchor>afb1ba88e3a76f5439eb1f530200ee4af</Anchor>
    <Abstract>Disable prefix printing for subsequent new lines. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_log.html</Path>
    <Anchor>aa12b72421a40c2b01ed11f9cba0b77bf</Anchor>
    <Abstract>Re-enable prefix printing for subsequent new lines. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_log.html</Path>
    <Anchor>a9d18108ee4a279261e17962af46cb884</Anchor>
    <Abstract>The per-thread logger. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_log.html</Path>
    <Anchor>ac6ffc7634b75be076096d3758bc1f145</Anchor>
    <Abstract>The per-thread logger. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_log.html</Path>
    <Anchor>ab1ff573dea601a4760276c2de0562715</Anchor>
    <Abstract>Exit the log instance for the current thread. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLogLevelString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_log.html</Path>
    <Anchor>ad5fd334a1703a9536a469e55ab27e7d5</Anchor>
    <Abstract>The string representation of the current log level. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLogLevel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_log.html</Path>
    <Anchor>a320a3ac79b48b5f0fe0cc15e7ec3b8bb</Anchor>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_log.html</Path>
    <Anchor>a602be2292b0dc311263395e26c0169bd</Anchor>
    <Abstract>Change the output stream. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_log.html</Path>
    <Anchor>a98f4fce9ed10184c59102c7ef08b1f50</Anchor>
    <Abstract>Change the output stream to the given file. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_log.html</Path>
    <Anchor>a42c550f0bee09875767ff932ea9be58f</Anchor>
    <Abstract>Get the current output stream. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_log.html</Path>
    <Anchor>ac8b0cddeda63f95f47047582953ac8a1</Anchor>
    <Abstract>Set the reference clock. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>level</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_log.html</Path>
    <Anchor>a8f354ba872b270b1c8e2f2d38908cba5</Anchor>
    <Abstract>The current log level. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>topics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_log.html</Path>
    <Anchor>a2d90fd231e2be584255d1c815f1e1543</Anchor>
    <Abstract>The current log topics. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perThreadDelete</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_log.html</Path>
    <Anchor>a6d30627d312d8eb53f54a87a798f023b</Anchor>
    <Abstract>Default PerThread destructor deleting the object. </Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::MemoryMap</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_memory_map.html</Path>
    <Abstract>Helper to map a file to a memory address (mmap). </Abstract>
    <DeclaredIn>memoryMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_memory_map.html</Path>
    <Anchor>a1d4d97f3a91af9449e683af7c9199ecd</Anchor>
    <Abstract>Construct a new memory map. </Abstract>
    <DeclaredIn>memoryMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_memory_map.html</Path>
    <Anchor>a3c6e14355d3c500e4c87566a37c22c87</Anchor>
    <Abstract>Construct and initialize a new, readonly memory map. </Abstract>
    <DeclaredIn>memoryMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_memory_map.html</Path>
    <Anchor>ae8e8af28fba12d0a79fd4a3a4f81c693</Anchor>
    <Abstract>Construct and initialize a new, read-write memory map. </Abstract>
    <DeclaredIn>memoryMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MemoryMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_memory_map.html</Path>
    <Anchor>a802f3c6f254842704f3890160a06c3a6</Anchor>
    <Abstract>Destruct the memory map. </Abstract>
    <DeclaredIn>memoryMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_memory_map.html</Path>
    <Anchor>a6dfa6a62163224dda0e28a1e46d5c983</Anchor>
    <Abstract>Map a file to a memory address. </Abstract>
    <DeclaredIn>memoryMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_memory_map.html</Path>
    <Anchor>a46c13ac01d1f56eabf9c6e7e42a09a30</Anchor>
    <Abstract>Remap a different file for this memory map. </Abstract>
    <DeclaredIn>memoryMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_memory_map.html</Path>
    <Anchor>a2cd3252b6dc304cd7097a93a1606d6f7</Anchor>
    <Abstract>Create a writable file to a memory address. </Abstract>
    <DeclaredIn>memoryMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recreate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_memory_map.html</Path>
    <Anchor>a494ea36aeccb4d343c8c45ca80755931</Anchor>
    <Abstract>Recreate a different writable file for this memory map. </Abstract>
    <DeclaredIn>memoryMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_memory_map.html</Path>
    <Anchor>a16aa9a28c999c5b8447e5457ccce48f7</Anchor>
    <Abstract>Unmap the file. </Abstract>
    <DeclaredIn>memoryMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAddress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_memory_map.html</Path>
    <Anchor>a4844ab9c3b15509e2fe457c0f123815c</Anchor>
    <DeclaredIn>memoryMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAddress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_memory_map.html</Path>
    <Anchor>a86504bd5a0275ceb22f0538e4c4ac5b8</Anchor>
    <DeclaredIn>memoryMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAddress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_memory_map.html</Path>
    <Anchor>a42d6a676858e38638aa1e5c755387dce</Anchor>
    <DeclaredIn>memoryMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAddress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_memory_map.html</Path>
    <Anchor>a90cbdfbd48c7dffafe8907be74309fb6</Anchor>
    <DeclaredIn>memoryMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_memory_map.html</Path>
    <Anchor>ab3efa0b1bdd0da183a52e8b0b93bd745</Anchor>
    <DeclaredIn>memoryMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Monitor</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Abstract>A monitor primitive. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Monitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>a9ccea26bb37295705d4d553d971f4c40</Anchor>
    <Abstract>Construct a new monitor with a default value of 0. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Monitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>aa108ccf33c8deae93297083560397e14</Anchor>
    <Abstract>Construct a new monitor with a given default value. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Monitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>a44bc656d09f783f29afca1ae7a8bf909</Anchor>
    <Abstract>Ctor initializing with the given monitor value. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Monitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>ad5de0e0cafc67308ffb77db7630df952</Anchor>
    <Abstract>Destructs the monitor. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>ad8e37edbb3843933e78ca2daf7705741</Anchor>
    <Abstract>Increment the monitored value, prefix only. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>a49d4e024b636594bb7708d9c41d4c329</Anchor>
    <Abstract>Decrement the monitored value, prefix only. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>a69d6e9f1bc9d82b9cf1aaa7e600d7c36</Anchor>
    <Abstract>Assign a new value. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>a3ca5d6a1d43903b41b0880fc467b2204</Anchor>
    <Abstract>Assign a new value. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator|=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>a5591e04993c5909e74792a29cdf192ce</Anchor>
    <Abstract>Perform an or operation on the value. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&amp;=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>abd349b13b1850d30bf474989b511689d</Anchor>
    <Abstract>Perform an and operation on the value. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>ae47ea923c39403e6291b105d0c2d4c0a</Anchor>
    <Abstract>Set a new value. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitEQ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>a1dffafa32a85fb29ac47004fd418279d</Anchor>
    <Abstract>Block until the monitor has the given value. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitNE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>a27e55a47658258031ee6af2b5a5417fc</Anchor>
    <Abstract>Block until the monitor has not the given value. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitNE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>a1445722f55dca5e15e40886cb3d598f8</Anchor>
    <Abstract>Block until the monitor has none of the given values. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitGE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>a3174b097cd0d5586791c2595337e6774</Anchor>
    <Abstract>Block until the monitor has a value greater or equal to the given value. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>a9801fc5798c6d4efaf26d9d21402ce5d</Anchor>
    <Abstract>Block until the monitor has a value less or equal to the given value. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timedWaitEQ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>ac86a4412245731f5e8b11fdaf9d0ab4a</Anchor>
    <Abstract>Block until the monitor has the given value. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timedWaitGE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>a2a8b5c1fc9b3cfdd917a2955aa555b53</Anchor>
    <Abstract>Block until the monitor has a value greater or equal to the given value. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timedWaitNE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>a233c15fbd650abbce70a7546636f5527</Anchor>
    <Abstract>Block until the monitor has not the given value. </Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator bool_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>a3f6d88d90dd36bde8517da9beb7a2125</Anchor>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>af96d8a6cd5b5943c79130ccffc33b76f</Anchor>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>a4f65b15236944dee768f06d25e441005</Anchor>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>a078d09757f95ff0cf0d6920f8f9cf2d8</Anchor>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator|</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>af9f6595235a9d5adda8503572238c3b9</Anchor>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&amp;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_monitor.html</Path>
    <Anchor>a837f715563966e1fc1a7e233fa246036</Anchor>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::MTQueue</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Abstract>A thread-safe queue with a blocking read access. </Abstract>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MTQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>a64b286cfbedb8c279a9094124fa80f86</Anchor>
    <Abstract>Construct a new queue. </Abstract>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MTQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>a8023a6fd553a9c20580c462236f754d1</Anchor>
    <Abstract>Construct a copy of a queue. </Abstract>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MTQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>a31c9359912b04c714d11737e9762563a</Anchor>
    <Abstract>Destruct this Queue. </Abstract>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>a95ba8597433c3ed4c71305a4e417049a</Anchor>
    <Abstract>Assign the values of another queue. </Abstract>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>a6fb6c2678797889663d3c18423fcd0d3</Anchor>
    <Abstract>Retrieve the requested element from the queue, may block. </Abstract>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>a52d8a019021e2242ace2c74bbcc32636</Anchor>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>ad47d88ad49338dd08868283557740a19</Anchor>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>a87171a084e02bb30d79ed0e99cedfc00</Anchor>
    <Abstract>Set the new maximum size of the queue. </Abstract>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>a5e8c24c850872a024d892a0ea6f401ae</Anchor>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>a81335dadfabdd5d5941406a1ae74306e</Anchor>
    <Abstract>Wait for the size to be at least the number of given elements. </Abstract>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>a1aa4378f4a855b49bb7dc7a3505c7bb1</Anchor>
    <Abstract>Reset (empty) the queue. </Abstract>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>a91510c2c9390818ff86806e5242b8401</Anchor>
    <Abstract>Retrieve and pop the front element from the queue, may block. </Abstract>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timedPop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>a8ceb8ef85211373130b2310bc5f29934</Anchor>
    <Abstract>Retrieve and pop the front element from the queue. </Abstract>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timedPopRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>aa911b86392a23f86e6c111e1b5987ab9</Anchor>
    <Abstract>Retrieve a number of items from the front of the queue. </Abstract>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tryPop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>a4e13eceabbd50c12f935c7a898302221</Anchor>
    <Abstract>Retrieve and pop the front element from the queue if it is not empty. </Abstract>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tryPop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>abd205008dcac8133111fb4bd707c4402</Anchor>
    <Abstract>Try to retrieve a number of items from the front of the queue. </Abstract>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>popBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>ab29d5638ab3976e61fe67539fed0583f</Anchor>
    <Abstract>Retrieve the front element, or abort if the barrier is reached. </Abstract>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>a49c00df6cf40487057ed2e7844031433</Anchor>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>a88624a241c23b468112347734bff9b88</Anchor>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>a25b6d6a42aede1adc7fc185a3b8be736</Anchor>
    <Abstract>Push a new element to the back of the queue. </Abstract>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>a9387c77d79e7329f0190f834a8d12d15</Anchor>
    <Abstract>Push a vector of elements to the back of the queue. </Abstract>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pushFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>ad2c93b3f23c5e1ec44095dce24ca4727</Anchor>
    <Abstract>Push a new element to the front of the queue. </Abstract>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pushFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue.html</Path>
    <Anchor>ab9e3f9826d7eea2ef95c5413ff6040e8</Anchor>
    <Abstract>Push a vector of elements to the front of the queue. </Abstract>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::MTQueue::Group</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::MTQueue::Group</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue_1_1_group.html</Path>
    <Abstract>Group descriptor for popBarrier(). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Group</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue::Group</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue_1_1_group.html</Path>
    <Anchor>aed9b206c7cec0f736c6d6b8d51f7a8fa</Anchor>
    <Abstract>Construct a new group of the given size. </Abstract>
    <DeclaredIn>mtQueue.ipp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue::Group</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_m_t_queue_1_1_group.html</Path>
    <Anchor>aa0192e1906f51c1bb6727f8179e11b8e</Anchor>
    <Abstract>Update the height. </Abstract>
    <DeclaredIn>mtQueue.ipp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::NonCopyable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::NonCopyable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_non_copyable.html</Path>
    <Abstract>Base class to make objects non-copyable. </Abstract>
    <DeclaredIn>nonCopyable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::OMP</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::OMP</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_o_m_p.html</Path>
    <Abstract>Base class for OpenMP functionality. </Abstract>
    <DeclaredIn>omp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNThreads</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::OMP</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_o_m_p.html</Path>
    <Anchor>a3c921d6252b76e2ce41c4463568f6d90</Anchor>
    <DeclaredIn>omp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::PerThread</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread.html</Path>
    <Abstract>Implements thread-specific storage for C++ objects. </Abstract>
    <DeclaredIn>perThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PerThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread.html</Path>
    <Anchor>af5131cf1beb2287fef594b52023f3a83</Anchor>
    <Abstract>Construct a new per-thread variable. </Abstract>
    <DeclaredIn>perThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PerThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread.html</Path>
    <Anchor>adbccd7b94bfb6aa6c51b79feb1ded1bb</Anchor>
    <Abstract>Destruct the per-thread variable. </Abstract>
    <DeclaredIn>perThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread.html</Path>
    <Anchor>a122de3247df67f1c722aa12626b8d3b9</Anchor>
    <Abstract>Assign an object to the thread-local storage. </Abstract>
    <DeclaredIn>perThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread.html</Path>
    <Anchor>a3bf351d32535ff9f3b2b0735bf9bdf8c</Anchor>
    <Abstract>Assign an object from another thread-local storage. </Abstract>
    <DeclaredIn>perThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread.html</Path>
    <Anchor>ab7784a548c383b2ad24be8f475ffb7fc</Anchor>
    <DeclaredIn>perThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread.html</Path>
    <Anchor>a38ca8ee2cec88032cbca358bfc3c3495</Anchor>
    <DeclaredIn>perThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread.html</Path>
    <Anchor>a6752d8957d9ae001da43a256403fe309</Anchor>
    <Abstract>Access the thread-local object. </Abstract>
    <DeclaredIn>perThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread.html</Path>
    <Anchor>a2a3b6a4e79291c9d7afce9e355820fc6</Anchor>
    <Abstract>Access the thread-local object. </Abstract>
    <DeclaredIn>perThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread.html</Path>
    <Anchor>ae06e48da4f49b1a087bec0aaf647f4c2</Anchor>
    <DeclaredIn>perThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread.html</Path>
    <Anchor>a2fe6f1dfdeee5d8c4df261cb3dc7638f</Anchor>
    <DeclaredIn>perThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread.html</Path>
    <Anchor>a2e438e6c9c391f20c053ae7325c73f63</Anchor>
    <DeclaredIn>perThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread.html</Path>
    <Anchor>a6302a53b459d569ccb46d1375c51d2f1</Anchor>
    <DeclaredIn>perThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread.html</Path>
    <Anchor>ad07fce9c2fd965aa584613547d8c304d</Anchor>
    <DeclaredIn>perThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread.html</Path>
    <Anchor>a94d65558a9bfd79c2fa3f550bb414f3c</Anchor>
    <DeclaredIn>perThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread.html</Path>
    <Anchor>a0523e5fd0fcffd48f2b4ed9139353a1d</Anchor>
    <DeclaredIn>perThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::PerThreadRef</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread_ref.html</Path>
    <Abstract>Thread-specific storage for a RefPtr. </Abstract>
    <DeclaredIn>perThreadRef.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PerThreadRef</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread_ref.html</Path>
    <Anchor>abf237e3a7c3b22abccd0db33cfcdeaf1</Anchor>
    <Abstract>Construct a new per-thread RefPtr. </Abstract>
    <DeclaredIn>perThreadRef.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PerThreadRef</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread_ref.html</Path>
    <Anchor>aaf49e13efd98c4cc3b5c231c796a3b94</Anchor>
    <Abstract>Destruct a per-thread RefPtr. </Abstract>
    <DeclaredIn>perThreadRef.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread_ref.html</Path>
    <Anchor>a051944f55dce19ce7bb6ca9b903dcd77</Anchor>
    <Abstract>Assign a RefPtr to the thread-local storage. </Abstract>
    <DeclaredIn>perThreadRef.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread_ref.html</Path>
    <Anchor>ae0aab0c71e90f90b14c918246b368e17</Anchor>
    <Abstract>Assign a RefPtr to the thread-local storage. </Abstract>
    <DeclaredIn>perThreadRef.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread_ref.html</Path>
    <Anchor>a65c7a600e5788ed02289424df1906f59</Anchor>
    <DeclaredIn>perThreadRef.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread_ref.html</Path>
    <Anchor>a5af2c076fbd47444f17c5581b3f83ea0</Anchor>
    <DeclaredIn>perThreadRef.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread_ref.html</Path>
    <Anchor>a06582061999c9a47c7101e4474679818</Anchor>
    <DeclaredIn>perThreadRef.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread_ref.html</Path>
    <Anchor>aab5434e863e9e1f3029f819484e81363</Anchor>
    <DeclaredIn>perThreadRef.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread_ref.html</Path>
    <Anchor>ab16d1771149ca91d621a30274f216bbe</Anchor>
    <DeclaredIn>perThreadRef.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread_ref.html</Path>
    <Anchor>af42c0cdbf2bc32290c87253b9ec298d6</Anchor>
    <DeclaredIn>perThreadRef.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread_ref.html</Path>
    <Anchor>a3608f42fe425a165f5bbbb67d9ec71a5</Anchor>
    <DeclaredIn>perThreadRef.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread_ref.html</Path>
    <Anchor>a6ecbe7cc5baa80334e40dd7706d0332a</Anchor>
    <DeclaredIn>perThreadRef.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread_ref.html</Path>
    <Anchor>a315a44efb1751d3c728879106013480b</Anchor>
    <DeclaredIn>perThreadRef.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_per_thread_ref.html</Path>
    <Anchor>a05c446deec2e186560e9741012e53ce1</Anchor>
    <DeclaredIn>perThreadRef.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Plugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Plugin</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin.html</Path>
    <Abstract>Holder for all functions and information of one compression plugin DSO. </Abstract>
    <DeclaredIn>plugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Plugin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Plugin</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin.html</Path>
    <Anchor>a77a0f2d719d5fa4d8e7f99ac77304680</Anchor>
    <Abstract>Construct and initialize a new plugin DSO. </Abstract>
    <DeclaredIn>plugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Plugin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Plugin</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin.html</Path>
    <Anchor>a00413101b30f2a6468781fa62736cd65</Anchor>
    <Abstract>Destruct this plugin handle. </Abstract>
    <DeclaredIn>plugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGood</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Plugin</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin.html</Path>
    <Anchor>a1db8f9b340a0259b7670ef98c9773bea</Anchor>
    <DeclaredIn>plugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Plugin</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin.html</Path>
    <Anchor>abcecb7ce02a3c6936087c9205162267f</Anchor>
    <Abstract>Visit all compressors. </Abstract>
    <DeclaredIn>plugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Plugin</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin.html</Path>
    <Anchor>a25d7199ee790944d97f1a0d812901c0e</Anchor>
    <Abstract>Visit all compressors. </Abstract>
    <DeclaredIn>plugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DSO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_d_s_o.html</Path>
    <Anchor>a6fb22d27230da53e2a3b95a506086b96</Anchor>
    <Abstract>Construct a new dynamic shared object. </Abstract>
    <DeclaredIn>dso.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DSO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_d_s_o.html</Path>
    <Anchor>a35eb90d1a2fe998645fb247d2418569d</Anchor>
    <Abstract>Construct and initialize a dynamic shared object. </Abstract>
    <DeclaredIn>dso.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DSO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_d_s_o.html</Path>
    <Anchor>a7cec876c76a81b4e0486bbfb505c3f16</Anchor>
    <Abstract>Destruct this DSO handle. </Abstract>
    <DeclaredIn>dso.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_d_s_o.html</Path>
    <Anchor>a88e31a7f487d3ab3a32c2f19dc176187</Anchor>
    <Abstract>Open a dynamic shared object. </Abstract>
    <DeclaredIn>dso.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_d_s_o.html</Path>
    <Anchor>a72792c9ef9ca67f0eb8be9efe3819798</Anchor>
    <Abstract>Close the DSO, invalidates retrieved function pointers. </Abstract>
    <DeclaredIn>dso.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFunctionPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_d_s_o.html</Path>
    <Anchor>ae0419ab05e56b6a4913a8a18d6d043e8</Anchor>
    <DeclaredIn>dso.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFunctionPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_d_s_o.html</Path>
    <Anchor>a80a6cc38fcda3c62f644fbdde627787c</Anchor>
    <DeclaredIn>dso.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOpen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_d_s_o.html</Path>
    <Anchor>af64721db57ae431940d0e1bbf4057d21</Anchor>
    <DeclaredIn>dso.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumCompressors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>lunchbox::Plugin</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin.html</Path>
    <Anchor>af2efd5ffe8526b19181ee1b368428240</Anchor>
    <Abstract>Get the number of engines found in the plugin. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newCompressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>lunchbox::Plugin</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin.html</Path>
    <Anchor>a0c125d0ed54445dc89027517fb2f7bf1</Anchor>
    <Abstract>Get a new compressor instance. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newDecompressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>lunchbox::Plugin</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin.html</Path>
    <Anchor>a43d6a9dd9af78413a02397dcb5b6af51</Anchor>
    <Abstract>Get a new decompressor instance. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteCompressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>lunchbox::Plugin</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin.html</Path>
    <Anchor>afb063edfea38ff15d19d6bec92f68474</Anchor>
    <Abstract>Delete the compressor instance. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteDecompressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>lunchbox::Plugin</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin.html</Path>
    <Anchor>a418fc8faa13bc7d0b83952589c47e545</Anchor>
    <Abstract>Delete the decompressor instance. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>lunchbox::Plugin</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin.html</Path>
    <Anchor>a3a7a71a3e1fa4320479e11e10d85650e</Anchor>
    <Abstract>Compress data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decompress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>lunchbox::Plugin</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin.html</Path>
    <Anchor>a13535d925f78dbf4d178145441994afb</Anchor>
    <Abstract>Decompress data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumResults</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>lunchbox::Plugin</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin.html</Path>
    <Anchor>a2fe971e8763e5dea34e3971ac4e1cb06</Anchor>
    <Abstract>Get the number of results from the last compression. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getResult</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>lunchbox::Plugin</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin.html</Path>
    <Anchor>abee1d8ecd97e57bba15d14ca0f8335eb</Anchor>
    <Abstract>Get the nth result from the last compression. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCompatible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>lunchbox::Plugin</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin.html</Path>
    <Anchor>a86f180dedc2482c792350584ee8f518a</Anchor>
    <Abstract>Check if the transfer plugin can be used. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>download</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>lunchbox::Plugin</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin.html</Path>
    <Anchor>a7892fbde4228fc46be87c4ec4fd5be87</Anchor>
    <Abstract>Download pixel data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upload</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>lunchbox::Plugin</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin.html</Path>
    <Anchor>aa61d2633e15667b239db0abb7351463d</Anchor>
    <Abstract>Upload pixel data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startDownload</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>lunchbox::Plugin</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin.html</Path>
    <Anchor>a293f12025dd6268712b4e4673a7748ba</Anchor>
    <Abstract>Start downloading pixel data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishDownload</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>lunchbox::Plugin</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin.html</Path>
    <Anchor>a5cc2a9b651d058bb2e9f7782cc3fc87d</Anchor>
    <Abstract>Start downloading pixel data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::PluginRegistry</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::PluginRegistry</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin_registry.html</Path>
    <Abstract>A registry for loaded plugins. </Abstract>
    <DeclaredIn>pluginRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PluginRegistry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PluginRegistry</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin_registry.html</Path>
    <Anchor>adc3781b16b3a9fec059f2278db3b2f82</Anchor>
    <Abstract>Construct a new plugin registry. </Abstract>
    <DeclaredIn>pluginRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PluginRegistry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PluginRegistry</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin_registry.html</Path>
    <Anchor>a8346d3bc5088283ea804035dac67e5ba</Anchor>
    <Abstract>Destruct this plugin registry. </Abstract>
    <DeclaredIn>pluginRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PluginRegistry</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin_registry.html</Path>
    <Anchor>ad09333205ee8ece237a5ea13ad397f25</Anchor>
    <Abstract>Add a new directory to search for compressor DSOs during init(). </Abstract>
    <DeclaredIn>pluginRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PluginRegistry</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin_registry.html</Path>
    <Anchor>acb26080f5cc57f23dc94a20f6b7bb1c8</Anchor>
    <Abstract>Remove a plugin directory. </Abstract>
    <DeclaredIn>pluginRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectories</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PluginRegistry</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin_registry.html</Path>
    <Anchor>a74071afc75af63d23d34f4ab736a95a5</Anchor>
    <DeclaredIn>pluginRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addLunchboxPlugins</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PluginRegistry</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin_registry.html</Path>
    <Anchor>af0be73833f91fb53f56400281631eec6</Anchor>
    <Abstract>Add the lunchbox library plugins to this registry. </Abstract>
    <DeclaredIn>pluginRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PluginRegistry</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin_registry.html</Path>
    <Anchor>a5e654266b84f007f2ea2d762b342a18a</Anchor>
    <Abstract>Visit all plugins and compressors. </Abstract>
    <DeclaredIn>pluginRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PluginRegistry</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin_registry.html</Path>
    <Anchor>a61fe74887a07bf3a72d5a9dcfddf796b</Anchor>
    <Abstract>Visit all plugins and compressors. </Abstract>
    <DeclaredIn>pluginRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::PluginVisitorT</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::PluginVisitorT</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin_visitor_t.html</Path>
    <Abstract>Visitor for all plugins and compressors of a Plugin or PluginRegistry. </Abstract>
    <DeclaredIn>pluginVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PluginVisitorT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PluginVisitorT</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin_visitor_t.html</Path>
    <Anchor>a67bf821a5931512c69189ea51f4517af</Anchor>
    <Abstract>Construct a new visitor. </Abstract>
    <DeclaredIn>pluginVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PluginVisitorT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PluginVisitorT</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin_visitor_t.html</Path>
    <Anchor>aa44a8c3ae9e84cdb87b73323598eee07</Anchor>
    <Abstract>Desctruct this visitor. </Abstract>
    <DeclaredIn>pluginVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PluginVisitorT</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin_visitor_t.html</Path>
    <Anchor>ab701f468813d2b11694bddbba26857ad</Anchor>
    <Abstract>Visit a plugin. </Abstract>
    <DeclaredIn>pluginVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PluginVisitorT</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_plugin_visitor_t.html</Path>
    <Anchor>a9745d1cb1d867833a22213a4be2bbba2</Anchor>
    <Abstract>Visit a compressor of a plugin. </Abstract>
    <DeclaredIn>pluginVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Pool</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::Pool</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_pool.html</Path>
    <Abstract>An object allocation pool. </Abstract>
    <DeclaredIn>pool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pool</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Pool</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_pool.html</Path>
    <Anchor>a5db45906124ac4d91e8000605d83821c</Anchor>
    <Abstract>Construct a new pool. </Abstract>
    <DeclaredIn>pool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Pool</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Pool</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_pool.html</Path>
    <Anchor>a06a4a67d410a662c1c20663da0a25113</Anchor>
    <Abstract>Destruct this pool. </Abstract>
    <DeclaredIn>pool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alloc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Pool</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_pool.html</Path>
    <Anchor>aa91ebc18d14b4b1e6fe16f3a3b43c5bf</Anchor>
    <DeclaredIn>pool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Pool</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_pool.html</Path>
    <Anchor>a7f0c5b7d2c434909db3f0df055a34276</Anchor>
    <Abstract>Release an item for reuse. </Abstract>
    <DeclaredIn>pool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Pool</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_pool.html</Path>
    <Anchor>a371e3a6f850a37ca31f40799058f2ab0</Anchor>
    <Abstract>Delete all cached items. </Abstract>
    <DeclaredIn>pool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Referenced</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Abstract>Base class for referenced objects. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ref</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>afeaa3a28f63f263a703c015724939609</Anchor>
    <Abstract>Increase the reference count. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unref</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>af4a138f8494231a115fb4effbe8ee939</Anchor>
    <Abstract>Decrease the reference count. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRefCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>a9dcfda6594deb51305dd3d5936568f6d</Anchor>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Referenced</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>a4194650cb8c1f901cd3dd8c1ae3a02b0</Anchor>
    <Abstract>Construct a new reference-counted object. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Referenced</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>a254310e9ede333af755434a529a85b77</Anchor>
    <Abstract>Construct a new copy of a reference-counted object. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Referenced</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>aaa461cf3467f30517b4ca4dfddc34ba6</Anchor>
    <Abstract>Destruct a reference-counted object. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_referenced.html</Path>
    <Anchor>a5a96a73f8a8f7b9b9943a905197a001c</Anchor>
    <Abstract>Assign another object to this object. </Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::RefPtr</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Abstract>A smart reference pointer, aka boost::intrusive_ptr. </Abstract>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RefPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Anchor>a4e6e2e31b1521e9fa7c9e13b0328a84a</Anchor>
    <Abstract>Construct a new, empty reference pointer. </Abstract>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RefPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Anchor>a4fc3c32f45bd44df425d4c20e27c410b</Anchor>
    <Abstract>Construct a reference pointer from a C pointer. </Abstract>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RefPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Anchor>a0c326e86abaec254baeb23e29640b473</Anchor>
    <Abstract>Construct a copy of a reference pointer. </Abstract>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RefPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Anchor>ac97a4cc6fe60c271d50a70ecc32fc537</Anchor>
    <Abstract>Construct a copy of a reference pointer of a different type. </Abstract>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RefPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Anchor>a9a5ba5ffaefc28f58ee1e9b578db30ca</Anchor>
    <Abstract>Destruct this reference pointer. </Abstract>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Anchor>a8ec4cfb5c5aaead38aedbcd91f11526f</Anchor>
    <Abstract>Assign another RefPtr to this reference pointer. </Abstract>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Anchor>a9bc8f4541ba0102780ad80af9b541761</Anchor>
    <Abstract>Assign a C pointer to this reference pointer. </Abstract>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Anchor>a1826174d8680bfe9659041340ccae871</Anchor>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Anchor>a63f026e705eb5a1cd5a4721158a32d9d</Anchor>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator bool_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Anchor>a6d2cc70e2c1c6302f20dabee76c05256</Anchor>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Anchor>a9f61fd5e1e7da0edc7d23efc10041d23</Anchor>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Anchor>a8689289b11ade04055515f012f0419e3</Anchor>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Anchor>a5366f5a9b0a2c504f8cd50f6158aa076</Anchor>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Anchor>ac667d03d76cc8399abe6631b0377722b</Anchor>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Anchor>a223555bb79099c7eb7a3b050435a4be2</Anchor>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Anchor>ac80bb04737cda53d0f8002ca45865935</Anchor>
    <Abstract>Access the held object. </Abstract>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Anchor>aa1b55787e9a2760b56bccb6743e60365</Anchor>
    <Abstract>Access the held object. </Abstract>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Anchor>ae520e31813d3b86e52b1efaf0ccc75c9</Anchor>
    <Abstract>Access the held object. </Abstract>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Anchor>a9278d1f007f18d02901b0823d43d9480</Anchor>
    <Abstract>Access the held object. </Abstract>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Anchor>a86e4121d34aea87e87980acb05c7f432</Anchor>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Anchor>a6173f53229b1569b5663c7eddf6f31a5</Anchor>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_ref_ptr.html</Path>
    <Anchor>ab93da2352d9394794adee5e3bd1fe9c9</Anchor>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::RequestFuture</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::RequestFuture</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_request_future.html</Path>
    <Abstract>A Future implementation for a RequestHandler request. </Abstract>
    <DeclaredIn>requestFuture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Future</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future&lt; bool &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>a76ed077d7196cbaa39b4ebce424ae760</Anchor>
    <Abstract>Construct a new future. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Future</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future&lt; bool &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>ade97c12a4b3fded660c5f68db3c6b7b2</Anchor>
    <Abstract>Destruct the future. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wait</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future&lt; bool &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>a79b2ef0c379f1cb79f24a5bcc519d2ed</Anchor>
    <Abstract>Wait for the promise to be fullfilled. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReady</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future&lt; bool &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>af349a2b76540d7b11a0f64fc2fd44fbc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator bool_t</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future&lt; bool &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>aaa892d7cd41729b40af845590e155446</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future&lt; bool &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>adc3ef50e647be50dde0fa026ef07120c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future&lt; bool &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>a704177dc96c94ae1cbe30950a8ef7790</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future&lt; bool &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>a471199c5a83455223250e39d32ddaae6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future&lt; bool &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>add4271bf59752f2310d6d140ac3616cb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future&lt; bool &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>a5ae95204a6405618a7bf4ca1065b94a8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;=</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future&lt; bool &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>a2f21c713fab2d41e8e023f12ea7ec672</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;=</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Future&lt; bool &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>a9439fe94c3e746f09fadf70926eb8ab7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Impl</Name>
      <APILanguage>unknown</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox::Future&lt; bool &gt;</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_future.html</Path>
    <Anchor>abe7797708b4323b00b8be91e26d9d7fc</Anchor>
    <Abstract>The wait implementation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::RequestHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_request_handler.html</Path>
    <Abstract>A thread-safe request handler. </Abstract>
    <DeclaredIn>requestHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_request_handler.html</Path>
    <Anchor>addc18d21d9f498d872448556572099d3</Anchor>
    <Abstract>Construct a new request handler. </Abstract>
    <DeclaredIn>requestHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RequestHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_request_handler.html</Path>
    <Anchor>a8d324213c475e7751ab82aa523ff4cd4</Anchor>
    <Abstract>Destruct the request handler. </Abstract>
    <DeclaredIn>requestHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_request_handler.html</Path>
    <Anchor>afbe9f0675a5cfe5ad8d22d5821681206</Anchor>
    <Abstract>Register a request. </Abstract>
    <DeclaredIn>requestHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_request_handler.html</Path>
    <Anchor>a0151004b5328cabd24c7abf079129798</Anchor>
    <Abstract>Register a request. </Abstract>
    <DeclaredIn>requestHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unregisterRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_request_handler.html</Path>
    <Anchor>ae8d9102224cd8b0d3fb7edb1b4c49396</Anchor>
    <Abstract>Unregister a request. </Abstract>
    <DeclaredIn>requestHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_request_handler.html</Path>
    <Anchor>ab16656da32e56aa1b798cb89a5d0e943</Anchor>
    <Abstract>Wait a given time for the completion of a request. </Abstract>
    <DeclaredIn>requestHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_request_handler.html</Path>
    <Anchor>a347773aa6053fe9792e124058f383c4e</Anchor>
    <Abstract>Wait for a request with an uint32_t result. </Abstract>
    <DeclaredIn>requestHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_request_handler.html</Path>
    <Anchor>a67341b70f61e7f0fce560f9bd6e7380e</Anchor>
    <Abstract>Wait for a request with a bool result. </Abstract>
    <DeclaredIn>requestHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_request_handler.html</Path>
    <Anchor>af6646a50458d182c7b43d758737150eb</Anchor>
    <Abstract>Wait for a request with an uint128_t result. </Abstract>
    <DeclaredIn>requestHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_request_handler.html</Path>
    <Anchor>a555b0867accd59149f3e5ed4264ce508</Anchor>
    <Abstract>Wait for a request without a result. </Abstract>
    <DeclaredIn>requestHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRequestServed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_request_handler.html</Path>
    <Anchor>a66935efbfb60d5885ad525370dacd689</Anchor>
    <Abstract>Poll for the completion of a request. </Abstract>
    <DeclaredIn>requestHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRequestData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_request_handler.html</Path>
    <Anchor>ad57d2e04e8d46526dfed2ae270466596</Anchor>
    <Abstract>Retrieve the user-specific data for a request. </Abstract>
    <DeclaredIn>requestHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serveRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_request_handler.html</Path>
    <Anchor>a50bdd3fc2e24d3e9ded80c6744cfc01c</Anchor>
    <Abstract>Serve a request with a void* result. </Abstract>
    <DeclaredIn>requestHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serveRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_request_handler.html</Path>
    <Anchor>aa40df728988e3f9d74d0af4c8f20efdf</Anchor>
    <Abstract>Serve a request with an uint32_t result. </Abstract>
    <DeclaredIn>requestHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serveRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_request_handler.html</Path>
    <Anchor>aad14c4592bd65259cf2d13f5144262ae</Anchor>
    <Abstract>Serve a request with a bool result. </Abstract>
    <DeclaredIn>requestHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serveRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_request_handler.html</Path>
    <Anchor>a625ac5a13e1a41b47a85963fbada8b39</Anchor>
    <Abstract>Serve a request with an uint128_t result. </Abstract>
    <DeclaredIn>requestHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasPendingRequests</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_request_handler.html</Path>
    <Anchor>ae68fa3ace992389be27a815706191244</Anchor>
    <DeclaredIn>requestHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Result</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Result</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_result.html</Path>
    <Abstract>A result returns an error code and behaves like a boolean. </Abstract>
    <DeclaredIn>result.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Result</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Result</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_result.html</Path>
    <Anchor>ae82daa1dc22757f6122baa0d9690b9d3</Anchor>
    <Abstract>Construct a new result. </Abstract>
    <DeclaredIn>result.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Result</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Result</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_result.html</Path>
    <Anchor>aa4f30f7b766e89d7d809d6306001b784</Anchor>
    <Abstract>Destruct the result. </Abstract>
    <DeclaredIn>result.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator bool_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Result</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_result.html</Path>
    <Anchor>a11da10e35a7cee4fdbfa37826b4cfb75</Anchor>
    <DeclaredIn>result.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Result</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_result.html</Path>
    <Anchor>a31d0cf33381e0179345d647ffaca1d92</Anchor>
    <DeclaredIn>result.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Result</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_result.html</Path>
    <Anchor>aed6e76e0280698485445842aab9fd7c2</Anchor>
    <DeclaredIn>result.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Result</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_result.html</Path>
    <Anchor>aa319d41cfc62e5252d1021f666e34544</Anchor>
    <DeclaredIn>result.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Result</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_result.html</Path>
    <Anchor>a59c66f6b51759cfd395461c330cc11cd</Anchor>
    <DeclaredIn>result.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Result</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_result.html</Path>
    <Anchor>ae581aff40484de468384961359045cc6</Anchor>
    <DeclaredIn>result.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::RNG</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::RNG</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_r_n_g.html</Path>
    <Abstract>A random number generator. </Abstract>
    <DeclaredIn>rng.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RNG</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RNG</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_r_n_g.html</Path>
    <Anchor>af8c6b3cbd32c333078e3a355a797bd7e</Anchor>
    <Abstract>Construct a new random number generator. </Abstract>
    <DeclaredIn>rng.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RNG</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RNG</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_r_n_g.html</Path>
    <Anchor>a49f050f441e3a767fe22ff9a53727ed8</Anchor>
    <Abstract>Destruct the random number generator. </Abstract>
    <DeclaredIn>rng.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reseed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RNG</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_r_n_g.html</Path>
    <Anchor>a3263a0a89b617a0defec13adcc0b0f97</Anchor>
    <Abstract>Re-initialize the seed value for pseudo RNG&amp;#39;s. </Abstract>
    <DeclaredIn>rng.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RNG</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_r_n_g.html</Path>
    <Anchor>a174b9f672e791c868a4eb508f26cf034</Anchor>
    <Abstract>Generate a random number. </Abstract>
    <DeclaredIn>rng.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>lunchbox::RNG</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_r_n_g.html</Path>
    <Anchor>aa481dc660fa069f03e37c2494071619d</Anchor>
    <Abstract>Initialize the Lunchbox base classes. </Abstract>
    <DeclaredIn>rng.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::ScopedMutex</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::ScopedMutex</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_scoped_mutex.html</Path>
    <Abstract>A scoped mutex. </Abstract>
    <DeclaredIn>scopedMutex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedMutex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ScopedMutex</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_scoped_mutex.html</Path>
    <Anchor>a387c45fec05d06e00fdf5de2e66b938d</Anchor>
    <Abstract>Construct a new scoped mutex and set the given lock. </Abstract>
    <DeclaredIn>scopedMutex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedMutex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ScopedMutex</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_scoped_mutex.html</Path>
    <Anchor>a7a8abf98652899fb039fa18583e19787</Anchor>
    <Abstract>Construct a new scoped mutex and set the given lock. </Abstract>
    <DeclaredIn>scopedMutex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedMutex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ScopedMutex</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_scoped_mutex.html</Path>
    <Anchor>ad4cebdbe9f9d3afab356d301a0296a38</Anchor>
    <Abstract>Move lock from rhs to new mutex. </Abstract>
    <DeclaredIn>scopedMutex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ScopedMutex</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_scoped_mutex.html</Path>
    <Anchor>a532ec9dc9b4af3b70e0fd5fa47317687</Anchor>
    <Abstract>Move lock from rhs to this mutex. </Abstract>
    <DeclaredIn>scopedMutex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedMutex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ScopedMutex</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_scoped_mutex.html</Path>
    <Anchor>a24619816c730a96138fa4a7e98703bb4</Anchor>
    <Abstract>Construct a new scoped mutex for the given Lockable data structure. </Abstract>
    <DeclaredIn>scopedMutex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ScopedMutex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ScopedMutex</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_scoped_mutex.html</Path>
    <Anchor>ab36012cb4aa0b567591aaa8dff705379</Anchor>
    <Abstract>Destruct the scoped mutex and unset the mutex. </Abstract>
    <DeclaredIn>scopedMutex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>leave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ScopedMutex</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_scoped_mutex.html</Path>
    <Anchor>a7bc4f98f18a9243c7f9b8bcd5091da32</Anchor>
    <Abstract>Leave and unlock the mutex immediately. </Abstract>
    <DeclaredIn>scopedMutex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Servus</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_servus.html</Path>
    <Abstract>Simple wrapper for ZeroConf key/value pairs. </Abstract>
    <DeclaredIn>servus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Servus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_servus.html</Path>
    <Anchor>ad5535e13fe9cf7b4429fb00e89e28623</Anchor>
    <Abstract>Create a new service handle. </Abstract>
    <DeclaredIn>servus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Servus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_servus.html</Path>
    <Anchor>aac0d8bbfa9e8e28711934daa543c4eab</Anchor>
    <Abstract>Destruct this service. </Abstract>
    <DeclaredIn>servus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_servus.html</Path>
    <Anchor>a49b48bdc62ffe2bf6ddc303d3ac9d250</Anchor>
    <Abstract>Set a key/value pair to be announced. </Abstract>
    <DeclaredIn>servus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeys</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_servus.html</Path>
    <Anchor>a237e70d45ab0c22d47fc20a372ce3f9d</Anchor>
    <DeclaredIn>servus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_servus.html</Path>
    <Anchor>a673d8193a112b35336f4a93d3909e258</Anchor>
    <DeclaredIn>servus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>announce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_servus.html</Path>
    <Anchor>ab3905704678cf5de63b64e37ee927e49</Anchor>
    <Abstract>Start announcing the registered key/value pairs. </Abstract>
    <DeclaredIn>servus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withdraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_servus.html</Path>
    <Anchor>acdda25fbb18e6276175067f4ceedb71b</Anchor>
    <Abstract>Stop announcing the registered key/value pairs. </Abstract>
    <DeclaredIn>servus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAnnounced</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_servus.html</Path>
    <Anchor>adf280b4fc99affcbbc1a94f8904f776e</Anchor>
    <DeclaredIn>servus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>discover</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_servus.html</Path>
    <Anchor>ac442d93bccd204e6edc46b1df2eb3968</Anchor>
    <Abstract>Discover all announced key/value pairs. </Abstract>
    <DeclaredIn>servus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInstances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_servus.html</Path>
    <Anchor>ae15fd4927ea39815ff67da7146e45193</Anchor>
    <DeclaredIn>servus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeys</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_servus.html</Path>
    <Anchor>a61cac399d92bb076b795af8fefeaba5f</Anchor>
    <DeclaredIn>servus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_servus.html</Path>
    <Anchor>ac282f2c2f3bcf06ade909bbfefbec16d</Anchor>
    <DeclaredIn>servus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_servus.html</Path>
    <Anchor>a9aa8edda5ce4855f944df870727a3985</Anchor>
    <DeclaredIn>servus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IF_ALL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_servus.html</Path>
    <Anchor>a1f660c4794e454ac627b5e7080dfeb7dafda56209b40673c8670c4e0dd31b1389</Anchor>
    <Abstract>use all interfaces </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IF_LOCAL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_servus.html</Path>
    <Anchor>a1f660c4794e454ac627b5e7080dfeb7da5fca551f6e2d6e5b20c73bbd59c5367f</Anchor>
    <Abstract>only local interfaces </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Servus::Result</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Servus::Result</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_servus_1_1_result.html</Path>
    <Abstract>The ZeroConf operation result code. </Abstract>
    <DeclaredIn>servus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Result</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus::Result</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_servus_1_1_result.html</Path>
    <Anchor>a1ba1197ac5a1d38258e396fa31403dd2</Anchor>
    <Abstract>Destruct the result. </Abstract>
    <DeclaredIn>servus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus::Result</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_servus_1_1_result.html</Path>
    <Anchor>a0d951aab2a4293632421078eb8dbcb1c</Anchor>
    <DeclaredIn>servus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Result</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Result</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_result.html</Path>
    <Anchor>ae82daa1dc22757f6122baa0d9690b9d3</Anchor>
    <Abstract>Construct a new result. </Abstract>
    <DeclaredIn>result.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator bool_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Result</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_result.html</Path>
    <Anchor>a11da10e35a7cee4fdbfa37826b4cfb75</Anchor>
    <DeclaredIn>result.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Result</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_result.html</Path>
    <Anchor>a31d0cf33381e0179345d647ffaca1d92</Anchor>
    <DeclaredIn>result.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Result</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_result.html</Path>
    <Anchor>aed6e76e0280698485445842aab9fd7c2</Anchor>
    <DeclaredIn>result.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Result</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_result.html</Path>
    <Anchor>aa319d41cfc62e5252d1021f666e34544</Anchor>
    <DeclaredIn>result.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Result</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_result.html</Path>
    <Anchor>a59c66f6b51759cfd395461c330cc11cd</Anchor>
    <DeclaredIn>result.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PENDING</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>lunchbox::Servus::Result</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_servus_1_1_result.html</Path>
    <Anchor>acaa73d60850a633a3ba1bcc8f6393280</Anchor>
    <Abstract>operation did not complete. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NOT_SUPPORTED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>lunchbox::Servus::Result</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_servus_1_1_result.html</Path>
    <Anchor>aea0f5b15943c3d7c675cd5b8b59ee80f</Anchor>
    <Abstract>Lunchbox compiled without ZeroConf support. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::SpinLock</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_spin_lock.html</Path>
    <Abstract>A fast lock for uncontended memory access. </Abstract>
    <DeclaredIn>spinLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpinLock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_spin_lock.html</Path>
    <Anchor>a213115e88c1f4c1d0ac822e0545ff745</Anchor>
    <Abstract>Construct a new lock. </Abstract>
    <DeclaredIn>spinLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpinLock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_spin_lock.html</Path>
    <Anchor>a120590c9dfffa12400099d57bbc04a95</Anchor>
    <Abstract>Destruct the lock. </Abstract>
    <DeclaredIn>spinLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_spin_lock.html</Path>
    <Anchor>a326a6dd70cd9d7e4803f0d7e6203179f</Anchor>
    <Abstract>Acquire the lock exclusively. </Abstract>
    <DeclaredIn>spinLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_spin_lock.html</Path>
    <Anchor>a1d5acf7ddcdf3d219fa0820ddd5a4182</Anchor>
    <Abstract>Release an exclusive lock. </Abstract>
    <DeclaredIn>spinLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trySet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_spin_lock.html</Path>
    <Anchor>a20ff2f9103129c6f40da3ea3a3855186</Anchor>
    <Abstract>Attempt to acquire the lock exclusively. </Abstract>
    <DeclaredIn>spinLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_spin_lock.html</Path>
    <Anchor>aeda49b3e51bdff98261ee1bb4daffe07</Anchor>
    <Abstract>Acquire the lock shared with other readers. </Abstract>
    <DeclaredIn>spinLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsetRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_spin_lock.html</Path>
    <Anchor>a53f617c04b86df93afb91dc0b831ed48</Anchor>
    <Abstract>Release a shared read lock. </Abstract>
    <DeclaredIn>spinLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trySetRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_spin_lock.html</Path>
    <Anchor>af76ab503773035c17b0476f46a962663</Anchor>
    <Abstract>Attempt to acquire the lock shared with other readers. </Abstract>
    <DeclaredIn>spinLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_spin_lock.html</Path>
    <Anchor>a37517d5c33372a9ac03bc38259a60d63</Anchor>
    <Abstract>Test if the lock is set. </Abstract>
    <DeclaredIn>spinLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSetWrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_spin_lock.html</Path>
    <Anchor>a90f5c1ab87eea2518df40d4bb0586456</Anchor>
    <Abstract>Test if the lock is set exclusively. </Abstract>
    <DeclaredIn>spinLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSetRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_spin_lock.html</Path>
    <Anchor>aad824c4484d0b506960285ff27bf9900</Anchor>
    <Abstract>Test if the lock is set shared. </Abstract>
    <DeclaredIn>spinLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Thread</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread.html</Path>
    <Abstract>Utility class to execute code in a separate execution thread. </Abstract>
    <DeclaredIn>thread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Thread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread.html</Path>
    <Anchor>a8666750b691db6ae861b3955a62f9c47</Anchor>
    <Abstract>Construct a new thread. </Abstract>
    <DeclaredIn>thread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Thread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread.html</Path>
    <Anchor>afc1dfa97e813ef75b6e5db00916062bc</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>thread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Thread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread.html</Path>
    <Anchor>a72b163c1833538fcd5a13a1337598e27</Anchor>
    <Abstract>Destruct the thread. </Abstract>
    <DeclaredIn>thread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread.html</Path>
    <Anchor>a2d831e31239ad0645147dfa2ce85df90</Anchor>
    <Abstract>Start the thread. </Abstract>
    <DeclaredIn>thread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread.html</Path>
    <Anchor>a16b60b105263868de86fe3979bd9a104</Anchor>
    <Abstract>The init function for the child thread. </Abstract>
    <DeclaredIn>thread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread.html</Path>
    <Anchor>a83d5f979e5054e3900c360416652bca6</Anchor>
    <Abstract>The entry function for the child thread. </Abstract>
    <DeclaredIn>thread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread.html</Path>
    <Anchor>aa8baa2379d96434079305ddb028ff71d</Anchor>
    <Abstract>Exit the child thread immediately. </Abstract>
    <DeclaredIn>thread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread.html</Path>
    <Anchor>a2a0ede808fa0f62fa05f9dfac00bb21e</Anchor>
    <Abstract>Cancel (stop) the child thread. </Abstract>
    <DeclaredIn>thread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>join</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread.html</Path>
    <Anchor>a237b26381c30e393d697dda3d9c7a24e</Anchor>
    <Abstract>Wait for the exit of the child thread. </Abstract>
    <DeclaredIn>thread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStopped</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread.html</Path>
    <Anchor>ac092d27b5ef93b90f70756cd3ef97805</Anchor>
    <Abstract>Return if the thread is stopped. </Abstract>
    <DeclaredIn>thread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread.html</Path>
    <Anchor>ad344d16f1779a735472a93504d4fc2d1</Anchor>
    <Abstract>Return if the thread is running. </Abstract>
    <DeclaredIn>thread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread.html</Path>
    <Anchor>ac4db50c50b5dcd3fc695fa28150f1a85</Anchor>
    <DeclaredIn>thread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSelfThreadID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread.html</Path>
    <Anchor>ac75e1e4092033f0cc8d763beb1d39349</Anchor>
    <DeclaredIn>thread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NONE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread.html</Path>
    <Anchor>a478df724e8cfb6881d2017b8fac87275ad2a05346cca184ddfbe0d15ac49f7bb8</Anchor>
    <Abstract>Don&amp;#39;t set any affinity. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CORE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread.html</Path>
    <Anchor>a478df724e8cfb6881d2017b8fac87275abdc093f548630be3a35d5f76d10bd8dc</Anchor>
    <Abstract>Bind to a specific CPU core. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SOCKET</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread.html</Path>
    <Anchor>a478df724e8cfb6881d2017b8fac87275af8d8d241627e0789e9034cd0ffeb7a57</Anchor>
    <Abstract>Bind to all cores of a specific socket (CPU) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SOCKET_MAX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread.html</Path>
    <Anchor>a478df724e8cfb6881d2017b8fac87275a5402e43e4c126064aeea8f7bdd3e9e1d</Anchor>
    <Abstract>Highest bindable CPU. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::ThreadID</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread_i_d.html</Path>
    <Abstract>An utility class to wrap OS-specific thread identifiers. </Abstract>
    <DeclaredIn>threadID.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread_i_d.html</Path>
    <Anchor>af3cca8ef9971289c2f57e6dd2052b850</Anchor>
    <Abstract>Construct a new, zero thread identifier. </Abstract>
    <DeclaredIn>threadID.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread_i_d.html</Path>
    <Anchor>a564a26c356deaefb527f579852388657</Anchor>
    <Abstract>Construct a copy of a thread identifier. </Abstract>
    <DeclaredIn>threadID.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ThreadID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread_i_d.html</Path>
    <Anchor>a0483d3b847d85bb216e5d1f006a017e0</Anchor>
    <Abstract>Destruct this thread identifier. </Abstract>
    <DeclaredIn>threadID.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread_i_d.html</Path>
    <Anchor>aad9f3fbf2957aedd4bc82d5edc34fa83</Anchor>
    <Abstract>Assign another thread identifier. </Abstract>
    <DeclaredIn>threadID.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread_i_d.html</Path>
    <Anchor>a2db8bb9f5ebcd910762d19476a901d30</Anchor>
    <DeclaredIn>threadID.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread_i_d.html</Path>
    <Anchor>a6f18f79300843c619439085558026422</Anchor>
    <DeclaredIn>threadID.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>lunchbox::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_thread_i_d.html</Path>
    <Anchor>a4f594a05e4f1b084fd0225027aea38f5</Anchor>
    <Abstract>Print the thread to the given output stream. </Abstract>
    <DeclaredIn>threadID.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::TimedLock</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::TimedLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_timed_lock.html</Path>
    <Abstract>A mutex with timeout capabilities. </Abstract>
    <DeclaredIn>timedLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TimedLock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::TimedLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_timed_lock.html</Path>
    <Anchor>a835f8a09b49c762e127948be34b42cb1</Anchor>
    <Abstract>Construct a new timed lock. </Abstract>
    <DeclaredIn>timedLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~TimedLock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::TimedLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_timed_lock.html</Path>
    <Anchor>a6483ed1453eca9cfedd69a1aea2a09df</Anchor>
    <Abstract>Destruct the lock. </Abstract>
    <DeclaredIn>timedLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::TimedLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_timed_lock.html</Path>
    <Anchor>ac9c0344534a0743b676ef76980468072</Anchor>
    <Abstract>Set the lock. </Abstract>
    <DeclaredIn>timedLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::TimedLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_timed_lock.html</Path>
    <Anchor>a9901eab41d9e239cc759c43260f6f773</Anchor>
    <Abstract>Release the lock. </Abstract>
    <DeclaredIn>timedLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trySet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::TimedLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_timed_lock.html</Path>
    <Anchor>a40611b5db4bd77c251f88267b000537b</Anchor>
    <Abstract>Attempt to set the lock. </Abstract>
    <DeclaredIn>timedLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::TimedLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_timed_lock.html</Path>
    <Anchor>a7bdad91b41b3c43e8690cd8d20f312bf</Anchor>
    <Abstract>Test if the lock is set. </Abstract>
    <DeclaredIn>timedLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::TLS</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::TLS</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_t_l_s.html</Path>
    <Abstract>Provides thread-local storage API used by PerThread and PerThreadRef. </Abstract>
    <DeclaredIn>tls.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TLS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::TLS</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_t_l_s.html</Path>
    <Anchor>aa531c54c1cd27dbe5815749355de2774</Anchor>
    <Abstract>Construct a new per-thread storage. </Abstract>
    <DeclaredIn>tls.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~TLS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::TLS</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_t_l_s.html</Path>
    <Anchor>a7c7862093882df05dc9b391c6c4d8897</Anchor>
    <Abstract>Destruct the per-thread storage. </Abstract>
    <DeclaredIn>tls.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::TLS</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_t_l_s.html</Path>
    <Anchor>a9500d2c0404fdeb92de6a40216c4893e</Anchor>
    <Abstract>Set the data for this thread-local storage. </Abstract>
    <DeclaredIn>tls.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::TLS</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_t_l_s.html</Path>
    <Anchor>a25c4a8403dd1e76028ec834bc413b2d8</Anchor>
    <DeclaredIn>tls.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::TLS</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_t_l_s.html</Path>
    <Anchor>a19fb198df5a41b1a4c4a5da073a381b7</Anchor>
    <DeclaredIn>tls.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::uint128_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Abstract>A base type for 128 bit unsigned integer values. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uint128_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a3621be3a67a067b67db428eec33d71f0</Anchor>
    <Abstract>Construct a new 128 bit integer with a default value. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uint128_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>ae63985282d5207d8a75d8d4f8c0d7d13</Anchor>
    <Abstract>Construct a new 128 bit integer with a default value. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uint128_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>aff26d8ed9b9e58800be4027181bbec84</Anchor>
    <Abstract>Construct a new 128 bit integer with a default value. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uint128_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>ac01534feb4862c17509822f3be64fd3d</Anchor>
    <Abstract>Construct a new 128 bit integer with default values. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uint128_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a3556dc76f85797d6659661cba3bd4cae</Anchor>
    <Abstract>Construct a new 128 bit integer from a string representation. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUUID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a9418b91988450196bb70fcf4fa71dac8</Anchor>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a9f0ea3a466937f74a2da69e7a1df2dff</Anchor>
    <Abstract>Assign another 128 bit value. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>ab3c2b4c620d5e08d2dd7e5a6e19f3bbd</Anchor>
    <Abstract>Assign another 64 bit value. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>ad1dcd7a42eeeb577129f4134e8cfed8d</Anchor>
    <Abstract>Assign an integer value. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>addc759a03ab745a91b30447d7dbf4a22</Anchor>
    <Abstract>Assign an 128 bit value from a std::string. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a203066d3164ff32c6ab0177f85f217bf</Anchor>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>ac396f25c499d951aabba1e37dc4ba3de</Anchor>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a6131d98fd3c6eb84366e13cca3980730</Anchor>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>aa5df1de13e261a1f675bf9037d08d7fd</Anchor>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a1888e1e44d478a56779532c0fd8346f8</Anchor>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a36090ac39c0aff2b451d8dbd18f4519c</Anchor>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a46bd5a6ae4656edaec339d47587eaef9</Anchor>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a6576261a29d3dd35c8d1616909088128</Anchor>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>ae1b31639a8404de8e4bf36a1755586eb</Anchor>
    <Abstract>Increment the value. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a243fc61aac6844ba5a4c528f59944214</Anchor>
    <Abstract>Decrement the value. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>ab47be32a012c289f704d5a5836409469</Anchor>
    <Abstract>Add value and return the new value. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>low</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>ad523173c8e420c6f56e00cf957526479</Anchor>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>high</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a713b4cdae102f0a855da82a52ec34c99</Anchor>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>low</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>abfdac13d891e8599e5ad8d7acf58ed05</Anchor>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>high</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a801f681400d60cd75de56dacb5dc192a</Anchor>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getShortString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a9aa48f23b07951da70acaa436d65402a</Anchor>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a271f2145f2a67820ce09415ffd17c4df</Anchor>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>aa7dded089858b8a5e6bba21a3eba22a5</Anchor>
    <Abstract>Serialize this object to a boost archive. </Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::UnorderedIntervalSet</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::UnorderedIntervalSet</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_unordered_interval_set.html</Path>
    <Abstract>A container to store intervals of elements efficently. </Abstract>
    <DeclaredIn>unorderedIntervalSet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnorderedIntervalSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::UnorderedIntervalSet</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_unordered_interval_set.html</Path>
    <Anchor>a01c729a43f08dd7bdad5fb3b594b7e65</Anchor>
    <Abstract>Construct a new interval set. </Abstract>
    <DeclaredIn>unorderedIntervalSet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::UnorderedIntervalSet</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_unordered_interval_set.html</Path>
    <Anchor>ad5a7f406d7ffcc10c776639818e1b172</Anchor>
    <Abstract>Insert a new element. </Abstract>
    <DeclaredIn>unorderedIntervalSet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::UnorderedIntervalSet</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_unordered_interval_set.html</Path>
    <Anchor>aea818978ce26e0ad11bcedd4aed3eb00</Anchor>
    <Abstract>Insert a new closed interval of elements. </Abstract>
    <DeclaredIn>unorderedIntervalSet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::UnorderedIntervalSet</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_unordered_interval_set.html</Path>
    <Anchor>a1008fef8eb077791ae0994a26dbdf63c</Anchor>
    <Abstract>Insert another interval set into this. </Abstract>
    <DeclaredIn>unorderedIntervalSet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>erase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::UnorderedIntervalSet</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_unordered_interval_set.html</Path>
    <Anchor>a2f6b6ecdc0b9742ecd25b467d0971ee2</Anchor>
    <Abstract>Remove the given element. </Abstract>
    <DeclaredIn>unorderedIntervalSet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>erase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::UnorderedIntervalSet</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_unordered_interval_set.html</Path>
    <Anchor>ab7c45e9524bc5d5ea5e87c8e29112b98</Anchor>
    <Abstract>Remove all element inside the given closed interval. </Abstract>
    <DeclaredIn>unorderedIntervalSet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::UnorderedIntervalSet</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_unordered_interval_set.html</Path>
    <Anchor>a3a02e237afb9e62f947a3370bf5cb4da</Anchor>
    <Abstract>Remove all stored elements. </Abstract>
    <DeclaredIn>unorderedIntervalSet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::UnorderedIntervalSet</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_unordered_interval_set.html</Path>
    <Anchor>a17ad2cb4fc17b854fbdcc3243b3cb7c7</Anchor>
    <Abstract>Swap this container with another one. </Abstract>
    <DeclaredIn>unorderedIntervalSet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exists</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::UnorderedIntervalSet</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_unordered_interval_set.html</Path>
    <Anchor>ad1c7a78a45df26a098556772d8688192</Anchor>
    <DeclaredIn>unorderedIntervalSet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::UnorderedIntervalSet</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_unordered_interval_set.html</Path>
    <Anchor>a15637167290d8c0cd1484ea8c2f0ab84</Anchor>
    <DeclaredIn>unorderedIntervalSet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::UnorderedIntervalSet</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_unordered_interval_set.html</Path>
    <Anchor>af4b37c57c0f30842085b268d557aa817</Anchor>
    <DeclaredIn>unorderedIntervalSet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::UnorderedIntervalSet</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_unordered_interval_set.html</Path>
    <Anchor>a1b020deac366bbd605079b3703cd985f</Anchor>
    <DeclaredIn>unorderedIntervalSet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::UnorderedIntervalSet</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_unordered_interval_set.html</Path>
    <Anchor>a9c3779cc34b1cfeb3843050e1dcec483</Anchor>
    <DeclaredIn>unorderedIntervalSet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::UnorderedIntervalSet</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_unordered_interval_set.html</Path>
    <Anchor>ade99c6197a33e90e403936a71a00a9a8</Anchor>
    <DeclaredIn>unorderedIntervalSet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Uploader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Uploader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_uploader.html</Path>
    <Abstract>A C++ class to handle one uploader plugin instance. </Abstract>
    <DeclaredIn>uploader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Uploader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Uploader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_uploader.html</Path>
    <Anchor>a5f87baafa24cbc4809038b1061b56f8f</Anchor>
    <Abstract>Construct a new, invalid uploader instance. </Abstract>
    <DeclaredIn>uploader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Uploader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Uploader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_uploader.html</Path>
    <Anchor>a9c452ee847766de052b95098004a359e</Anchor>
    <Abstract>Construct a new, named uploader instance. </Abstract>
    <DeclaredIn>uploader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Uploader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Uploader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_uploader.html</Path>
    <Anchor>af13c76514cd9475a2f87fc8cc6b57351</Anchor>
    <Abstract>Destruct this uploader. </Abstract>
    <DeclaredIn>uploader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGood</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Uploader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_uploader.html</Path>
    <Anchor>a09e43ef0d47c1b2daa5272e20e873e9d</Anchor>
    <DeclaredIn>uploader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Uploader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_uploader.html</Path>
    <Anchor>aa89a6ea98224efb8c0b4955c34e48855</Anchor>
    <DeclaredIn>uploader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supports</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Uploader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_uploader.html</Path>
    <Anchor>ab61874a188c42f2be1ad00849bfe109a</Anchor>
    <DeclaredIn>uploader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Uploader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_uploader.html</Path>
    <Anchor>a6231724c1571234eadd8a366c98fac8b</Anchor>
    <DeclaredIn>uploader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Uploader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_uploader.html</Path>
    <Anchor>a017c79899b2e781064ebd5d303a0813a</Anchor>
    <Abstract>Set up a new, named uploader instance. </Abstract>
    <DeclaredIn>uploader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Uploader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_uploader.html</Path>
    <Anchor>a4c1d2994ccc7abb935145bf39408f1da</Anchor>
    <Abstract>Set up a new, auto-selected uploader instance. </Abstract>
    <DeclaredIn>uploader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Uploader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_uploader.html</Path>
    <Anchor>a8adcc1951882e2c0be38c261a635e863</Anchor>
    <Abstract>Reset to EQ_COMPRESSOR_NONE. </Abstract>
    <DeclaredIn>uploader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upload</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Uploader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_uploader.html</Path>
    <Anchor>aadb1773a1e0bb8722269b0d199143bbc</Anchor>
    <Abstract>Upload data from cpu to the frame buffer or texture. </Abstract>
    <DeclaredIn>uploader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>choose</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Uploader</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_uploader.html</Path>
    <Anchor>aefffd757d6c0f3486b6d095cb7971c7e</Anchor>
    <Abstract>Find the best uploader in all plugins for the given parameters. </Abstract>
    <DeclaredIn>uploader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Version</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_version.html</Path>
    <Abstract>Information about the current Lunchbox version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Version</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_version.html</Path>
    <Anchor>a9f717653bfc89cfef773be1e6398f10c</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Version</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_version.html</Path>
    <Anchor>a1d10573370430ab037f4e5b02c06721e</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Version</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_version.html</Path>
    <Anchor>a3ca4936d3d861756c793be88f10ea08e</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Version</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_version.html</Path>
    <Anchor>a52c485b52956e7be167f6971230be29d</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Version</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_version.html</Path>
    <Anchor>ae466e7c766b8f9131f47b1a07ad2755c</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Version</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_version.html</Path>
    <Anchor>a47baacc0cb3a3f70e445e84925b1a676</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Version</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1_version.html</Path>
    <Anchor>aeedd906453c48c819b5ccd9b784d0f32</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
</Tokens>
