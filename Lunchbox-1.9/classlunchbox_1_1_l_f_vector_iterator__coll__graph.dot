digraph "lunchbox::LFVectorIterator&lt; V, T &gt;"
{
  edge [fontname="Sans",fontsize="10",labelfontname="Sans",labelfontsize="10"];
  node [fontname="Sans",fontsize="10",shape=record];
  Node1 [label="{lunchbox::LFVectorIterator\l\< V, T \>\n||+ LFVectorIterator()\l+ LFVectorIterator()\l+ operator*()\l+ operator-\>()\l+ operator[]()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Sans"];
  Node2 [label="{lunchbox::IndexIterator\l\< LFVectorIterator\< V,\l T \>, V, T \>\n|# container_\l# i_\l|+ IndexIterator()\l+ IndexIterator()\l+ IndexIterator()\l+ operator=()\l+ operator=()\l+ operator++()\l+ operator++()\l+ operator--()\l+ operator--()\l+ operator+()\land 11 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlunchbox_1_1_index_iterator.html"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Sans"];
  Node3 [label="{std::iterator\< std\l::random_access_iterator\l_tag, T \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
}
