var namespacevmml =
[
    [ "blas", null, [
      [ "daxpy_params", "structvmml_1_1blas_1_1daxpy__params.html", "structvmml_1_1blas_1_1daxpy__params" ],
      [ "dgemm_params", "structvmml_1_1blas_1_1dgemm__params.html", "structvmml_1_1blas_1_1dgemm__params" ],
      [ "dot_params", "structvmml_1_1blas_1_1dot__params.html", "structvmml_1_1blas_1_1dot__params" ]
    ] ],
    [ "lapack", null, [
      [ "xgesv_params", "structvmml_1_1lapack_1_1xgesv__params.html", "structvmml_1_1lapack_1_1xgesv__params" ],
      [ "gaussian_elimination", "structvmml_1_1lapack_1_1gaussian__elimination.html", "structvmml_1_1lapack_1_1gaussian__elimination" ],
      [ "llsq_params_xgels", "structvmml_1_1lapack_1_1llsq__params__xgels.html", "structvmml_1_1lapack_1_1llsq__params__xgels" ],
      [ "linear_least_squares_xgels", "structvmml_1_1lapack_1_1linear__least__squares__xgels.html", "structvmml_1_1lapack_1_1linear__least__squares__xgels" ],
      [ "llsq_params_xgesv", "structvmml_1_1lapack_1_1llsq__params__xgesv.html", "structvmml_1_1lapack_1_1llsq__params__xgesv" ],
      [ "linear_least_squares_xgesv", "structvmml_1_1lapack_1_1linear__least__squares__xgesv.html", "structvmml_1_1lapack_1_1linear__least__squares__xgesv" ],
      [ "svd_params", "structvmml_1_1lapack_1_1svd__params.html", "structvmml_1_1lapack_1_1svd__params" ],
      [ "eigs_params", "structvmml_1_1lapack_1_1eigs__params.html", "structvmml_1_1lapack_1_1eigs__params" ]
    ] ],
    [ "math", null, [
      [ "abs_less", "structvmml_1_1math_1_1abs__less.html", "structvmml_1_1math_1_1abs__less" ],
      [ "abs_greater", "structvmml_1_1math_1_1abs__greater.html", "structvmml_1_1math_1_1abs__greater" ]
    ] ],
    [ "AxisAlignedBoundingBox", "classvmml_1_1_axis_aligned_bounding_box.html", "classvmml_1_1_axis_aligned_bounding_box" ],
    [ "blas_daxpy", "structvmml_1_1blas__daxpy.html", "structvmml_1_1blas__daxpy" ],
    [ "blas_dgemm", "structvmml_1_1blas__dgemm.html", "structvmml_1_1blas__dgemm" ],
    [ "blas_dot", "structvmml_1_1blas__dot.html", "structvmml_1_1blas__dot" ],
    [ "cp3_tensor", "classvmml_1_1cp3__tensor.html", "classvmml_1_1cp3__tensor" ],
    [ "enable_if", "structvmml_1_1enable__if.html", "structvmml_1_1enable__if" ],
    [ "enable_if< false, T >", "structvmml_1_1enable__if_3_01false_00_01_t_01_4.html", null ],
    [ "except_here", "structvmml_1_1except__here.html", "structvmml_1_1except__here" ],
    [ "exception", "classvmml_1_1exception.html", "classvmml_1_1exception" ],
    [ "frustum", "classvmml_1_1frustum.html", "classvmml_1_1frustum" ],
    [ "frustum_culler", "classvmml_1_1frustum__culler.html", "classvmml_1_1frustum__culler" ],
    [ "intersection", "classvmml_1_1intersection.html", "classvmml_1_1intersection" ],
    [ "lapack_svd", "structvmml_1_1lapack__svd.html", "structvmml_1_1lapack__svd" ],
    [ "lapack_sym_eigs", "structvmml_1_1lapack__sym__eigs.html", "structvmml_1_1lapack__sym__eigs" ],
    [ "linear_least_squares", "structvmml_1_1linear__least__squares.html", "structvmml_1_1linear__least__squares" ],
    [ "lowpass_filter", "classvmml_1_1lowpass__filter.html", "classvmml_1_1lowpass__filter" ],
    [ "matrix", "classvmml_1_1matrix.html", "classvmml_1_1matrix" ],
    [ "set_to_zero_functor", "structvmml_1_1set__to__zero__functor.html", "structvmml_1_1set__to__zero__functor" ],
    [ "set_to_identity_functor", "structvmml_1_1set__to__identity__functor.html", "structvmml_1_1set__to__identity__functor" ],
    [ "matrix_equals_allow_inverted_rows", "structvmml_1_1matrix__equals__allow__inverted__rows.html", "structvmml_1_1matrix__equals__allow__inverted__rows" ],
    [ "matrix_equals_allow_inverted_columns", "structvmml_1_1matrix__equals__allow__inverted__columns.html", "structvmml_1_1matrix__equals__allow__inverted__columns" ],
    [ "compute_pseudoinverse", "classvmml_1_1compute__pseudoinverse.html", "classvmml_1_1compute__pseudoinverse" ],
    [ "qtucker3_tensor", "classvmml_1_1qtucker3__tensor.html", "classvmml_1_1qtucker3__tensor" ],
    [ "quaternion", "classvmml_1_1quaternion.html", "classvmml_1_1quaternion" ],
    [ "t3_converter", "classvmml_1_1t3__converter.html", "classvmml_1_1t3__converter" ],
    [ "t3_hooi", "classvmml_1_1t3__hooi.html", "classvmml_1_1t3__hooi" ],
    [ "t3_hopm", "classvmml_1_1t3__hopm.html", "classvmml_1_1t3__hopm" ],
    [ "t3_hosvd", "classvmml_1_1t3__hosvd.html", "classvmml_1_1t3__hosvd" ],
    [ "t3_ihooi", "classvmml_1_1t3__ihooi.html", "classvmml_1_1t3__ihooi" ],
    [ "t3_ihopm", "classvmml_1_1t3__ihopm.html", "classvmml_1_1t3__ihopm" ],
    [ "t3_ttm", "classvmml_1_1t3__ttm.html", "classvmml_1_1t3__ttm" ],
    [ "t4_converter", "classvmml_1_1t4__converter.html", "classvmml_1_1t4__converter" ],
    [ "t4_hooi", "classvmml_1_1t4__hooi.html", "classvmml_1_1t4__hooi" ],
    [ "t4_hosvd", "classvmml_1_1t4__hosvd.html", "classvmml_1_1t4__hosvd" ],
    [ "t4_ttm", "classvmml_1_1t4__ttm.html", null ],
    [ "tensor3", "classvmml_1_1tensor3.html", "classvmml_1_1tensor3" ],
    [ "tensor3_iterator", "classvmml_1_1tensor3__iterator.html", "classvmml_1_1tensor3__iterator" ],
    [ "tensor3_const_iterator", "classvmml_1_1tensor3__const__iterator.html", "classvmml_1_1tensor3__const__iterator" ],
    [ "tensor4", "classvmml_1_1tensor4.html", "classvmml_1_1tensor4" ],
    [ "tensor_mmapper", "classvmml_1_1tensor__mmapper.html", "classvmml_1_1tensor__mmapper" ],
    [ "tensor_stats", "classvmml_1_1tensor__stats.html", "classvmml_1_1tensor__stats" ],
    [ "tucker3_exporter", "classvmml_1_1tucker3__exporter.html", "classvmml_1_1tucker3__exporter" ],
    [ "tucker3_importer", "classvmml_1_1tucker3__importer.html", "classvmml_1_1tucker3__importer" ],
    [ "tucker3_tensor", "classvmml_1_1tucker3__tensor.html", "classvmml_1_1tucker3__tensor" ],
    [ "tucker4_tensor", "classvmml_1_1tucker4__tensor.html", "classvmml_1_1tucker4__tensor" ],
    [ "validator", "classvmml_1_1validator.html", null ],
    [ "vector", "classvmml_1_1vector.html", "classvmml_1_1vector" ]
];